{"version":3,"sources":["assets/examio.png","components/Loading.js","pages/Home.js","functions/function.js","assets/backarr.png","components/Exam.js","assets/examio2.png","assets/profile.png","components/Examinee.js","pages/Account.js","pages/Login.js","pages/Signup.js","components/QuestionPaper.js","pages/Hall.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","props","timer","useEffect","show","count","setInterval","i","which","document","getElementById","style","width","height","clearInterval","className","src","examio","display","justifyContent","alignItems","marginTop","id","Home","user","name","API_URL","apiFetch","a","method","endPoint","body","destination","fetch","JSON","stringify","headers","response","status","json","res","data","console","log","CountDownTimer","useState","setShow","beautify","num","dest","then","start","now","Date","curr_time","end","duration","Math","floor","days","hours","minutes","secs","innerHTML","undefined","children","big","fontSize","home_url","ExamLogs","exam","overflow","position","onClick","getElementsByClassName","textAlign","time","toLocaleDateString","toLocaleTimeString","generateLogs","color","ExamEdit","setData","margin","arrangeData","key","regularInput","place","type","placeholder","onChange","event","ref","target","value","dateChange","self","check","other","date","String","toJSON","cap_key","toUpperCase","join","comp","push","padding","borderBottom","includes","div","transition","generatePage","load","token","changes","reload","mes","header","scrollTop","setTimeout","displayError","QuestionEdit","quest","setQuest","page","setPage","objnum","setObj","message","container","handleQuestionCreate","preventDefault","formData","FormData","mark","options","get","question","option","mode","optionGenerate","required","addEventListener","UpdateQuestion","field","setField","setMode","form","number","length","append","list","error","answer","setOptions","getField","min","marginBottom","arrange","str","replace","overflowY","questionList","questions","ExamDetail","loading","examData","setExam","getData","destination1","destination2","Promise","all","exam_id","calcPercentage","total","ratio","round","view","back","borderRadius","backgroundImage","backgroundColor","paddingTop","href","flexDirection","window","location","selectPage","ViewPage","sorted","setSort","buttonFunc","ongoing","complete","exams","content","date_stamp","reverse","generateExamList","CreateExam","disableValue","e","valued","checked","input","input2","removeAttribute","setAttribute","border","handleExamCreate","num_of_students","verification","specific","personal","exam_code","Number","change","removeEventListener","max","disabled","marginLeft","Exam","exam_data","exam_page","setExamPage","fetchExamDetails","history","useHistory","joinHall","deleteExam","displayExtended","RegisterExam","handleRegister","remark","Examinee","Sidebar","word","butt","setButt","buttons","setButtons","butList","butCompList","innerWidth","indexOf","url_push","toLowerCase","profile","email","Account","userInfo","setInfo","loader","info","cursor","match","params","role","Login","whether","handleLoginSubmit","password","res_data","login","loginFunc","close","err","head","handleRequestError","getFullYear","Signup","handleSubmit","phone","ExamNav","ExamFoot","ExamTitle","title","Timer","timer_tag","hour","sec","ExamPaper","updateAnswer","ans","split","Cookies","slice","set","Question","what","generate","QuestionPaper","details","HallNav","HallFoot","Invigilator","examState","setExamState","code","state","ChangeUser","top","outerHeight","left","outerWidth","loginWin","open","process","onunload","changeMode","start_time","detail","organizeHall","Hall","hall","hallData","setLoad","loadFunc","exam_token","dest1","dest2","displayMessage","registerExam","generateHall","App","AOS","init","Cookie","setUser","expires","logout","remove","basename","path","exact","component","logoutFunc","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4e87f3dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/examio.1004fcba.png\";","import { useEffect } from \"react\";\r\nimport examio from \"../assets/examio.png\";\r\nimport \"../css/loading.css\";\r\n\r\nfunction Loading(props) {\r\n    var timer;\r\n\r\n    useEffect(() => {\r\n        if (props.show) {\r\n            var count = 1;\r\n            timer = setInterval(() => {\r\n                for (let i = 1; i < 4; i++) {\r\n                    let which = document.getElementById(`load${i}`)\r\n\r\n                    if (i === count) {\r\n                        which.style.width = \"13px\";\r\n                        which.style.height = \"13px\";\r\n                    } else {\r\n                        which.style.width = \"10px\";\r\n                        which.style.height = \"10px\";\r\n                    }\r\n                }\r\n\r\n                if (count === 3) {\r\n                    count = 1;\r\n                } else {\r\n                    count++;\r\n                }\r\n            }, 500)\r\n        } else {\r\n            clearInterval(timer)\r\n        }\r\n\r\n        return function cleanup() {\r\n            clearInterval(timer)\r\n        }\r\n\r\n    }, [props])\r\n\r\n    return props.show ? (\r\n        <div className=\"load-center\">\r\n            <img src={examio} height=\"30\" width=\"120\"></img>\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                alignItems: \"center\",\r\n                width: \"50px\",\r\n                height: \"30px\",\r\n                marginTop: \"10px\"\r\n            }}>\r\n                <div id=\"load1\">\r\n\r\n                </div>\r\n                <div id=\"load2\">\r\n\r\n                </div>\r\n                <div id=\"load3\">\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    ) : ''\r\n}\r\n\r\nexport default Loading;","function Home(props){\r\n    return (\r\n        <h1>Hello world == {props.user.name}</h1>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import { useState ,useEffect } from \"react\";\r\n\r\nexport const API_URL =  \"http://127.0.0.1:8000/\"  //\"https://examio.herokuapp.com/\"  \r\n\r\nexport const apiFetch = async function (method = 'GET', endPoint = null, body = {}, destination) {\r\n\r\n    try {\r\n        let response = method !== \"GET\" ? await fetch(API_URL + endPoint, {\r\n            method: method,\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"content-type\": \"application/json\"                      // to be returned\r\n            }\r\n        }) : await fetch(API_URL +  endPoint)\r\n        destination.status = response.status\r\n\r\n        let res = await response.json()\r\n        destination.data = res;\r\n        console.log(destination)\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport var CountDownTimer = props => {\r\n\r\n    let [show, setShow] = useState(false);\r\n\r\n    function beautify(num) {\r\n        if (num < 10) {\r\n            return  '0' + num;\r\n        } else {\r\n            return num\r\n        }\r\n    }\r\n    \r\n    useEffect(\r\n        () => {\r\n            let dest = {};\r\n            var timer;\r\n            apiFetch(\"GET\",\"time\",{},dest)\r\n            .then(\r\n                () => {\r\n                    if (dest.status === 200) {\r\n                        console.log(props.start)\r\n                        let now = new Date(dest.data.curr_time);\r\n                        let end = new Date(props.start)\r\n                        console.log(now, end, now -end)\r\n                        let duration = end - now;\r\n                        duration = Math.floor(duration / 1000)\r\n                        timer = setInterval(() => {\r\n                            if (duration < 1) {\r\n                                clearInterval(timer);\r\n                                setShow(true)\r\n                            }\r\n                            let days = Math.floor(duration / (3600 * 24))\r\n                            let hours = Math.floor((duration % (3600 * 24)) / 3600)\r\n                            let minutes = Math.floor((duration % 3600) / 60)\r\n                            let secs = duration % 60\r\n\r\n                            try{\r\n                                document.getElementById(\"timer\").innerHTML = `${days} days ${beautify(hours)}:${beautify(minutes)}:${beautify(secs)}`\r\n                            } catch {\r\n\r\n                            }\r\n                            duration -= 1\r\n                        }, 1000);\r\n                    }\r\n                }\r\n            )\r\n\r\n            return function cleanup () {\r\n                try{\r\n                    clearInterval(timer)\r\n                } catch {\r\n\r\n                }\r\n            }\r\n        },[]\r\n    )\r\n    return !show ? (\r\n        <h2 id=\"timer\" className=\"small-marg\" style={props.big ? {fontSize : \"50px\"} : {}}>00:00:00</h2>\r\n    ) : props.children === undefined ? (\r\n        <h2>00:00:00</h2>\r\n    ) : (\r\n        <div>\r\n         {props.children}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/backarr.2c7faef3.png\";","import { useState, useEffect } from 'react';\r\nimport { apiFetch, API_URL, CountDownTimer } from '../functions/function';\r\nimport back from '../assets/backarr.png';\r\n\r\nconst home_url = \"examio\"\r\n\r\nfunction ExamLogs(props) {\r\n    let [hall, setHall] = useState({})\r\n\r\n    function generateLogs(status) {\r\n        switch (status) {\r\n            case \"created\":\r\n                if (props.exam.start === null) {\r\n                    return [\r\n                        <h2>the exam is yet to start nad has no start time..</h2>,\r\n                        <button className='exam-create-but'>Start exam</button>\r\n                    ]\r\n                } else {\r\n                    let time = new Date(props.exam.start)\r\n                    return [\r\n                        <h2 className='small-marg'>Start time: </h2>,\r\n                        <h3 className='small-marg'>{time.toLocaleDateString()} {time.toLocaleTimeString()} </h3>,\r\n                        <h3 className='small-marg' style={{marginTop : \"30px\"}}> exam will begin in..</h3>,\r\n                        <CountDownTimer start={props.exam.start}>\r\n\r\n                        </CountDownTimer>\r\n                    ]\r\n                }\r\n            case \"end\":\r\n                return [\r\n                    <h1 className='small-marg'>exam has ended..</h1>\r\n\r\n                ]\r\n\r\n            default:\r\n                return <h1>Oops</h1>\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        // let endpoint = API_URL.replace(\"http\", \"ws\") + `logs/${props.token}/${props.exam.id}`\r\n        // let socket = new WebSocket(endpoint)\r\n\r\n        // socket.onopen = e => {\r\n        //     console.log(\"open\", e)\r\n        // }\r\n        // socket.onmessage = e => {\r\n        //     console.log(\"message\", e)\r\n        // }\r\n\r\n        // socket.onerror = e => {\r\n        //     console.log(\"error\", e)\r\n        // }\r\n\r\n        // socket.onclose = e => {\r\n        //     console.log(\"close\", e)\r\n        // }\r\n\r\n        // return function cleanup() {\r\n        //     socket.close()\r\n        // }\r\n        if (props.exam.status === \"created\") {\r\n            if (props.exam.start === null) {\r\n\r\n            }\r\n        }\r\n    }, [])\r\n    try {\r\n        return (\r\n            <div className='exam-create-div' style={{ height: \"100%\", overflow: \"hidden\" }}>\r\n                <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                    <h2 className='back-button grow' onClick={\r\n                        () => {\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                        }\r\n                    }>&#8630; </h2>\r\n                     <h2 className='small-marg' style={{ textAlign: \"left\" }}>Exam logs.</h2>\r\n                </div>\r\n               \r\n                <div className='log-div'>\r\n                    {generateLogs(props.exam.status)}\r\n                </div>\r\n            </div>\r\n        )\r\n    } catch {\r\n        return (\r\n            <div className='log-div'>\r\n                <h3 style={{ textAlign: \"center\", color: \"rgba(242, 242, 242, 0.529)\" }}>loading...</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction ExamEdit(props) {\r\n    let [data, setData] = useState({});\r\n\r\n    function displayError(mes) {\r\n        try {\r\n            let header = document.getElementById(\"edit-header\");\r\n            document.getElementById(\"edit-div\").scrollTop = \"0px\";\r\n            header.innerHTML = mes;\r\n            setTimeout(\r\n                () => {\r\n                    header.innerHTML = \"Edit questions..\"\r\n                }, 2000\r\n            )\r\n\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    function generatePage() {\r\n        function arrangeData(key) {\r\n            function regularInput(which, place, type) {\r\n                if (which === \"num_of_students\") which = \"students\"\r\n                return <input className='create-form-input' style={{ width: \"150px\", height: \"30px\" }} placeholder={place} type={type} onChange={event => {\r\n                    let ref = { ...data };\r\n                    ref[which] = event.target.value;\r\n                    setData(ref);\r\n                }}></input>\r\n\r\n            }\r\n\r\n            switch (key) {\r\n                case \"num_of_students\":\r\n                    return [\"Number of students\", regularInput(key, \"Number of students\", \"number\")];\r\n                case \"total\":\r\n                    return [\"Total marks\", regularInput(key, \"Total marks\", \"number\")];\r\n                case \"end-time\":\r\n                    return [\"End time\", <h3 style={{ margin: \"10px 0px\", color: \"rgba(255, 248, 220, 0.474)\" }}>this field cannot be changed</h3>]\r\n                case \"start\":\r\n                    let dateChange = event => {\r\n                        let self = event.target;\r\n                        let check = self.type === \"date\"\r\n                        let other = document.getElementById(`${check ? \"time-update\" : \"date-update\"}`);\r\n                        let ref = { ...data };\r\n                        let date = new Date(check ? self.value + \" \" + other.value : other.value + \" \" +self.value);\r\n                        if (String(date) === \"Invalid Date\") {\r\n                            ref[key] = null;\r\n                        } else {\r\n                            ref[key] = date.toJSON();\r\n                        }\r\n                        setData(ref)\r\n                    }\r\n                    let input = <div style={{ display: \"flex\" }}>\r\n                        <input className='create-form-input' style={{ width: \"150px\", height: \"30px\" }} type=\"date\" id=\"date-update\" onChange={event => { dateChange(event) }} ></input>\r\n                        <input className='create-form-input' style={{ width: \"150px\", height: \"30px\" }} type=\"time\" id=\"time-update\" onChange={event => { dateChange(event) }} ></input>\r\n                    </div>\r\n                    return [\"Start time\", input]\r\n                case \"duration\":\r\n                    return [\"Exam duration\", regularInput(key, \"Number of students\", \"number\")];\r\n\r\n                default:\r\n                    let cap_key = [...key]\r\n                    cap_key[0] = cap_key[0].toUpperCase();\r\n\r\n                    return [cap_key.join(\"\"), regularInput(key, cap_key.join(\"\"), \"text\")]\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        let comp = []\r\n        for (let i in props.exam) {\r\n            if (i === \"id\" | i === \"date_stamp\" | i === \"exam_code\") {\r\n\r\n            } else {\r\n                comp.push(\r\n                    <div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"10px 0px\", borderBottom: \"rgba(255, 248, 220, 0.474) 2px solid\" }}>\r\n                            <div>\r\n                                <h3 style={{ margin: \"4px 0px\" }}>{arrangeData(i)[0]}</h3>\r\n                                <h5 style={{ margin: \"0px\" }}>{props.exam[i] === null ? \"not specified\" : [\"start\", \"end-time\"].includes(i) ? `${new Date(props.exam[i]).toLocaleDateString() + \" \" + new Date(props.exam[i]).toLocaleTimeString()}` :\r\n                                    [\"duration\", \"personal_time\"].includes(i) ? `${props.exam[i][0]} hours ${props.exam[i][1]}minutes ${props.exam[i][2]} seconds` : props.exam[i]}</h5>\r\n                            </div>\r\n\r\n                            <button className='exam-create-but' onClick={() => {\r\n                                let div = document.getElementById(\"field-\" + i)\r\n                                if (div.style.height === \"0px\") {\r\n                                    div.style.height = \"70px\"\r\n                                } else {\r\n                                    div.style.height = \"0px\"\r\n                                }\r\n\r\n                            }}>change</button>\r\n                        </div>\r\n                        <div style={{\r\n                            height: \"0px\",\r\n                            overflow: \"hidden\",\r\n                            transition: \"0.8s ease all\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\"\r\n                        }} id={\"field-\" + i}>\r\n\r\n                            {arrangeData(i)[1]}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n\r\n        return comp\r\n    }\r\n    return (\r\n        <div className='exam-create-div' id=\"edit-div\">\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"edit-header\" style={{ margin: \"5px\" }}> Edit exam fields...</h2>\r\n\r\n            </div>\r\n            <h3 style={{ color: \"rgba(255, 248, 220, 0.474)\" }}>Exam code: {props.exam[\"exam code\"]}</h3>\r\n            {generatePage()}\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", margin: \"20px\" }}>\r\n                <button className=\"exam-create-but grow shadow-5\" onClick={() => {\r\n\r\n                    {\r\n                        props.load();\r\n                        console.log(data)\r\n                        let dest = {}\r\n                        apiFetch(\"PUT\", `exam/${props.token}/${props.id}`, { changes: data }, dest)\r\n                            .then(\r\n                                () => {\r\n                                    if (dest.status === 200) {\r\n                                        props.load();\r\n                                        props.reload();\r\n                                    } else {\r\n                                        displayError(\"update not sucessfull...\")\r\n                                    }\r\n                                }\r\n                            )\r\n                    }\r\n                }}>save changes</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nfunction QuestionEdit(props) {\r\n    let [quest, setQuest] = useState(\"obj\");\r\n\r\n    let [page, setPage] = useState(\"create\");\r\n    let [objnum, setObj] = useState(4);\r\n\r\n\r\n    function displayError(message) {\r\n        let header = document.getElementById('create-header'), container = document.getElementsByClassName(\"exam-action-page\")[0];\r\n        header.innerHTML = message;\r\n        container.scrollTop = 0;\r\n        setTimeout(() => {\r\n            header.innerHTML = \"Set the exam questions...\"\r\n        }, 1500);\r\n    }\r\n\r\n    function generatePage(page) {\r\n        function UpdateQuestion(props) {\r\n            let [field, setField] = useState(\"mark\");\r\n            let [mode, setMode] = useState(props.mode)\r\n\r\n            function getField() {\r\n                switch (field) {\r\n                    case \"others\":\r\n                        let comp = []\r\n                        if (mode === 'o') {\r\n                            for (let i = 0; i < props.option.length; i++) {\r\n                                comp.push(\r\n                                    <input type=\"text\" className=\"create-form-input\" name={`option${i + 1}`} placeholder={`option ${i + 1}`}></input>\r\n                                )\r\n                            }\r\n                            comp.push(<input type=\"number\" className=\"create-form-input\" name=\"correct\" placeholder='the number of the correct option'></input>)\r\n                        } else {\r\n                            comp = <textarea className='create-form-input' placeholder={'enter the answer here\\n' + (mode === 'g' ? 'enter the answer for each gap on a new line' : '')} name=\"options\"></textarea>\r\n                        }\r\n                        return (\r\n                            <div>\r\n                                <select className='create-form-input' onChange={\r\n                                    event => {\r\n                                        setMode(event.target.value)\r\n                                    }\r\n                                } name=\"mode\" value={mode}>\r\n                                    <option style={{ color: \"black\" }} value='o'> Obj</option>\r\n                                    <option style={{ color: \"black\" }} value='g'>German</option>\r\n                                    <option style={{ color: \"black\" }} value='t'>Theory</option>\r\n                                </select>\r\n                                <textarea className='create-form-input' placeholder={'enter the new question' + (mode === 'g' ? '\\n replace empty gaps with {dash}' : \"\")} name=\"question\"></textarea>\r\n                                {comp}\r\n                            </div>\r\n                        )\r\n                    case \"mark\":\r\n                        return (\r\n                            <input type=\"number\" name=\"mark\" className=\"create-form-input\" placeholder=\"exam mark\"></input>\r\n                        )\r\n                }\r\n            }\r\n\r\n            let setOptions = quest => {\r\n                try {\r\n                    let options = props.option\r\n                    let answer = props.answer\r\n\r\n                    function change(num) {\r\n                        return ['a', 'b', 'c', 'd', 'e', 'f'][num - 1]\r\n                    }\r\n                    if (quest === 'o') {\r\n                        let comp = [], count = 1;\r\n                        for (let i of options) {\r\n                            comp.push(\r\n                                <div> <h4 style={{ margin: \"10px\" }}>{change(count)}. {i} {i === answer ? '(correct)' : \"\"}</h4></div>\r\n                            )\r\n                            count++;\r\n                        }\r\n                        return comp;\r\n                    } else if (quest === 'g') {\r\n                        return <div> <h4 style={{ margin: \"10px\" }}>{options}</h4></div>\r\n\r\n                    } else {\r\n                        return <div> <h4 style={{ margin: \"10px\" }}>{options}</h4></div>\r\n\r\n                    }\r\n                } catch {\r\n                    return <div></div>\r\n                }\r\n            }\r\n\r\n\r\n            useEffect(() => {\r\n                let handleQuestionUpdate = function (event) {\r\n                    event.preventDefault();\r\n                    try {\r\n\r\n\r\n                        let displayError = message => {\r\n                            let header = document.getElementById('edit-header' + props.num);\r\n                            let div = document.getElementById(`question${props.num}`)\r\n                            div.scrollTop = \"0px\"\r\n                            header.innerHTML = message;\r\n                            setTimeout(\r\n                                () => {\r\n                                    header.innerHTML = 'Edit Questions...'\r\n                                }, 3000\r\n                            )\r\n                        }\r\n                        let form = event.target;\r\n                        let formData = new FormData(form);\r\n\r\n                        if (formData.get(\"field\") === \"mark\") {\r\n                            if (formData.get(\"mark\") === null) {\r\n\r\n                            } else {\r\n                                props.load();\r\n                                let dest = {};\r\n                                apiFetch(\"PUT\", `question/${props.token}/${props.id}`, {\r\n                                    number: props.num,\r\n                                    changes: {\r\n                                        mark: formData.get(\"mark\")\r\n                                    }\r\n                                }, dest).then(\r\n                                    () => {\r\n                                        if (dest.status === 200) {\r\n                                            props.load()\r\n                                            props.reload()\r\n                                        } else {\r\n\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n                        } else {\r\n                            if (mode === 'o') {\r\n                                if ((\r\n                                    function () {\r\n                                        let check = false\r\n                                        for (let i = 0; i < props.option.length; i++) {\r\n                                            if (formData.get(`option${i + 1}`) === null) {\r\n                                                check = true\r\n                                            }\r\n                                        }\r\n                                        return formData.get(\"correct\") === null ? true : check;\r\n                                    }\r\n                                )()) formData.append(\"options\", '')\r\n\r\n                                else formData.append(\"options\", [formData.get(\"correct\"),\r\n                                ...(\r\n                                    function () {\r\n                                        let list = [];\r\n                                        for (let i = 0; i < props.option.length; i++) {\r\n                                            list.push(formData.get(`option${i + 1}`))\r\n                                        }\r\n                                        return list\r\n                                    }\r\n                                )()\r\n                                ])\r\n                            }\r\n\r\n                            if (formData.get(\"mode\") !== props.mode) {\r\n                                console.log(typeof formData.get(\"question\"))\r\n                                if (formData.get(\"question\") === '' || formData.get(\"options\") === null) {\r\n                                    displayError(\"Once the mode is changed, no field can be left empty\");\r\n                                    return\r\n                                }\r\n                            }\r\n                            let dest = {};\r\n                            props.load();\r\n                            apiFetch(\"PUT\", `question/${props.token}/${props.id}`, {\r\n                                number: props.num,\r\n                                changes: {\r\n                                    question: formData.get(\"question\"),\r\n                                    options: formData.get(\"options\")\r\n                                }\r\n                            }, dest).then(\r\n                                () => {\r\n                                    if (dest.status === 200) {\r\n                                        props.load();\r\n                                        props.reload();\r\n                                    } else {\r\n\r\n                                    }\r\n                                }\r\n                            )\r\n\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }\r\n                let form = document.getElementById(\"question-update\" + props.num)\r\n                form.addEventListener(\"submit\", handleQuestionUpdate);\r\n\r\n            }, [])\r\n\r\n\r\n            return (\r\n                <div style={{ height: \"0px\", transition: \"1.0s ease all\", overflow: \"hidden\" }} id={`question${props.num}`}>\r\n                    <h3>answers</h3>\r\n                    {setOptions(props.mode)}\r\n\r\n                    <h3 id={\"edit-header\" + props.num}>Edit Questions..</h3>\r\n                    <form id={\"question-update\" + props.num} style={{ padding: \"10px\" }} >\r\n                        <select className='create-form-input' name=\"field\" onChange={event => {\r\n                            setField(event.target.value)\r\n                        }}>\r\n                            <option style={{ color: \"black\" }} value=\"mark\">Mark</option>\r\n                            <option style={{ color: \"black\" }} value=\"others\">Others</option>\r\n                        </select>\r\n                        {getField()}\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}> <button className='exam-create-but shadow-5 grow'>make changes</button></div>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n        function questionList(list) {\r\n\r\n            function arrange(str, mode) {\r\n                if (mode === 'g') {\r\n                    while (str.includes(\"{dash}\")) {\r\n                        str = str.replace(\"{dash}\", \"______\")\r\n                    }\r\n                    return str;\r\n                } else {\r\n                    return str;\r\n                }\r\n            }\r\n            let comp = []\r\n            for (let i of list) {\r\n                comp.push(\r\n                    <div>\r\n                        <button className='exam-list-button grow shadow-5' onClick={() => {\r\n                            let div = document.getElementById(`question${i.number}`);\r\n                            if (div.style.height === \"300px\") {\r\n                                div.style.height = \"0px\";\r\n                                div.style.overflowY = \"hidden\";\r\n                            } else {\r\n                                div.style.height = \"300px\";\r\n                                div.style.overflowY = \"scroll\";\r\n                            }\r\n                        }}>\r\n                            <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <h4 style={{ margin: \"0px\" }}>{i.number} {arrange(i.question, i.mode)}</h4> <h4 style={{ margin: \"0px\" }}>mode :{i.mode}</h4>\r\n                            </div>\r\n                            <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>{i.mark} mark</h4>\r\n                            </div>\r\n                        </button>\r\n                        <UpdateQuestion answer={i.answer} option={i.options} mode={i.mode} num={i.number} load={props.load} reload={props.reload} token={props.token} id={props.id} />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return comp;\r\n        }\r\n        switch (page) {\r\n            case \"create\":\r\n                return (\r\n                    <div>\r\n                        <div className='question-div'>\r\n                            <select className='create-form-input' value={quest} style={{ width: \"fit-content\" }} onChange={event => {\r\n                                setQuest(event.target.value)\r\n                            }}>\r\n                                <option value=\"obj\" style={{ color: \"black\" }}>Obj</option>\r\n                                <option value=\"theory\" style={{ color: \"black\" }}>Theory</option>\r\n                                <option value=\"german\" style={{ color: \"black\" }}> German</option>\r\n                            </select>\r\n\r\n                            {quest === \"obj\" ? <input className='create-form-input' style={{ width: \"150px\" }} type=\"number\" placeholder=\"no of options\" onChange={event => {\r\n                                let value = event.target.value;\r\n                                if (value < 2 || value > 6) {\r\n                                    displayError(\"number must be between 2 and 6..\")\r\n                                    event.target.value = value < 2 ? 2 : 6;\r\n                                    setObj(event.target.value)\r\n                                } else {\r\n                                    setObj(event.target.value)\r\n                                }\r\n                            }}></input> : \"\"}\r\n\r\n                            <input className=\"create-form-input\" style={{ width: \"100px\" }} type=\"number\" min=\"0\" placeholder='mark' id=\"mark\"></input>\r\n                        </div>\r\n\r\n                        <form id=\"questions-form\" style={{ height: \"fit-content\" }}>\r\n                            <textarea className='create-form-input' name=\"question\" style={{ height: \"100px\", marginBottom: \"20px\" }} required placeholder={'enter the question here...\\n' + (quest === 'german' ? \"replace every gap to be filed with {dash} \" : '')}></textarea>\r\n                            {optionGenerate(quest)}\r\n\r\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                                <button className='exam-create-but shadow-5 grow'>add question</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                )\r\n            case \"view\":\r\n                return (\r\n                    <div>\r\n                        {questionList(props.questions)}\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n    function handleQuestionCreate(event) {\r\n        props.load();\r\n        event.preventDefault();\r\n        let formData = new FormData(event.target);\r\n        let mark = document.getElementById(\"mark\");\r\n        let data, dest = {};\r\n        if (quest === \"obj\") {\r\n            let options = []\r\n            for (let i = 0; i < objnum; i++) {\r\n                options.push(formData.get(`option${i + 1}`))\r\n            }\r\n            options = [formData.get(`option${formData.get(\"correct\")}`), ...options]\r\n            data = {\r\n                question: formData.get(\"question\"),\r\n                option: options.join(\"--\"),\r\n                mode: quest === \"obj\" ? 'o' : quest === \"theory\" ? 't' : 'g',\r\n                mark: mark.value === '' ? 1 : mark.value\r\n            }\r\n        } else {\r\n            data = {\r\n                question: formData.get(\"question\"),\r\n                option: formData.get(\"option\"),\r\n                mode: quest === \"obj\" ? 'o' : quest === \"theory\" ? 't' : 'g',\r\n                mark: mark.value === '' ? 1 : mark.value\r\n            }\r\n        }\r\n\r\n        console.log(data)\r\n        apiFetch(\"POST\", `question/${props.token}/${props.id}`, data, dest)\r\n            .then(\r\n                () => {\r\n                    props.load();\r\n                    if (dest.status === 200) {\r\n                        displayError(\"Question added successfully\");\r\n                        props.reload();\r\n\r\n                        for (let i of document.getElementsByClassName(\"create-form-input\")) i.value = null;\r\n                    } else if (dest.status === 300) {\r\n                        displayError(\"Questions required are already complete\")\r\n                    } else {\r\n                        displayError(\"could not create exam\")\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    useEffect(() => {\r\n        try {\r\n            let form = document.getElementById(\"questions-form\");\r\n            form.addEventListener(\"submit\", handleQuestionCreate)\r\n        } catch {\r\n\r\n        }\r\n    }, [page])\r\n\r\n    function optionGenerate(quest) {\r\n        switch (quest) {\r\n            case \"obj\":\r\n                let comp = [];\r\n                for (let i = 0; i < objnum; i++) {\r\n                    comp.push(\r\n                        <input type=\"text\" className=\"create-form-input\" placeholder={`option ${i + 1}`} required name={`option${i + 1}`}></input>\r\n                    )\r\n                }\r\n                comp.push(<input type=\"number\" style={{ marginTop: \"20px\" }} className='create-form-input' placeholder='correct option number..' required name=\"correct\"></input>)\r\n                return comp;\r\n            case \"german\":\r\n                return (\r\n                    <textarea type=\"text\" className=\"create-form-input\" placeholder='enter the answer for each gap with a newline.' style={{ height: \"100px\" }} required name=\"option\"></textarea>\r\n                )\r\n            default:\r\n                return (\r\n                    <textarea type=\"text\" className=\"create-form-input\" placeholder='enter the answer of the question' style={{ height: \"100px\" }} required name=\"option\"></textarea>\r\n                )\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className='exam-create-div'>\r\n            <div className='exam-view-actions' style={{ height: 'fit-content' }}>\r\n                <div className={'exam-view-group grow' + (page === \"create\" ? ' bottom-border' : '')} onClick={() => { setPage(\"create\") }}>\r\n                    <h4 style={{ display: \"flex\", margin: \"5px\" }}> create </h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"view\" ? ' bottom-border' : '')} onClick={() => { setPage(\"view\") }}>\r\n                    <h4 style={{ display: \"flex\", margin: \"5px\" }}> view </h4>\r\n                </div>\r\n\r\n            </div>\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"create-header\" style={{ margin: \"5px\" }}>{page === \"create\" ? \"Set\" : \"View\"} the exam questions..</h2>\r\n            </div>\r\n            {generatePage(page)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction ExamDetail(props) {\r\n    let [page, setPage] = useState(\"question\");\r\n\r\n    let [examData, setExam] = useState(\r\n        {\r\n            loading: true,\r\n            data: {\r\n                exam: {\r\n                    exam: {\r\n\r\n                    }\r\n                },\r\n\r\n                questions: {\r\n                    questions: []\r\n                }\r\n            }\r\n        }\r\n    )\r\n\r\n\r\n    function getData() {\r\n        props.load()\r\n        let destination1 = {}, destination2 = {};\r\n        Promise.all([apiFetch(\"GET\", `exam/${props.token}/${props.exam_id}`, {}, destination1),\r\n        apiFetch(\"GET\", `question/${props.token}/${props.exam_id}`, {}, destination2)])\r\n            .then(\r\n                () => {\r\n                    props.load();\r\n                    if (destination1.status === 200 && destination2.status === 200) {\r\n                        console.log('yeah')\r\n                        setExam({ ...examData, loading: true, data: { exam: destination1.data, questions: destination2.data } })\r\n                    }\r\n                }\r\n            )\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    function calcPercentage(number, total) {\r\n        try {\r\n            if (total !== null) {\r\n                let ratio = number / total;\r\n                return [Math.round(ratio * 100), Math.round(ratio * 360)]\r\n            } else {\r\n                if (number === 0) return [0, 0]\r\n                else return [100, 360]\r\n            }\r\n        } catch {\r\n            return [null, null]\r\n        }\r\n    }\r\n\r\n    function selectPage(page) {\r\n\r\n        {\r\n            switch (page) {\r\n                case \"question\":\r\n                    return <QuestionEdit load={props.load} token={props.token} id={props.exam_id} reload={getData}\r\n                        questions={examData.data.questions.questions} />\r\n                case \"delete\":\r\n                    return (\r\n                        <div style={{\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\"\r\n                        }}>\r\n                            <h3 style={{ margin: \"5px\" }}> are you sure you want to delete </h3>\r\n                            <h3 style={{ margin: \"5px\" }}>\"{examData.data.exam.exam.name}\"</h3>\r\n                            <div style={{\r\n                                width: \"100%\",\r\n                                padding: \"0px 10px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\"\r\n                            }}>\r\n                                <button className='exam-create-but shadow-5 grow' onClick={() => {\r\n                                    let dest = {};\r\n                                    props.load();\r\n                                    apiFetch(\"DELETE\", `exam/${props.token}/${props.exam_id}`, {}, dest)\r\n                                        .then(\r\n                                            () => {\r\n                                                if (dest.status === 200) {\r\n                                                    props.load();\r\n                                                    window.location.reload();\r\n                                                }\r\n                                            }\r\n                                        )\r\n                                }}>Yes</button>\r\n                                <button className='exam-create-but shadow-5 grow' onClick={() => {\r\n                                    setPage(\"question\")\r\n                                }}>No</button>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                case \"edit\":\r\n                    return (\r\n                        <ExamEdit exam={examData.data.exam.exam} load={props.load} reload={getData} token={props.token} id={props.exam_id} />\r\n                    )\r\n\r\n                case \"logs\":\r\n                    return (\r\n                        <ExamLogs exam={examData.data.exam.exam} token={props.token} load={props.load} />\r\n                    )\r\n\r\n            }\r\n        }\r\n    }\r\n    return examData.loading === true ? (\r\n        <div className='exam-main'>\r\n\r\n            <div className='exam-action'>\r\n                <div className='section-header'>\r\n                    <h2 style={{ margin: \"0px\" }}></h2>\r\n                </div>\r\n                <div className='exam-details shadow-5'>\r\n                    <h2 style={{ margin: \"0px\" }}><span><img style={{\r\n                        margin: \"0px 10px 0px 10px\"\r\n                    }} onClick={() => {\r\n                        props.view({\r\n                            exam: false,\r\n                            id: null\r\n                        })\r\n                    }} src={back} height=\"30\" width=\"30\"></img></span>{examData.data.exam.exam.name} </h2>\r\n\r\n                    <div style={{ display: \"flex\", alignItems: \"center\", marginTop: \"10px\" }}>\r\n\r\n                        <div style={{\r\n                            margin: \"5px\",\r\n                            width: \"60px\",\r\n                            height: \"60px\",\r\n                            borderRadius: \"30px\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            backgroundImage: `conic-gradient(cornsilk 0deg, cornsilk ${calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[1]}deg, rgba(137, 199, 255 ,0.4) ${calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[1]}deg)`\r\n                        }}>\r\n                            <div style={{\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                                borderRadius: \"30px\",\r\n                                backgroundColor: \"rgb(6, 72, 133)\",\r\n                                textAlign: \"center\",\r\n                                paddingTop: \"15px\"\r\n                            }}>\r\n                                {calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[0]}%\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                        {\r\n                            calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[0] === 100 ?\r\n                                <div>\r\n                                    <h4 style={{ margin: \"0px\" }}>Questions complete..</h4>\r\n                                    <h5 style={{ margin: \"4px 0px\" }}>exam link <a href={`https:www.${home_url}.com/#/hall/${examData.data.exam.exam[\"exam code\"]}`}>{`https:www.${home_url}.com/#/hall/${examData.data.exam.exam[\"exam code\"]}`}</a></h5>\r\n                                </div> :\r\n                                <h4 style={{ margin: \"0px\" }}>complete.... Set questions to get exam ready</h4>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='exam-action-group'>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"question\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"question\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Questions</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> set and edit exam questions </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"edit\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"edit\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Edit</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> edit the exam configurations  </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"logs\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"logs\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}>Logs</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> view exam status as the exam is ongoing </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"delete\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\", color: \"red\" }}> Delete </h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\", color: \"red\" }}> delete exam.. </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='exam-action-page'>\r\n                {selectPage(page)}\r\n            </div>\r\n\r\n        </div>\r\n    ) : <div>loading....</div>\r\n}\r\n\r\nfunction ViewPage(props) {\r\n    let [sorted, setSort] = useState([[], [], []]);\r\n    let [page, setPage] = useState(\"all\");\r\n\r\n    function buttonFunc(id) {\r\n        props.view({\r\n            exam: true,\r\n            id: id\r\n        })\r\n    }\r\n\r\n    let generateExamList = (page) => {\r\n        let content = [];\r\n        switch (page) {\r\n            case \"all\":\r\n                for (let i of props.data.data.exams) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            case \"start\":\r\n                for (let i of sorted[0]) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            case \"ongo\":\r\n                for (let i of sorted[1]) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            case \"com\":\r\n                for (let i of sorted[2]) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            default:\r\n                content = []\r\n        }\r\n        content.reverse();\r\n\r\n        if (content.length === 0) {\r\n            content = (<div className='exam-none'>\r\n                <h5>{page === \"all\" ? \"you have no created exam\" : \"no exam in this category\"}</h5>\r\n            </div>)\r\n        }\r\n        return (\r\n            <div className='exam-details-list'>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!props.loading) {\r\n            let start = [], ongoing = [], complete = [];\r\n\r\n            for (let i of props.data.data.exams) {\r\n                if ((i.status === \"created\") || (i.status === \"starting\")) start.push(i);\r\n                else if (i.status === \"during\") ongoing.push(i);\r\n                else complete.push(i);\r\n            }\r\n            setSort([start, ongoing, complete]);\r\n        }\r\n\r\n    }, [props])\r\n    return (\r\n        <div className='exam-view'>\r\n            <div className='exam-view-actions'>\r\n                <div className={'exam-view-group grow' + (page === \"all\" ? ' bottom-border' : '')} onClick={() => { setPage(\"all\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>all <div className='exam-num'>{props.num}</div></h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"start\" ? ' bottom-border' : '')} onClick={() => { setPage(\"start\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>yet-to-start <div className='exam-num'>{sorted[0].length}</div></h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"ongo\" ? ' bottom-border' : '')} onClick={() => { setPage(\"ongo\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>ongoing <div className='exam-num'>{sorted[1].length}</div></h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"com\" ? ' bottom-border' : '')} onClick={() => { setPage(\"com\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>completed <div className='exam-num'>{sorted[2].length}</div></h4>\r\n                </div>\r\n\r\n            </div>\r\n            {generateExamList(page)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction CreateExam(props) {\r\n\r\n    function disableValue(e, value) {\r\n        let valued = e.target.checked;\r\n\r\n        if (value === \"veri\") {\r\n            value = \"spec\";\r\n            valued = valued && document.getElementById(\"spec-check\").checked;\r\n        }\r\n\r\n        let header = document.getElementById(`${value}-header`);\r\n        let input = document.getElementById(`${value}`);\r\n\r\n        if (value === \"start\") {\r\n            let input2 = document.getElementById(\"start-time\");\r\n            valued ? input2.removeAttribute(\"disabled\") : input2.setAttribute(\"disabled\", \"disabled\");\r\n            input2.style.border = valued ? \"cornsilk 3px solid\" : \"rgba(255, 248, 220, 0.474) 3px solid\";\r\n\r\n            if (!valued) input2.value = null;\r\n        }\r\n\r\n        header.style.color = valued ? \"cornsilk\" : \"rgba(255, 248, 220, 0.474)\";\r\n        valued ? input.removeAttribute(\"disabled\") : input.setAttribute(\"disabled\", \"disabled\");\r\n        input.style.border = valued ? \"cornsilk 3px solid\" : \"rgba(255, 248, 220, 0.474) 3px solid\";\r\n\r\n        if (!valued) {\r\n            input.value = null\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let handleExamCreate = e => {\r\n            e.preventDefault();\r\n            let formData = new FormData(e.target);\r\n\r\n            function displayError(message) {\r\n                let header = document.getElementById('create-header'), container = document.getElementsByClassName(\"exam-action-page\")[0];\r\n                header.innerHTML = message;\r\n                container.scrollTop = 0;\r\n                setTimeout(() => {\r\n                    header.innerHTML = \"Fill form to create exam..\"\r\n                }, 1500);\r\n            }\r\n\r\n            if (formData.get(\"name\").length < 6 || formData.get(\"name\").length > 20) displayError(\"The exam title must be between 6 to 20 characters..\")\r\n\r\n            else if (new Date() > new Date(formData.get(\"start-date\") + \" \" + formData.get(\"start-time\"))) {\r\n                displayError(\"The start time must be ahead of the current time by at least 30 minutes\")\r\n            }\r\n\r\n            else {\r\n                let data = {\r\n                    name: formData.get(\"name\"),\r\n                    total: formData.get(\"total\"),\r\n                    number: formData.get(\"questions\"),\r\n                    num_of_students: formData.get(\"students\"),\r\n                    start: formData.get(\"start-date\") === null ? null : new Date(formData.get(\"start-date\") + \" \" + formData.get(\"start-time\")).toJSON(),\r\n                    verification: formData.get(\"veri-check\") === \"on\",\r\n                    specific: formData.get(\"specific\") === \"\" ? null : formData.get(\"specific\"),\r\n                    personal: formData.get(\"personal\"),\r\n                    duration: formData.get(\"duration\") === null ? null : formData.get(\"duration\") * 60,\r\n                    exam_code: Number(new Date())\r\n                }\r\n\r\n                var destination = {};\r\n\r\n                props.load();\r\n                apiFetch(\"POST\", `exam/${props.token}/aall`, data, destination).then(\r\n                    () => {\r\n                        props.load();\r\n                        if (destination.status === 200) {\r\n                            displayError(\"the exam has been created...\");\r\n                            window.location.reload();\r\n                            props.change(\"view\")\r\n                        } else {\r\n                            displayError(\"the exam could not be created\")\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        let form = document.getElementById(\"exam-create-form\");\r\n        form.addEventListener(\"submit\", handleExamCreate);\r\n\r\n        return function cleanup() {\r\n            form.removeEventListener(\"submit\", handleExamCreate)\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className='exam-create-div'>\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' style={{marginTop : \"8px\"}}  onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"create-header\">Fill form to create exam..</h2>\r\n            </div>\r\n            <form id=\"exam-create-form\">\r\n                <input className='create-form-input' style={{ border: \"cornsilk 3px solid\", textAlign: \"center\" }} type=\"text\" name=\"name\" placeholder=\"The Exam Title\" required></input>\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"students-check\" onChange={event => { disableValue(event, \"students\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"students-header\">number of students </h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" min=\"0\" max=\"200\" name=\"students\" id=\"students\" disabled></input>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"questions-check\" onChange={event => { disableValue(event, \"questions\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"questions-header\">number of questions</h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" min=\"0\" max=\"200\" name=\"questions\" id=\"questions\" disabled></input>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"total-check\" onChange={event => { disableValue(event, \"total\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"total-header\"> total marks </h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" name=\"total\" id=\"total\" disabled></input>\r\n                    </div>\r\n\r\n                    <div style={{ marginLeft: \"20px\" }}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"start-check\" onChange={event => { disableValue(event, \"start\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"start-header\">start time</h4>\r\n                        </div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input className='create-form-input' type=\"date\" name=\"start-date\" id=\"start\" disabled></input>\r\n                            <input className='create-form-input' type='time' name=\"start-time\" id=\"start-time\" disabled></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"duration-check\" onChange={event => { disableValue(event, \"duration\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"duration-header\"> exam duration(mins)</h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" name=\"duration\" id=\"duration\" min=\"5\" max=\"300\" disabled></input>\r\n                    </div>\r\n\r\n                    <div style={{ marginLeft: \"20px\" }}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"personal-check\" onChange={event => { disableValue(event, \"personal\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"personal-header\">student time(mins)</h4>\r\n                        </div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input className='create-form-input' type=\"number\" name=\"personal\" id=\"personal\" min=\"5\" max=\"300\" disabled></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"veri-check\" onChange={event => { disableValue(event, \"veri\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"cornsilk\" }} id=\"total-header\"> student verification </h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ marginLeft: \"20px\" }}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"spec-check\" id=\"spec-check\" onChange={event => { disableValue(event, \"spec\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"spec-header\">specific students</h4>\r\n                        </div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <textarea className='create-form-input' name=\"spec\" id=\"spec\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                    <button type='submit' className='exam-create-but shadow-5 grow'> Create exam</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction Exam(props) {\r\n    let [exam_data, setExam] = useState({\r\n        loading: true,\r\n        data: null\r\n    })\r\n\r\n    let [exam_page, setExamPage] = useState({\r\n        exam: false,\r\n        id: null\r\n    })\r\n\r\n    let [page, setPage] = useState('view');\r\n\r\n    function fetchExamDetails() {\r\n        var examData = {};\r\n        props.load();\r\n        apiFetch(\"GET\", `exam/${props.token}/all`, {}, examData).then(\r\n            () => {\r\n                props.load();\r\n                if (examData.status === 200) {\r\n                    setExam({\r\n                        loading: false,\r\n                        data: examData.data\r\n                    })\r\n                } else {\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function selectPage(page) {\r\n        if (!exam_data.loading) {\r\n            switch (page) {\r\n                case \"view\":\r\n                    return <ViewPage data={exam_data} num={props.user.exam} view={setExamPage} />\r\n                case \"create\":\r\n                    return <CreateExam load={props.load} change={setPage} token={props.token} />\r\n            }\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchExamDetails();\r\n    }, [])\r\n    return !exam_page.exam ? (\r\n        <div className='exam-main'>\r\n            <div className='exam-action'>\r\n                <div className='section-header'>\r\n                    <h2 style={{ margin: \"0px\" }}>Manage Exams</h2>\r\n                </div>\r\n                <div className='exam-details shadow-5'>\r\n                    <h2 style={{ margin: \"0px\" }}>Total exams: {props.user.exam}</h2>\r\n\r\n                    <div></div>\r\n\r\n                </div>\r\n\r\n                <div className='exam-action-group'>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create..</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"view\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"view\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> View..</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> list of exams with exam actions </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create exam</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create exam</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='exam-action-page'>\r\n                {selectPage(page)}\r\n            </div>\r\n\r\n        </div>\r\n    ) : (\r\n        <ExamDetail token={props.token} exam_id={exam_page.id} load={props.load} view={setExamPage} />\r\n    )\r\n\r\n}\r\n\r\nexport default Exam;","export default __webpack_public_path__ + \"static/media/examio2.197b2829.png\";","export default __webpack_public_path__ + \"static/media/profile.05d0404a.png\";","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiFetch, CountDownTimer } from \"../functions/function\";\r\n\r\nfunction ViewPage(props) {\r\n    const history = useHistory();\r\n    let [sorted, setSort] = useState([[], []]);\r\n    let [page, setPage] = useState(\"all\");\r\n\r\n    let joinHall = exam => {history.push(\"/hall/\" + exam.exam[\"exam code\"])}\r\n\r\n    let deleteExam = exam => {\r\n        props.load();\r\n        let dest = {}\r\n        apiFetch(\"DELETE\", `exam/${props.token}/${exam.id}`,{},dest)\r\n        .then(\r\n            () => {\r\n                props.load()\r\n                if(dest.status === 200) {\r\n                    props.reload()\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function buttonFunc(id) {\r\n        try {\r\n            let div = document.getElementById(\"exam-details-\" + id)\r\n            if (div.style.height === \"0px\") {div.style.height = \"150px\"; div.style.overflowY = \"scroll\";}\r\n            else {div.style.height = \"0px\"; div.style.overflowY = \"hidden\"}\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    let displayExtended = exam => {\r\n        switch (exam.status) {\r\n            case \"registered\":\r\n                if (exam.exam.status === \"created\") {\r\n                    if (exam.exam.start === null) {\r\n                        return (\r\n                            <div className=\"centralize\">\r\n                                <h2>This exam has no time, specified by the examinerr</h2>\r\n                                <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <div className=\"centralize\">\r\n                                <h2>time till exam ..</h2>\r\n                                <CountDownTimer start={exam.exam.start}>\r\n                                    <button className=\"exam-create-but\" onClick={() => joinHall(exam)}>Join Exam</button>\r\n                                </CountDownTimer>\r\n                                <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                } else if (exam.exam.status === \"starting\") {\r\n                    return (\r\n                        <div className=\"centralize\">\r\n                            <h2>The exam will soon be starting..</h2>\r\n                            <button className=\"exam-create-but\" onClick={() => joinHall(exam)}>Join Exam</button>\r\n                            <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                        </div>\r\n                    )\r\n                } else if (exam.exam.status === \"during\") {\r\n                    return (\r\n                        <div className=\"centralize\">\r\n                            <h2>The exam is currently ongoing..</h2>\r\n                            <button className=\"exam-create-but\" onClick={() => joinHall(exam)}>Join Exam</button>\r\n                            <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <div className=\"centralize\"> \r\n                            <h2>The exam has already been concluded..</h2>\r\n                            <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            default:\r\n                return (\r\n                    <div className=\"centralize\">\r\n                        <h3>Exam completed</h3>\r\n                        <button className=\"exam-create-but\">View result</button>\r\n                        <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n\r\n    let generateExamList = (page) => {\r\n        try {\r\n            let content = [];\r\n            switch (page) {\r\n                case \"all\":\r\n                    for (let i of props.exams) {\r\n                        content.push(\r\n                            <div>\r\n                                <button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                        <h4 style={{ margin: \"0px\" }}>{i.exam.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                                    </div>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                        <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                                    </div>\r\n                                </button>\r\n                                <div style={{ height: \"0px\", overflowY: \"hidden\", transition: \"0.8s all ease\" }} id={`exam-details-${i.id}`}>\r\n                                    {displayExtended(i)}\r\n                                </div>\r\n                            </div>)\r\n                    }\r\n                    break;\r\n                case \"start\":\r\n                    for (let i of sorted[0]) {\r\n                        content.push(\r\n                            <div>\r\n                                <button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                        <h4 style={{ margin: \"0px\" }}>{i.exam.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                                    </div>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                        <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                                    </div>\r\n                                </button>\r\n                                <div style={{ height: \"0px\", overflowY: \"hidden\", transition: \"0.8s all ease\" }} id={`exam-details-${i.id}`}>\r\n                                    {displayExtended(i)}\r\n                                </div>\r\n                            </div>)\r\n                    }\r\n                    break;\r\n                case \"com\":\r\n                    for (let i of sorted[1]) {\r\n                        content.push(\r\n                            <div>\r\n                                <button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                        <h4 style={{ margin: \"0px\" }}>{i.exam.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                                    </div>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                        <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                                    </div>\r\n                                </button>\r\n                                <div style={{ height: \"0px\", overflowY: \"hidden\", transition: \"0.8s all ease\" }} id={`exam-details-${i.id}`}>\r\n                                    {displayExtended(i)}\r\n                                </div>\r\n                            </div>)\r\n                    }\r\n                    break;\r\n                default:\r\n                    content = []\r\n            }\r\n            content.reverse();\r\n\r\n            if (content.length === 0) {\r\n                content = (<div className='exam-none'>\r\n                    <h5>{page === \"all\" ? \"you have no registered exam\" : \"no exam in this category\"}</h5>\r\n                </div>)\r\n            }\r\n            return (\r\n                <div className='exam-details-list'>\r\n                    {content}\r\n                </div>\r\n            )\r\n        }\r\n        catch (error) {\r\n            return <div>loading</div>\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        try {\r\n\r\n            if (!props.loading) {\r\n                let start = [], complete = [];\r\n\r\n                for (let i of props.exams) {\r\n                    if (i.status === \"registered\") start.push(i);\r\n                    else complete.push(i);\r\n                }\r\n                setSort([start, complete]);\r\n            }\r\n        } catch {\r\n\r\n        }\r\n\r\n    }, [props])\r\n    try {\r\n        return (\r\n            <div className='exam-view'>\r\n                <div style={{ display: \"flex\", position: \"sticky\" }} className=\"pad-10\">\r\n                    <h2 className='back-button grow' style={{ marginTop: \"8px\" }} onClick={\r\n                        () => {\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                        }\r\n                    }>&#8630; </h2>\r\n                    <h2 id=\"create-header\">View Exams...</h2>\r\n                </div>\r\n                <div className='exam-view-actions'>\r\n                    <div className={'exam-view-group grow' + (page === \"all\" ? ' bottom-border' : '')} onClick={() => { setPage(\"all\") }}>\r\n                        <h4 style={{ display: \"flex\" }}>all <div className='exam-num'>{props.exams.length}</div></h4>\r\n                    </div>\r\n                    <div className={'exam-view-group grow' + (page === \"start\" ? ' bottom-border' : '')} onClick={() => { setPage(\"start\") }}>\r\n                        <h4 style={{ display: \"flex\" }}>pending <div className='exam-num'>{sorted[0].length}</div></h4>\r\n                    </div>\r\n                    <div className={'exam-view-group grow' + (page === \"com\" ? ' bottom-border' : '')} onClick={() => { setPage(\"com\") }}>\r\n                        <h4 style={{ display: \"flex\" }}>completed <div className='exam-num'>{sorted[1].length}</div></h4>\r\n                    </div>\r\n\r\n                </div>\r\n                {generateExamList(page)}\r\n            </div>\r\n        )\r\n    }\r\n    catch {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n}\r\n\r\nfunction RegisterExam(props) {\r\n\r\n    function displayError(mes) {\r\n        let header = document.getElementById(\"create-header\")\r\n        header.innerHTML = mes\r\n\r\n        setTimeout(\r\n            () => {\r\n                header.innerHTML = \"Enter exam code to register..\"\r\n            }, 2000\r\n        )\r\n    }\r\n\r\n    function handleRegister(event) {\r\n        props.load()\r\n        event.preventDefault();\r\n        let formData = new FormData(event.target)\r\n        let dest = {}\r\n        apiFetch(\"POST\", `exam/${props.token}/all`, {\r\n            id: formData.get(\"exam-code\")\r\n        }, dest)\r\n            .then(\r\n                () => {\r\n                    props.load()\r\n                    if (dest.status === 200) {\r\n                        displayError(\"Exam registeration successfully..\")\r\n                        props.reload()\r\n                    }\r\n                    else if (dest.status === 403) {\r\n                        let remark = dest.data.status\r\n                        if (remark === \"not allowed for this exam\") {\r\n                            displayError(\"❗ Sorry this exam is for specific people\")\r\n                        } else if (remark === \"exam has already ended\") {\r\n                            displayError(\"Oops the exam has already ended\")\r\n                        } else if (remark === \"already registered\") {\r\n                            displayError(\"You have already registered for this exam\")\r\n                        }\r\n                    } else if (dest.status === 404) {\r\n                        displayError(\"Exam code is not valid ❗❗\")\r\n                    } else {\r\n                        displayError(\"Exam could not be registered..\")\r\n                    }\r\n\r\n                }\r\n            )\r\n\r\n\r\n    }\r\n    useEffect(\r\n        () => {\r\n            let form = document.getElementById(\"exam-register-div\")\r\n\r\n            form.addEventListener(\"submit\", handleRegister)\r\n\r\n            return function cleanup() {\r\n                form.removeEventListener(\"submit\", handleRegister)\r\n            }\r\n        }, []\r\n    )\r\n    return (\r\n        <div className='exam-create-div'>\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' style={{ marginTop: \"8px\" }} onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"create-header\">Enter exam code to register..</h2>\r\n            </div>\r\n            <form id=\"exam-register-div\" style={{ alignItems: \"center\", marginTop: \"50px\", border: \"2px solid rgba(242, 242, 242, 0.529)\", borderRadius: \"10px\", padding: \"10px\" }}>\r\n                <input type=\"text\" name=\"exam-code\" style={{\r\n                    height: \"40px\"\r\n                }} className=\"create-form-input\" placeholder=\"exam code..\"></input>\r\n                <button className=\"exam-create-but\" style={{ height: \"50px\" }} type=\"submit\"> Register</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Examinee(props) {\r\n    let [page, setPage] = useState(\"view\")\r\n\r\n    let [exam, setExam] = useState({ data: null })\r\n    \r\n    let getData = () => {\r\n        let dest = {};\r\n        props.load();\r\n        apiFetch(\"GET\", `exam/${props.token}/all`, {}, dest)\r\n            .then(\r\n                () => {\r\n                    props.load()\r\n                    if (dest.status === 200) {\r\n                        setExam({ ...exam, data: dest.data.exams })\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        getData()\r\n    }, [])\r\n\r\n    function selectPage(page) {\r\n        switch (page) {\r\n            case \"create\":\r\n                return <RegisterExam load={props.load} token={props.token} reload={getData}/>\r\n            case \"view\":\r\n                return <ViewPage exams={exam.data} token={props.token} load={props.load} reload={getData}/>\r\n            default:\r\n                return <div>fuck..</div>\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className='exam-main'>\r\n            <div className='exam-action'>\r\n                <div className='section-header'>\r\n                    <h2 style={{ margin: \"0px\" }}>Manage Exams</h2>\r\n                </div>\r\n                <div className='exam-details shadow-5'>\r\n                    <h2 style={{ margin: \"0px\" }}>Total exams: {props.user.exam}</h2>\r\n\r\n                    <div></div>\r\n\r\n                </div>\r\n\r\n                <div className='exam-action-group'>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Register..</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> register for new exams.. </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"view\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"view\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> View..</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> list of exams registered </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create exam</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create exam</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='exam-action-page'>\r\n                {selectPage(page)}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Examinee;","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { apiFetch } from '../functions/function';\r\nimport Exam from '../components/Exam';\r\nimport examio from '../assets/examio2.png';\r\nimport profile from '../assets/profile.png';\r\nimport Loading from \"../components/Loading\";\r\nimport Examinne from \"../components/Examinee\";\r\nimport '../css/account.css';\r\nimport Examinee from '../components/Examinee';\r\n\r\nfunction Sidebar(props) {\r\n    let [butt, setButt] = useState((\r\n        function (word) {\r\n            let str = [...word];\r\n            str[0] = str[0].toUpperCase();\r\n            return str.join(\"\")\r\n        }\r\n    )(props.page));\r\n    let [buttons, setButtons] = useState([]);\r\n\r\n    let butList = [\r\n        \"Dashboard\",\r\n        \"Exams\",\r\n        \"Settings\",\r\n        \"Profile\"\r\n    ];\r\n\r\n    let butCompList = [];\r\n\r\n    useEffect(() => {\r\n        for (let i of butList) {\r\n            if (i === butt) {\r\n\r\n                butCompList.push(\r\n                    <div className='side-but-cont border-left' onClick={() => {\r\n                        if (window.innerWidth < 620) {\r\n                            document.getElementsByClassName(\"account-side\")[0].style.width = \"0px\";\r\n                            document.getElementsByClassName(\"mobile-div\")[0].style.display = \"none\";\r\n                        }\r\n                    }}>\r\n                        <button className='side-but' style={{ backgroundColor: \"rgb(46, 45, 45)\" }}>{i}</button>\r\n                    </div>\r\n                )\r\n            } else {\r\n                butCompList.push(\r\n                    <div className={`side-but-cont ${(butList.indexOf(i) - butList.indexOf(butt)) === -1 ? '' : 'bottom-border'}`}>\r\n                        <button className='side-but' onClick={() => (\r\n                            function (butt) {\r\n                                setButt(butt);\r\n                                props.url_push('/account/' + butt.toLowerCase())\r\n\r\n                                if (window.innerWidth < 620) {\r\n                                    document.getElementsByClassName(\"account-side\")[0].style.width = \"0px\";\r\n                                    document.getElementsByClassName(\"mobile-div\")[0].style.display = \"none\";\r\n                                }\r\n                            }\r\n                        )(i)}>{i}</button>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        setButtons(butCompList)\r\n\r\n    }, [butt])\r\n    return (\r\n        <div className=\"account-side\">\r\n            <div className='logo-div'>\r\n                <img src={examio} height=\"20\" width=\"80\"></img>\r\n            </div>\r\n            <div className='side-profile'>\r\n                <div className='profile-pic'>\r\n                    <img src={profile}></img>\r\n                </div>\r\n\r\n                <div className='profile-name'>\r\n                    <h3 style={{ margin: \"3px\" }}>{props.user.name}</h3>\r\n                    <h5 style={{ margin: \"3px\" }} className='leylow'>{props.user.email}</h5>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='side-actions'>\r\n                {buttons}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Account(props) {\r\n    const history = useHistory()\r\n    let [userInfo, setInfo] = useState({})\r\n    let [show, setShow] = useState(false)\r\n    var loader = false;\r\n\r\n    let load = () => {\r\n        loader = !loader;\r\n        setShow(loader);\r\n    }\r\n\r\n    var data = {};\r\n\r\n    function getUserInfo() {\r\n        if (props.user.token !== null) {\r\n            load();\r\n            apiFetch(\"GET\", `info/${props.user.token}`, {}, data)\r\n                .then(() => {\r\n                    load()\r\n                    if (data.status === 200) {\r\n                        setInfo(data.data.info);\r\n                    } else {\r\n                        history.push(\"/home\");\r\n                    }\r\n                })\r\n        } else {\r\n            history.push('/home');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserInfo();\r\n    }, [])\r\n\r\n\r\n\r\n    function selectPage(page) {\r\n        try {\r\n\r\n\r\n            switch (page) {\r\n                case \"exams\":\r\n                    if (!userInfo.role) {\r\n                        return (\r\n                            <Examinee user={userInfo} load={load} token={props.user.token} />\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <Exam user={userInfo} load={load} token={props.user.token} />\r\n                        )\r\n                    }\r\n\r\n                default:\r\n                    return <h1>404.. page not found</h1>\r\n            }\r\n        } catch {\r\n            return (\r\n                <div>\r\n                    loading....\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='account-main'>\r\n            <div className=\"mobile-nav\">\r\n                <img src={examio} height=\"20\" width=\"80\"></img>\r\n\r\n                <h2 style={{ cursor: \"pointer\" }} onClick={() => {\r\n                    document.getElementsByClassName(\"account-side\")[0].style.width = \"250px\";\r\n\r\n                    setTimeout(() => {\r\n                        document.getElementsByClassName(\"mobile-div\")[0].style.display = \"block\";\r\n                    }, 650)\r\n                }}>&#9776;</h2>\r\n\r\n            </div>\r\n            <div className='mobile-div' onClick={() => {\r\n                document.getElementsByClassName(\"account-side\")[0].style.width = \"0px\";\r\n                document.getElementsByClassName(\"mobile-div\")[0].style.display = \"none\";\r\n            }}>\r\n\r\n            </div>\r\n            <Loading show={show} />\r\n            <Sidebar url_push={history.push} user={userInfo} page={props.match.params.page} />\r\n            <div className='account-cont'>\r\n                {selectPage(props.match.params.page)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Account;","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiFetch } from \"../functions/function\";\r\nimport \"../css/login.css\";\r\nimport examio from \"../assets/examio2.png\";\r\n\r\nfunction Login(props) {\r\n    const history = useHistory()\r\n    let whether;\r\n    try{\r\n        whether = props.match.params.type\r\n    } catch {\r\n        whether = null\r\n    }\r\n\r\n\r\n    function handleRequestError(err) {\r\n        let head = document.getElementById(\"log-head\");\r\n        head.innerHTML = err\r\n        setTimeout(() => {\r\n            head.innerHTML = \"Sign in..\"\r\n        }, 2500)\r\n\r\n    }\r\n    function handleLoginSubmit(e) {\r\n        console.log(whether)\r\n        var response = {};\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        let data = {\r\n            email: formData.get(\"email\"),\r\n            password: formData.get(\"password\")\r\n        }\r\n        props.load();\r\n        apiFetch(\"POST\", \"login\", data, response).then(() => {\r\n            props.load();\r\n\r\n            if (response.status === 200) {\r\n                let res_data = response.data;\r\n                if (res_data.login) {\r\n                    props.loginFunc(res_data);\r\n                    if(whether === \"oneTime\") window.close();\r\n                    history.push('/account/dashboard/')\r\n                }\r\n            } else {\r\n                handleRequestError(\"Wrong details..\")\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    useEffect(() => {\r\n        let form = document.getElementById(\"login-form\");\r\n\r\n        form.addEventListener('submit', handleLoginSubmit)\r\n\r\n        return function cleanup() {\r\n            form.removeEventListener('submit', handleLoginSubmit)\r\n        }\r\n\r\n    }, [])\r\n    return (\r\n        <div className=\"center-div\">\r\n            <div className=\"logo\"><img src={examio} height=\"20\" width=\"90\"></img></div>\r\n            <button className=\"log-but grow\" onClick={() => {history.push(\"/signup\")}}>sign up</button>\r\n            <form id=\"login-form\" className=\"shadow-5\">\r\n                <div className=\"log-header\">\r\n                    <h2 style={{ margin: \"0px\" }} id=\"log-head\">Sign in..</h2>\r\n                </div>\r\n\r\n                <div className=\"log-form-arrange\">\r\n                    <input type=\"email\" name=\"email\" className=\"log-input\" placeholder=\"email\" required=\"required\"></input>\r\n                    <input type=\"password\" name=\"password\" className=\"log-input\" placeholder=\"password\" required=\"required\"></input>\r\n\r\n                    <button type=\"submit\" className=\"log-butt grow\"> login</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"log-foot\"><h4>examio &copy; {new Date().getFullYear()}</h4></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiFetch } from \"../functions/function\";\r\nimport \"../css/login.css\";\r\nimport examio from \"../assets/examio2.png\";\r\n\r\nfunction Signup(props) {\r\n    const history = useHistory();\r\n\r\n    function displayError(message) {\r\n        let header = document.getElementById(\"log-head\");\r\n        header.innerHTML = message;\r\n        setTimeout(\r\n            () => {\r\n                header.innerHTML = \"Sign up..\"\r\n            }, 2000\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        function handleSubmit(event) {\r\n            event.preventDefault();\r\n            let form = event.target\r\n            let formData = new FormData(form);\r\n\r\n            if(formData.get(\"first\").length < 2 | formData.get(\"last\").length < 2) {\r\n                displayError(\"name is too short..\")\r\n            } else if(formData.get(\"password\").length < 5) {\r\n                displayError(\"password too short..\");\r\n            } else if (formData.get(\"password\").length > 10) {\r\n                displayError(\"password too long ...\");\r\n            } else if(formData.get(\"password\") !== formData.get(\"password2\")) {\r\n                displayError(\"passwords do not match..\");\r\n            } else {\r\n                let dest = {};\r\n                props.load();\r\n                apiFetch(\"POST\", \"signup\", {\r\n                    name : formData.get(\"first\") + \" \" + formData.get(\"last\"),\r\n                    phone : formData.get(\"phone\"),\r\n                    email : formData.get(\"email\"),\r\n                    password : formData.get(\"password\"),\r\n                    role : formData.get(\"role\") === \"examiner\"\r\n                }, dest)\r\n                .then(\r\n                    () => {\r\n                        props.load();\r\n                        if(dest.status === 200) {\r\n                            displayError(\"accout create successfull\");\r\n                            history.push('/login');\r\n                        } else if(dest.status === 401) {\r\n                            displayError(\"email already exists...\");\r\n                        } else {\r\n                            displayError(\"couldn't create account\");\r\n                            history.push(\"/home\");\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n\r\n        }\r\n        let form = document.getElementById(\"signup-form\");\r\n        form.addEventListener(\"submit\", handleSubmit)\r\n\r\n        return function cleanup () {\r\n            form.removeEventListener(\"submit\", handleSubmit)\r\n        }\r\n    },[])\r\n    return (\r\n        <div className=\"center-div\">\r\n            <div className=\"logo\"><img src={examio} height=\"20\" width=\"90\"></img></div>\r\n            <button className=\"log-but grow\" onClick={() => { history.push(\"/login\") }}>login</button>\r\n            <form id=\"signup-form\" className=\"shadow-5\">\r\n                <div className=\"log-header\">\r\n                    <h2 style={{ margin: \"0px\" }} id=\"log-head\">Sign up..</h2>\r\n                </div>\r\n\r\n                <div className=\"log-form-arrange sign-arrange\">\r\n\r\n                    <input type=\"text\" name=\"first\" className=\"log-input sign-input\" placeholder=\"first name\" required=\"required\"></input>\r\n                    <input type=\"text\" name=\"last\" className=\"log-input sign-input\" placeholder=\"last name\" required=\"required\"></input>\r\n                    \r\n                    <input type=\"email\" name=\"email\" className=\"log-input sign-input\" placeholder=\"email\" required=\"required\"></input>\r\n                    <input type=\"number\" name=\"phone\" className=\"log-input sign-input\" placeholder=\"phone_no\" required=\"required\"></input>\r\n                    \r\n                    <input type=\"password\" name=\"password\" className=\"log-input sign-input\" placeholder=\"password\" required=\"required\"></input>\r\n                    <input type=\"password\" name=\"password2\" className=\"log-input sign-input\" placeholder=\"confirm password\" required=\"required\"></input>\r\n\r\n                    <select name=\"role\" className=\"log-input sign-input\" placeholder=\"\">\r\n                        <option style={{color : \"black\"}} value=\"examiner\">As examiner</option>\r\n                        <option style={{color : \"black\"}} value=\"examinee\">As examinee</option>\r\n                    </select>\r\n\r\n                    <button type=\"submit\" className=\"log-butt grow sign-butt\"> login</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"log-foot\"><h4>examio &copy; {new Date().getFullYear()}</h4></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Signup;","import { apiFetch } from '../functions/function';\r\nimport { useEffect, useState } from 'react';\r\nimport examio from '../assets/examio2.png';\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction ExamNav() {\r\n    return (\r\n        <div className='exam-nav'>\r\n            <img src={examio} height=\"20\" width=\"90\"></img>\r\n            <button className='hall-but shadow-5 grow' style={{ marginTop: \"0px\" }}\r\n            onClick={() => {\r\n\r\n            }}>\r\n                Submit\r\n            </button>\r\n            <button>\r\n                settings\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ExamFoot() {\r\n    return (\r\n        <div className='exam-foot'>\r\n            <h3>Best of Luck  </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ExamTitle(props) {\r\n    return (\r\n        <div className='exam-title shadow-5'>\r\n            <h2>{props.title}</h2>\r\n            <Timer time={props.time} />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Timer(props) {\r\n    var timer;\r\n\r\n    useEffect(\r\n        () => {\r\n            let duration = props.time;\r\n            let timer_tag = document.getElementById(\"exam-timer\");\r\n            let split = time => {\r\n                let hours = Math.floor(time / 3600);\r\n                let minutes = Math.floor((time % 3600) / 60);\r\n                let seconds = Math.floor((time % 3600) % 60)\r\n                return [hours, minutes, seconds]\r\n            }\r\n            function beautify(num) {\r\n                if (num < 10) {\r\n                    return '0' + num;\r\n                } else {\r\n                    return num\r\n                }\r\n            }\r\n\r\n            timer = setInterval(\r\n                () => {\r\n                    if (duration < 0) {\r\n                        clearInterval(timer);\r\n                        // some other function\r\n                    }\r\n                    let [hour, min, sec] = split(duration)\r\n                    timer_tag.innerHTML = `${hour === 0 ? \"\" : beautify(hour) + \":\"}${beautify(min)}:${beautify(sec)}`\r\n\r\n                    duration--;\r\n                }, 1000\r\n            )\r\n\r\n            return function cleanup() {\r\n                try {\r\n                    clearInterval(timer)\r\n                } catch {\r\n\r\n                }\r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <h3 id='exam-timer'>00:00</h3>\r\n    )\r\n}\r\n\r\nfunction ExamPaper(props) {\r\n    let questions = props.question;\r\n\r\n    function updateAnswer (e) {\r\n        let arrange = num => {\r\n            if(num < 10) {\r\n                return \"00\" + num\r\n            } else if( num < 100){\r\n                return \"0\" + num\r\n            } else {\r\n                return `${num}`\r\n            }\r\n        }\r\n        let ans = e.target;\r\n        let number = arrange(Number(ans.name.split('-')[1]));\r\n        let check = false;\r\n        let answer = Cookies.get(\"answer\").split(\"----\")\r\n\r\n        for(let i of answer) {\r\n            if(i.slice(0,3) === number) {\r\n                i = number + ans.value;\r\n                check = true;\r\n            }\r\n        }\r\n\r\n        if (check) {\r\n            answer.push(number + ans.value)\r\n        }\r\n\r\n        Cookies.set(\"answer\", answer.join('----'))\r\n    }\r\n\r\n    function Question(props) {\r\n        let question = props.question\r\n\r\n        let display = quest => {\r\n            let what = <h2>\r\n                {quest.number}. {quest.question}\r\n            </h2>\r\n            if (quest.mode === 'o') {\r\n                let comp = [];\r\n\r\n                function change(num) {\r\n                    return [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"][num]\r\n                }\r\n                for(let i of quest.options) {\r\n                    comp.push(\r\n                        <div className='exam-option'>\r\n                        <input className=\"exam-choice\"  type=\"radio\" name={'question-' + quest.number} value={i} onChange={event => {updateAnswer(event)}}></input>\r\n                        <h3> {change(quest.options.indexOf(i))}. {i}</h3>\r\n                        </div>\r\n                    )\r\n                }\r\n                return [what, comp]\r\n            } else {\r\n                return [what,\r\n                    <textarea name={'question-' + quest.number} className='exam-answer'  onChange={event => {updateAnswer(event)}}></textarea>\r\n                ]\r\n            }\r\n        }\r\n        return (\r\n            <div className='exam-div'>\r\n                {display(question)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function generate(questions) {\r\n        let comp  = []\r\n        for(let i of questions) comp.push(<Question question={i}/>)\r\n        return comp\r\n    }\r\n    return (\r\n        <div className='exam-paper shadow-5'>\r\n            {generate(questions)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction QuestionPaper(props) {\r\n    var exam = props.exam;\r\n\r\n    function submitExam() {\r\n        let dest = {};\r\n        apiFetch(\"PUT\", `hall/${props.token}/${props.code}`, {\r\n            answers : Cookies.get(\"answers\")\r\n        }, dest)\r\n        .then(\r\n            () => {\r\n                if(dest.status === 200) {\r\n                    // the post submission process\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (Cookies.get(\"answers\") === undefined) {\r\n                Cookies.set(\"answers\", \"\")\r\n            }\r\n        },[]\r\n    )\r\n    return (\r\n        <div className=\"exam-page\">\r\n            <ExamNav />\r\n            <div className='exam-body'>\r\n                <ExamTitle title={exam.details.name} time={exam.details.duration} />\r\n                <ExamPaper question={exam.questions} />\r\n            </div>\r\n            <ExamFoot />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default QuestionPaper;","import { CountDownTimer, apiFetch } from \"../functions/function\";\r\nimport Cookies from \"js-cookie\";\r\nimport \"../css/hall.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Loading from \"../components/Loading\";\r\nimport QuestionPaper from \"../components/QuestionPaper\";\r\nimport examio from \"../assets/examio2.png\";\r\n\r\nfunction HallNav() {\r\n    return (\r\n        <div className=\"hall-nav\">\r\n            <img src={examio} height=\"20\" width=\"90\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction HallFoot() {\r\n    return (\r\n        <div className=\"hall-foot\">\r\n            <h3 className=\"small-marg\"> examio &copy; {new Date().getFullYear()} </h3>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Invigilator(props) {\r\n    const history = useHistory();\r\n    let [examState, setExamState] = useState(null)\r\n\r\n    useEffect(   \r\n        () => {\r\n            let exams = Cookies.get(\"current-exam\");\r\n\r\n            if (exams !== undefined) {\r\n                let info = exams.split('----');\r\n                if (info[1] === props.code) {\r\n                    setExamState(\"during\")\r\n                }\r\n            } else {\r\n                setExamState(\"start\")\r\n            }\r\n            \r\n        },[]\r\n    )\r\n\r\n    function organizeHall(state) {\r\n        function ChangeUser () {\r\n            return (\r\n                <div>\r\n                <h3 className=\"small-marg\" style={{textAlign : \"center\"}}> switch account from \"{props.user.info.name}\" ? </h3>\r\n                <h3 className=\"small-marg\" style={{marginBottom : \"30px\"}}><span className=\"hall-link grow shadow-5\"\r\n                onClick={\r\n                    () => {\r\n                        let path = process.env.PUBLIC_URL + \"/#/login/oneTime\";\r\n                        let top = (window.outerHeight / 2) - 250\r\n                        let left = (window.outerWidth / 2) - 250\r\n                        let loginWin = window.open(path, \"Login to account\", `height=500,width=500,top=${top},left=${left},location=no`);\r\n                        console.log(loginWin)\r\n                        loginWin.onunload = event => {\r\n                            console.log(\"close\")\r\n                            window.location.reload()\r\n                        }\r\n                    }\r\n                }\r\n                >Click here</span></h3>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        let changeMode = () => {\r\n            console.log(\"esdas\")\r\n            let dest = {}\r\n            apiFetch(\"PUT\", `exam/${props.token}/${props.code}`,{\r\n                id : props.code\r\n            }, dest)\r\n            .then(\r\n                () => {\r\n                    if (dest.status === 200) {\r\n                        setExamState(\"during\");\r\n                        console.log(\"update\")\r\n                        Cookies.set(\"current-exam\", `during----${props.code}`);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        if (state === \"start\") {\r\n\r\n            if (props.exam.status === \"exam has not begun\") {\r\n                if (props.exam.start_time !== null)\r\n                    return (\r\n                        <div>\r\n                            <ChangeUser/>\r\n                            <h2 className=\"small-marg\" style={{ textAlign: \"center\" }}>Time till exam</h2>\r\n                            <CountDownTimer start={props.exam.start_time} big={true}>\r\n                                <button className=\"hall-but shadow-5 grow\" onClick={() => { \r\n                                    changeMode()\r\n                                }}>\r\n                                    START\r\n                                </button>\r\n                            </CountDownTimer>\r\n                        </div>\r\n                    )\r\n                else {\r\n                    return (\r\n                        <h2>The exam has not been started by the examiner.</h2>\r\n                    )\r\n                }\r\n            } else if (props.exam.status === \"exam waiting room\") {\r\n                let detail = props.exam.details\r\n                return (\r\n                    <div>\r\n                        <ChangeUser/>\r\n                        <h2 className=\"small-marg\" style={{ textAlign: \"center\" }}>Exam will soon begin</h2>\r\n                        <CountDownTimer start={detail.start_time} big={true}>\r\n                            <button className=\"hall-but shadow-5 grow\" onClick={() => { changeMode() }}>\r\n                                START\r\n                            </button>\r\n                        </CountDownTimer>\r\n                    </div>\r\n                )\r\n            } else if (props.exam.status === \"the exam is ongoing\") {\r\n                return(\r\n                <div style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n                    <ChangeUser/>\r\n                    <h2 className=\"small-marg\" style={{textAlign : \"center\"}}>The exam has begun..</h2>\r\n                    <button className=\"hall-but shadow-5 grow\" onClick={() => {changeMode()}}> START </button>\r\n                </div>)\r\n            } else if (props.exam.status === \"the exam has ended\") {\r\n                return(\r\n                <div style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n                    <h2 className=\"small-marg\"  style={{textAlign : \"center\"}}>Sorry the exam has already ended</h2>\r\n                    <button className=\"hall-but shadow-5 grow\" onClick={\r\n                        () => {\r\n                            history.push(\"/account/dashboard\")\r\n                        }\r\n                    }>Go back</button>\r\n                </div>\r\n                )\r\n            }\r\n        } else if (state === \"during\") {\r\n            let exam = props.exam;\r\n            if (exam.status === \"the exam is ongoing\") {\r\n                return <QuestionPaper exam={exam} token={props.token} code={props.code}/>\r\n            }\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"center-div-2\">\r\n            {organizeHall(examState)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Hall(props) {\r\n    let [hallData, setData] = useState({\r\n        user: null,\r\n        hall: null\r\n    })\r\n\r\n    let loader = false\r\n\r\n    let [load, setLoad] = useState(false)\r\n\r\n    function loadFunc() {\r\n        loader = !loader\r\n        setLoad(loader)\r\n    }\r\n\r\n    let exam_token = props.match.params.token\r\n\r\n    let getData = () => {\r\n        loadFunc();\r\n        let dest1 = {}, dest2 = {};\r\n        Promise.all([apiFetch(\"GET\", `info/${props.user.token}`, {}, dest1), apiFetch(\r\n            \"GET\", `hall/${props.user.token}/${exam_token}`, {}, dest2\r\n        )])\r\n            .then(\r\n                () => {\r\n                    loadFunc();\r\n                    let user = null, hall = null;\r\n                    if (dest1.status === 200) user = dest1.data;\r\n                    if (dest2.status !== 404) hall = dest2.data;\r\n\r\n                    setData({ ...hallData, user: user, hall: hall })\r\n                }\r\n            )\r\n    }\r\n    useEffect(\r\n        () => {\r\n            getData()\r\n        }, []\r\n    )\r\n\r\n    function registerExam(event) {\r\n        function displayMessage(mes) {\r\n            let where = document.getElementById(\"message\");\r\n            where.innerHTML = mes\r\n        }\r\n\r\n        console.log(event)\r\n        let dest = {};\r\n        loadFunc();\r\n        apiFetch(\"POST\", `exam/${props.user.token}/create`, {\r\n            id: exam_token\r\n        }, dest)\r\n            .then(\r\n                () => {\r\n                    loadFunc()\r\n                    if (dest.status === 403) {\r\n                        let status = dest.data.status\r\n                        if (status === \"exam has already ended\") {\r\n                            displayMessage(\"the exam has already been concluded..\")\r\n                        } else if (status === \"not allowed for this exam\") {\r\n                            displayMessage(\"you are not allowed to write this exam\")\r\n                        }\r\n                        event.target.style.display = \"none\";\r\n                    } else if (dest.status === 404) {\r\n                        displayMessage(\"this exam no longer exists..\");\r\n                        event.target.style.display = \"none\";\r\n                    } else if (dest.status === 200) {\r\n                        event.target.style.display = \"none\";\r\n                        displayMessage(\"Exam registration successfull\");\r\n                        setTimeout(\r\n                            () => {\r\n                                getData()\r\n                            }, 1000\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    function generateHall(hallData) {\r\n        if (hallData.hall === null) {\r\n            return (\r\n                <div className=\"center-div-2\">\r\n                    <h1 className=\"small-marg not-clear\">Oops  !!!</h1>\r\n                    <h4 className=\"small-marg not-clear\">Exam not found...</h4>\r\n                    <h5 className=\"small-marg not-clear\">Recheck link and try again</h5>\r\n                </div>\r\n            )\r\n        } else {\r\n            let exam_data = hallData.hall;\r\n            let user = hallData.user\r\n            if (user === null) {\r\n                if (exam_data.status === \"not authorized to write this exam\") {\r\n                    return (\r\n                        <div className=\"center-div-2\">\r\n                            <h2 className=\"small-marg\"> This exam requires some verificaion</h2>\r\n                            <h3 className=\"small-marg\"> You will need to login on this device.</h3>\r\n\r\n                            <button className=\"hall-but shadow-5 grow\" onClick={\r\n                                () => {\r\n                                    let path = process.env.PUBLIC_URL + \"/#/login/oneTime\";\r\n                                    let top = (window.outerHeight / 2) - 250\r\n                                    let left = (window.outerWidth / 2) - 250\r\n                                    let loginWin = window.open(path, \"Login to account\", `height=500,width=500,top=${top},left=${left},location=no`);\r\n\r\n                                    loginWin.onunload = event => {\r\n                                        console.log(\"close\")\r\n                                        window.location.reload()\r\n                                    }\r\n                                }\r\n                            }>\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Invigilator exam={exam_data} reload={getData}/>\r\n                    )\r\n                }\r\n            } else {\r\n                if (exam_data.status === \"not registered for this examination\") {\r\n                    return (\r\n                        <div className=\"center-div-2\">\r\n                            <h3 className=\"small-marg\" id=\"message\">\"{user.info.name}\" is not registered for this exam</h3>\r\n\r\n                            <button className=\"hall-but shadow-5 grow\" onClick={event => { registerExam(event) }}>\r\n                                Register\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Invigilator exam={exam_data} user={user} reload={getData} code={exam_token} token={props.user.token}/>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Loading show={load} />\r\n            <HallNav />\r\n            {generateHall(hallData)}\r\n            <HallFoot />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Hall;","import {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport {useState, useEffect} from 'react'\nimport Cookie from 'js-cookie';\nimport 'tachyons';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport Loading from './components/Loading';\nimport Home from './pages/Home'\nimport Account  from './pages/Account';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Hall from './pages/Hall'\n\nfunction App() {\n  AOS.init()\n\n  let [user, setUser] = useState({         // the user state\n    name: Cookie.get(\"name\"),\n    token: Cookie.get(\"token\")\n  })\n\n  let loader = false\n\n  let [load, setLoad] = useState(false)\n\n  function loadFunc () {\n    loader = !loader\n    setLoad(loader)\n  }\n\n  let login = data => {                    // logs the user and save the data as a cookie\n    if(data.name !== undefined && data.token !== undefined) {\n      Cookie.set(\"name\", data.name, {expires : 7});\n      Cookie.set(\"token\", data.token, {expires : 7})\n\n      setUser({\n        name: data.name,\n        token : data.token\n      })\n      return \"the data is correct\"\n    } else {\n      return \"the data is not correct\"\n    }\n  }\n\n  let logout = () => {\n    setUser({\n      name : null,\n      token : null\n    })\n    Cookie.remove(\"name\");\n    Cookie.remove(\"token\");\n  }\n\n  return(\n    <Router basename={process.env.PUBLIC_URL}>\n      <Loading show={load}/>\n      <Switch>\n        <Route path='/' exact component={(props) => <Home {...props} user={user} />}/>\n        <Route path='/home' exact component={(props) => <Home {...props} user={user} />}/>\n        <Route path='/account/:page' exact component={ (props) => <Account user={user} \n                                  loginFunc={login} logoutFunc={logout} {...props} load={loadFunc}/>}/>\n        <Route path='/login' exact component={() => <Login loginFunc={login} load={loadFunc}/>}/>\n        <Route path='/login/:type' exact component={(props) => <Login loginFunc={login} load={loadFunc} {...props} />}/>\n        <Route path='/signup' exact component={() => <Signup load={loadFunc}/>}/>\n        <Route path='/hall/:token' exact component={(props) => <Hall {...props} user={user} load={loadFunc} />}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}