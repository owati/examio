{"version":3,"sources":["assets/examio.png","components/Loading.js","pages/Home.js","functions/function.js","assets/backarr.png","components/Exam.js","assets/examio2.png","assets/profile.png","components/Examinee.js","pages/Account.js","pages/Login.js","pages/Signup.js","components/QuestionPaper.js","pages/Hall.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","props","timer","useEffect","show","count","setInterval","i","which","document","getElementById","style","width","height","clearInterval","className","src","examio","display","justifyContent","alignItems","marginTop","id","Home","user","name","API_URL","apiFetch","a","method","endPoint","body","destination","fetch","JSON","stringify","headers","response","status","json","res","data","console","log","CountDownTimer","useState","setShow","beautify","num","dest","then","start","now","Date","curr_time","end","duration","Math","floor","days","hours","minutes","secs","innerHTML","undefined","children","big","fontSize","home_url","ExamResult","exam","token","load","results","responses","setResponses","getResult","Object","assign","position","onClick","getElementsByClassName","margin","map","x","color","mark","organiseResult","ExamLogs","overflow","textAlign","time","toLocaleDateString","toLocaleTimeString","generateLogs","ExamEdit","setData","arrangeData","key","regularInput","place","type","placeholder","onChange","event","ref","target","value","dateChange","self","check","other","date","String","toJSON","cap_key","toUpperCase","join","comp","push","padding","borderBottom","includes","div","transition","generatePage","changes","reload","mes","header","scrollTop","setTimeout","displayError","QuestionEdit","quest","setQuest","page","setPage","objnum","setObj","message","container","handleQuestionCreate","preventDefault","formData","FormData","options","get","question","option","mode","optionGenerate","required","addEventListener","UpdateQuestion","field","setField","setMode","form","number","length","append","list","error","answer","setOptions","getField","min","marginBottom","arrange","str","replace","overflowY","questionList","questions","ExamDetail","loading","examData","setExam","getData","destination1","destination2","Promise","all","exam_id","calcPercentage","total","ratio","round","view","back","borderRadius","backgroundImage","backgroundColor","paddingTop","href","flexDirection","window","location","selectPage","ViewPage","sorted","setSort","buttonFunc","ongoing","complete","exams","content","date_stamp","reverse","generateExamList","CreateExam","disableValue","e","valued","checked","input","input2","removeAttribute","setAttribute","border","handleExamCreate","num_of_students","verification","specific","personal","exam_code","Number","change","removeEventListener","max","disabled","marginLeft","Exam","exam_data","exam_page","setExamPage","fetchExamDetails","history","useHistory","joinHall","deleteExam","displayExtended","RegisterExam","handleRegister","remark","Examinee","Sidebar","word","butt","setButt","buttons","setButtons","butList","butCompList","innerWidth","indexOf","url_push","toLowerCase","profile","email","Account","userInfo","setInfo","loader","info","cursor","match","params","role","Login","whether","handleLoginSubmit","password","res_data","login","loginFunc","close","err","head","handleRequestError","getFullYear","Signup","handleSubmit","phone","ExamNav","submit","prompt","set_div","SettingsDiv","settings","one_one","ExamFoot","ExamTitle","title","Timer","timer_tag","hour","sec","ExamPaper","curr","setCurr","answers","Cookies","QuestButton","split","filter","slice","updateAnswer","ans","set","Question","setOption","what","generate","QuestionPaper","setSettings","submitExam","code","hash","details","HallNav","HallFoot","Invigilator","examState","setExamState","state","ChangeUser","top","outerHeight","left","outerWidth","loginWin","open","process","onunload","changeMode","start_time","detail","organizeHall","Hall","hall","hallData","setLoad","loadFunc","exam_token","dest1","dest2","displayMessage","registerExam","generateHall","App","AOS","init","Cookie","setUser","expires","logout","remove","basename","path","exact","component","logoutFunc","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.15e7c7ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/examio.1004fcba.png\";","import { useEffect } from \"react\";\r\nimport examio from \"../assets/examio.png\";\r\nimport \"../css/loading.css\";\r\n\r\nfunction Loading(props) {\r\n    var timer;\r\n\r\n    useEffect(() => {\r\n        if (props.show) {\r\n            var count = 1;\r\n            timer = setInterval(() => {\r\n                for (let i = 1; i < 4; i++) {\r\n                    let which = document.getElementById(`load${i}`)\r\n\r\n                    if (i === count) {\r\n                        which.style.width = \"13px\";\r\n                        which.style.height = \"13px\";\r\n                    } else {\r\n                        which.style.width = \"10px\";\r\n                        which.style.height = \"10px\";\r\n                    }\r\n                }\r\n\r\n                if (count === 3) {\r\n                    count = 1;\r\n                } else {\r\n                    count++;\r\n                }\r\n            }, 500)\r\n        } else {\r\n            clearInterval(timer)\r\n        }\r\n\r\n        return function cleanup() {\r\n            clearInterval(timer)\r\n        }\r\n\r\n    }, [props])\r\n\r\n    return props.show ? (\r\n        <div className=\"load-center\">\r\n            <img src={examio} height=\"30\" width=\"120\"></img>\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                alignItems: \"center\",\r\n                width: \"50px\",\r\n                height: \"30px\",\r\n                marginTop: \"10px\"\r\n            }}>\r\n                <div id=\"load1\">\r\n\r\n                </div>\r\n                <div id=\"load2\">\r\n\r\n                </div>\r\n                <div id=\"load3\">\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    ) : ''\r\n}\r\n\r\nexport default Loading;","function Home(props){\r\n    return (\r\n        <h1>Hello world == {props.user.name}</h1>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import { useState ,useEffect } from \"react\";\r\n\r\nexport const API_URL =     \"https://examio.herokuapp.com/\" //\"http://127.0.0.1:8000/\" \r\n\r\nexport const apiFetch = async function (method = 'GET', endPoint = null, body = {}, destination) {\r\n\r\n    try {\r\n        let response = method !== \"GET\" ? await fetch(API_URL + endPoint, {\r\n            method: method,\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"content-type\": \"application/json\"                      // to be returned\r\n            }\r\n        }) : await fetch(API_URL +  endPoint)\r\n        destination.status = response.status\r\n\r\n        let res = await response.json()\r\n        destination.data = res;\r\n        console.log(destination)\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport var CountDownTimer = props => {\r\n\r\n    let [show, setShow] = useState(false);\r\n\r\n    function beautify(num) {\r\n        if (num < 10) {\r\n            return  '0' + num;\r\n        } else {\r\n            return num\r\n        }\r\n    }\r\n    \r\n    useEffect(\r\n        () => {\r\n            let dest = {};\r\n            var timer;\r\n            apiFetch(\"GET\",\"time\",{},dest)\r\n            .then(\r\n                () => {\r\n                    if (dest.status === 200) {\r\n                        console.log(props.start)\r\n                        let now = new Date(dest.data.curr_time);\r\n                        let end = new Date(props.start)\r\n                        console.log(now, end, now -end)\r\n                        let duration = end - now;\r\n                        duration = Math.floor(duration / 1000)\r\n                        timer = setInterval(() => {\r\n                            if (duration < 1) {\r\n                                clearInterval(timer);\r\n                                setShow(true)\r\n                            }\r\n                            let days = Math.floor(duration / (3600 * 24))\r\n                            let hours = Math.floor((duration % (3600 * 24)) / 3600)\r\n                            let minutes = Math.floor((duration % 3600) / 60)\r\n                            let secs = duration % 60\r\n\r\n                            try{\r\n                                document.getElementById(\"timer\").innerHTML = `${days} days ${beautify(hours)}:${beautify(minutes)}:${beautify(secs)}`\r\n                            } catch {\r\n\r\n                            }\r\n                            duration -= 1\r\n                        }, 1000);\r\n                    }\r\n                }\r\n            )\r\n\r\n            return function cleanup () {\r\n                try{\r\n                    clearInterval(timer)\r\n                } catch {\r\n\r\n                }\r\n            }\r\n        },[]\r\n    )\r\n    return !show ? (\r\n        <h2 id=\"timer\" className=\"small-marg\" style={props.big ? {fontSize : \"50px\"} : {}}>00:00:00</h2>\r\n    ) : props.children === undefined ? (\r\n        <h2>00:00:00</h2>\r\n    ) : (\r\n        <div>\r\n         {props.children}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/backarr.2c7faef3.png\";","import { useState, useEffect } from 'react';\r\nimport { apiFetch, CountDownTimer } from '../functions/function';\r\nimport back from '../assets/backarr.png';\r\n\r\nconst home_url = \"examio\"\r\n\r\n\r\nfunction ExamResult({ exam, token, load }) {\r\n\r\n    let [responses, setResponses] = useState({results : null})\r\n\r\n    let getResult = () => {\r\n        load();\r\n        let dest = {};\r\n        apiFetch(\"GET\", `result/${token}/${exam.id}`, {}, dest)\r\n            .then(\r\n                () => {\r\n                    load();\r\n                    if (dest.status === 200) {\r\n                        setResponses(Object.assign({}, responses, {results : dest.data.results}));\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            if (exam.status === \"end\") { // when the exam has already been ended\r\n                getResult();\r\n            }\r\n\r\n        }, []\r\n    )\r\n\r\n    let organiseResult = responses => {\r\n        if (responses === null) {\r\n            return (\r\n                <div>\r\n                    <h1> the exam is still ongoing...</h1>\r\n                    <button className='exam-create-but' onClick={() => {getResult()}}>get result anyway </button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return responses.map(\r\n                x => (\r\n                    <button className='exam-list-button grow shadow-5' >\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{x.user} </h4> <h4 style={{ margin: \"0px\" }}></h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>score : {x.mark}</h4>\r\n                        </div>\r\n                    </button>\r\n                )\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className='exam-create-div'>\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"create-header\" style={{ margin: \"5px\" }}>View the exam results..</h2>\r\n            </div>\r\n            {organiseResult(responses.results)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ExamLogs(props) {\r\n    let [hall, setHall] = useState({})\r\n\r\n    function generateLogs(status) {\r\n        switch (status) {\r\n            case \"created\":\r\n                if (props.exam.start === null) {\r\n                    return [\r\n                        <h2>the exam is yet to start nad has no start time..</h2>,\r\n                        <button className='exam-create-but'>Start exam</button>\r\n                    ]\r\n                } else {\r\n                    let time = new Date(props.exam.start)\r\n                    return [\r\n                        <h2 className='small-marg'>Start time: </h2>,\r\n                        <h3 className='small-marg'>{time.toLocaleDateString()} {time.toLocaleTimeString()} </h3>,\r\n                        <h3 className='small-marg' style={{ marginTop: \"30px\" }}> exam will begin in..</h3>,\r\n                        <CountDownTimer start={props.exam.start}>\r\n\r\n                        </CountDownTimer>\r\n                    ]\r\n                }\r\n            case \"end\":\r\n                return [\r\n                    <h1 className='small-marg'>exam has ended..</h1>\r\n\r\n                ]\r\n\r\n            default:\r\n                return <h1>Oops</h1>\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        // let endpoint = API_URL.replace(\"http\", \"ws\") + `logs/${props.token}/${props.exam.id}`\r\n        // let socket = new WebSocket(endpoint)\r\n\r\n        // socket.onopen = e => {\r\n        //     console.log(\"open\", e)\r\n        // }\r\n        // socket.onmessage = e => {\r\n        //     console.log(\"message\", e)\r\n        // }\r\n\r\n        // socket.onerror = e => {\r\n        //     console.log(\"error\", e)\r\n        // }\r\n\r\n        // socket.onclose = e => {\r\n        //     console.log(\"close\", e)\r\n        // }\r\n\r\n        // return function cleanup() {\r\n        //     socket.close()\r\n        // }\r\n        if (props.exam.status === \"created\") {\r\n            if (props.exam.start === null) {\r\n\r\n            }\r\n        }\r\n    }, [])\r\n    try {\r\n        return (\r\n            <div className='exam-create-div' style={{ height: \"100%\", overflow: \"hidden\" }}>\r\n                <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                    <h2 className='back-button grow' onClick={\r\n                        () => {\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                        }\r\n                    }>&#8630; </h2>\r\n                    <h2 className='small-marg' style={{ textAlign: \"left\" }}>Exam logs.</h2>\r\n                </div>\r\n\r\n                <div className='log-div'>\r\n                    {generateLogs(props.exam.status)}\r\n                </div>\r\n            </div>\r\n        )\r\n    } catch {\r\n        return (\r\n            <div className='log-div'>\r\n                <h3 style={{ textAlign: \"center\", color: \"rgba(242, 242, 242, 0.529)\" }}>loading...</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction ExamEdit(props) {\r\n    let [data, setData] = useState({});\r\n\r\n    function displayError(mes) {\r\n        try {\r\n            let header = document.getElementById(\"edit-header\");\r\n            document.getElementById(\"edit-div\").scrollTop = \"0px\";\r\n            header.innerHTML = mes;\r\n            setTimeout(\r\n                () => {\r\n                    header.innerHTML = \"Edit questions..\"\r\n                }, 2000\r\n            )\r\n\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    function generatePage() {\r\n        function arrangeData(key) {\r\n            function regularInput(which, place, type) {\r\n                if (which === \"num_of_students\") which = \"students\"\r\n                return <input className='create-form-input' style={{ width: \"150px\", height: \"30px\" }} placeholder={place} type={type} onChange={event => {\r\n                    let ref = { ...data };\r\n                    ref[which] = event.target.value;\r\n                    setData(ref);\r\n                }}></input>\r\n\r\n            }\r\n\r\n            switch (key) {\r\n                case \"num_of_students\":\r\n                    return [\"Number of students\", regularInput(key, \"Number of students\", \"number\")];\r\n                case \"total\":\r\n                    return [\"Total marks\", regularInput(key, \"Total marks\", \"number\")];\r\n                case \"end-time\":\r\n                    return [\"End time\", <h3 style={{ margin: \"10px 0px\", color: \"rgba(255, 248, 220, 0.474)\" }}>this field cannot be changed</h3>]\r\n                case \"start\":\r\n                    let dateChange = event => {\r\n                        let self = event.target;\r\n                        let check = self.type === \"date\"\r\n                        let other = document.getElementById(`${check ? \"time-update\" : \"date-update\"}`);\r\n                        let ref = { ...data };\r\n                        let date = new Date(check ? self.value + \" \" + other.value : other.value + \" \" + self.value);\r\n                        if (String(date) === \"Invalid Date\") {\r\n                            ref[key] = null;\r\n                        } else {\r\n                            ref[key] = date.toJSON();\r\n                        }\r\n                        setData(ref)\r\n                    }\r\n                    let input = <div style={{ display: \"flex\" }}>\r\n                        <input className='create-form-input' style={{ width: \"150px\", height: \"30px\" }} type=\"date\" id=\"date-update\" onChange={event => { dateChange(event) }} ></input>\r\n                        <input className='create-form-input' style={{ width: \"150px\", height: \"30px\" }} type=\"time\" id=\"time-update\" onChange={event => { dateChange(event) }} ></input>\r\n                    </div>\r\n                    return [\"Start time\", input]\r\n                case \"duration\":\r\n                    return [\"Exam duration\", regularInput(key, \"Number of students\", \"number\")];\r\n\r\n                default:\r\n                    let cap_key = [...key]\r\n                    cap_key[0] = cap_key[0].toUpperCase();\r\n\r\n                    return [cap_key.join(\"\"), regularInput(key, cap_key.join(\"\"), \"text\")]\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        let comp = []\r\n        for (let i in props.exam) {\r\n            if (i === \"id\" | i === \"date_stamp\" | i === \"exam_code\") {\r\n\r\n            } else {\r\n                comp.push(\r\n                    <div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"10px 0px\", borderBottom: \"rgba(255, 248, 220, 0.474) 2px solid\" }}>\r\n                            <div>\r\n                                <h3 style={{ margin: \"4px 0px\" }}>{arrangeData(i)[0]}</h3>\r\n                                <h5 style={{ margin: \"0px\" }}>{props.exam[i] === null ? \"not specified\" : [\"start\", \"end-time\"].includes(i) ? `${new Date(props.exam[i]).toLocaleDateString() + \" \" + new Date(props.exam[i]).toLocaleTimeString()}` :\r\n                                    [\"duration\", \"personal_time\"].includes(i) ? `${props.exam[i][0]} hours ${props.exam[i][1]}minutes ${props.exam[i][2]} seconds` : props.exam[i]}</h5>\r\n                            </div>\r\n\r\n                            <button className='exam-create-but' onClick={() => {\r\n                                let div = document.getElementById(\"field-\" + i)\r\n                                if (div.style.height === \"0px\") {\r\n                                    div.style.height = \"70px\"\r\n                                } else {\r\n                                    div.style.height = \"0px\"\r\n                                }\r\n\r\n                            }}>change</button>\r\n                        </div>\r\n                        <div style={{\r\n                            height: \"0px\",\r\n                            overflow: \"hidden\",\r\n                            transition: \"0.8s ease all\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\"\r\n                        }} id={\"field-\" + i}>\r\n\r\n                            {arrangeData(i)[1]}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n\r\n        return comp\r\n    }\r\n    return (\r\n        <div className='exam-create-div' id=\"edit-div\">\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"edit-header\" style={{ margin: \"5px\" }}> Edit exam fields...</h2>\r\n\r\n            </div>\r\n            <h3 style={{ color: \"rgba(255, 248, 220, 0.474)\" }}>Exam code: {props.exam[\"exam code\"]}</h3>\r\n            {generatePage()}\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", margin: \"20px\" }}>\r\n                <button className=\"exam-create-but grow shadow-5\" onClick={() => {\r\n\r\n                    {\r\n                        props.load();\r\n                        console.log(data)\r\n                        let dest = {}\r\n                        apiFetch(\"PUT\", `exam/${props.token}/${props.id}`, { changes: data }, dest)\r\n                            .then(\r\n                                () => {\r\n                                    if (dest.status === 200) {\r\n                                        props.load();\r\n                                        props.reload();\r\n                                    } else {\r\n                                        displayError(\"update not sucessfull...\")\r\n                                    }\r\n                                }\r\n                            )\r\n                    }\r\n                }}>save changes</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nfunction QuestionEdit(props) {\r\n    let [quest, setQuest] = useState(\"obj\");\r\n\r\n    let [page, setPage] = useState(\"create\");\r\n    let [objnum, setObj] = useState(4);\r\n\r\n\r\n    function displayError(message) {\r\n        let header = document.getElementById('create-header'), container = document.getElementsByClassName(\"exam-action-page\")[0];\r\n        header.innerHTML = message;\r\n        container.scrollTop = 0;\r\n        setTimeout(() => {\r\n            header.innerHTML = \"Set the exam questions...\"\r\n        }, 1500);\r\n    }\r\n\r\n    function generatePage(page) {\r\n        function UpdateQuestion(props) {\r\n            let [field, setField] = useState(\"mark\");\r\n            let [mode, setMode] = useState(props.mode)\r\n\r\n            function getField() {\r\n                switch (field) {\r\n                    case \"others\":\r\n                        let comp = []\r\n                        if (mode === 'o') {\r\n                            for (let i = 0; i < props.option.length; i++) {\r\n                                comp.push(\r\n                                    <input type=\"text\" className=\"create-form-input\" name={`option${i + 1}`} placeholder={`option ${i + 1}`}></input>\r\n                                )\r\n                            }\r\n                            comp.push(<input type=\"number\" className=\"create-form-input\" name=\"correct\" placeholder='the number of the correct option'></input>)\r\n                        } else {\r\n                            comp = <textarea className='create-form-input' placeholder={'enter the answer here\\n' + (mode === 'g' ? 'enter the answer for each gap on a new line' : '')} name=\"options\"></textarea>\r\n                        }\r\n                        return (\r\n                            <div>\r\n                                <select className='create-form-input' onChange={\r\n                                    event => {\r\n                                        setMode(event.target.value)\r\n                                    }\r\n                                } name=\"mode\" value={mode}>\r\n                                    <option style={{ color: \"black\" }} value='o'> Obj</option>\r\n                                    <option style={{ color: \"black\" }} value='g'>German</option>\r\n                                    <option style={{ color: \"black\" }} value='t'>Theory</option>\r\n                                </select>\r\n                                <textarea className='create-form-input' placeholder={'enter the new question' + (mode === 'g' ? '\\n replace empty gaps with {dash}' : \"\")} name=\"question\"></textarea>\r\n                                {comp}\r\n                            </div>\r\n                        )\r\n                    case \"mark\":\r\n                        return (\r\n                            <input type=\"number\" name=\"mark\" className=\"create-form-input\" placeholder=\"exam mark\"></input>\r\n                        )\r\n                }\r\n            }\r\n\r\n            let setOptions = quest => {\r\n                try {\r\n                    let options = props.option\r\n                    let answer = props.answer\r\n\r\n                    function change(num) {\r\n                        return ['a', 'b', 'c', 'd', 'e', 'f'][num - 1]\r\n                    }\r\n                    if (quest === 'o') {\r\n                        let comp = [], count = 1;\r\n                        for (let i of options) {\r\n                            comp.push(\r\n                                <div> <h4 style={{ margin: \"10px\" }}>{change(count)}. {i} {i === answer ? '(correct)' : \"\"}</h4></div>\r\n                            )\r\n                            count++;\r\n                        }\r\n                        return comp;\r\n                    } else if (quest === 'g') {\r\n                        return <div> <h4 style={{ margin: \"10px\" }}>{options}</h4></div>\r\n\r\n                    } else {\r\n                        return <div> <h4 style={{ margin: \"10px\" }}>{options}</h4></div>\r\n\r\n                    }\r\n                } catch {\r\n                    return <div></div>\r\n                }\r\n            }\r\n\r\n\r\n            useEffect(() => {\r\n                let handleQuestionUpdate = function (event) {\r\n                    event.preventDefault();\r\n                    try {\r\n\r\n\r\n                        let displayError = message => {\r\n                            let header = document.getElementById('edit-header' + props.num);\r\n                            let div = document.getElementById(`question${props.num}`)\r\n                            div.scrollTop = \"0px\"\r\n                            header.innerHTML = message;\r\n                            setTimeout(\r\n                                () => {\r\n                                    header.innerHTML = 'Edit Questions...'\r\n                                }, 3000\r\n                            )\r\n                        }\r\n                        let form = event.target;\r\n                        let formData = new FormData(form);\r\n\r\n                        if (formData.get(\"field\") === \"mark\") {\r\n                            if (formData.get(\"mark\") === null) {\r\n\r\n                            } else {\r\n                                props.load();\r\n                                let dest = {};\r\n                                apiFetch(\"PUT\", `question/${props.token}/${props.id}`, {\r\n                                    number: props.num,\r\n                                    changes: {\r\n                                        mark: formData.get(\"mark\")\r\n                                    }\r\n                                }, dest).then(\r\n                                    () => {\r\n                                        if (dest.status === 200) {\r\n                                            props.load()\r\n                                            props.reload()\r\n                                        } else {\r\n\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n                        } else {\r\n                            if (mode === 'o') {\r\n                                if ((\r\n                                    function () {\r\n                                        let check = false\r\n                                        for (let i = 0; i < props.option.length; i++) {\r\n                                            if (formData.get(`option${i + 1}`) === null) {\r\n                                                check = true\r\n                                            }\r\n                                        }\r\n                                        return formData.get(\"correct\") === null ? true : check;\r\n                                    }\r\n                                )()) formData.append(\"options\", '')\r\n\r\n                                else formData.append(\"options\", [formData.get(\"correct\"),\r\n                                ...(\r\n                                    function () {\r\n                                        let list = [];\r\n                                        for (let i = 0; i < props.option.length; i++) {\r\n                                            list.push(formData.get(`option${i + 1}`))\r\n                                        }\r\n                                        return list\r\n                                    }\r\n                                )()\r\n                                ])\r\n                            }\r\n\r\n                            if (formData.get(\"mode\") !== props.mode) {\r\n                                console.log(typeof formData.get(\"question\"))\r\n                                if (formData.get(\"question\") === '' || formData.get(\"options\") === null) {\r\n                                    displayError(\"Once the mode is changed, no field can be left empty\");\r\n                                    return\r\n                                }\r\n                            }\r\n                            let dest = {};\r\n                            props.load();\r\n                            apiFetch(\"PUT\", `question/${props.token}/${props.id}`, {\r\n                                number: props.num,\r\n                                changes: {\r\n                                    question: formData.get(\"question\"),\r\n                                    options: formData.get(\"options\")\r\n                                }\r\n                            }, dest).then(\r\n                                () => {\r\n                                    if (dest.status === 200) {\r\n                                        props.load();\r\n                                        props.reload();\r\n                                    } else {\r\n\r\n                                    }\r\n                                }\r\n                            )\r\n\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }\r\n                let form = document.getElementById(\"question-update\" + props.num)\r\n                form.addEventListener(\"submit\", handleQuestionUpdate);\r\n\r\n            }, [])\r\n\r\n\r\n            return (\r\n                <div style={{ height: \"0px\", transition: \"1.0s ease all\", overflow: \"hidden\" }} id={`question${props.num}`}>\r\n                    <h3>answers</h3>\r\n                    {setOptions(props.mode)}\r\n\r\n                    <h3 id={\"edit-header\" + props.num}>Edit Questions..</h3>\r\n                    <form id={\"question-update\" + props.num} style={{ padding: \"10px\" }} >\r\n                        <select className='create-form-input' name=\"field\" onChange={event => {\r\n                            setField(event.target.value)\r\n                        }}>\r\n                            <option style={{ color: \"black\" }} value=\"mark\">Mark</option>\r\n                            <option style={{ color: \"black\" }} value=\"others\">Others</option>\r\n                        </select>\r\n                        {getField()}\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}> <button className='exam-create-but shadow-5 grow'>make changes</button></div>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n        function questionList(list) {\r\n\r\n            function arrange(str, mode) {\r\n                if (mode === 'g') {\r\n                    while (str.includes(\"{dash}\")) {\r\n                        str = str.replace(\"{dash}\", \"______\")\r\n                    }\r\n                    return str;\r\n                } else {\r\n                    return str;\r\n                }\r\n            }\r\n            let comp = []\r\n            for (let i of list) {\r\n                comp.push(\r\n                    <div>\r\n                        <button className='exam-list-button grow shadow-5' onClick={() => {\r\n                            let div = document.getElementById(`question${i.number}`);\r\n                            if (div.style.height === \"300px\") {\r\n                                div.style.height = \"0px\";\r\n                                div.style.overflowY = \"hidden\";\r\n                            } else {\r\n                                div.style.height = \"300px\";\r\n                                div.style.overflowY = \"scroll\";\r\n                            }\r\n                        }}>\r\n                            <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <h4 style={{ margin: \"0px\" }}>{i.number} {arrange(i.question, i.mode)}</h4> <h4 style={{ margin: \"0px\" }}>mode :{i.mode}</h4>\r\n                            </div>\r\n                            <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>{i.mark} mark</h4>\r\n                            </div>\r\n                        </button>\r\n                        <UpdateQuestion answer={i.answer} option={i.options} mode={i.mode} num={i.number} load={props.load} reload={props.reload} token={props.token} id={props.id} />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return comp;\r\n        }\r\n        switch (page) {\r\n            case \"create\":\r\n                return (\r\n                    <div>\r\n                        <div className='question-div'>\r\n                            <select className='create-form-input' value={quest} style={{ width: \"fit-content\" }} onChange={event => {\r\n                                setQuest(event.target.value)\r\n                            }}>\r\n                                <option value=\"obj\" style={{ color: \"black\" }}>Obj</option>\r\n                                <option value=\"theory\" style={{ color: \"black\" }}>Theory</option>\r\n                                <option value=\"german\" style={{ color: \"black\" }}> German</option>\r\n                            </select>\r\n\r\n                            {quest === \"obj\" ? <input className='create-form-input' style={{ width: \"150px\" }} type=\"number\" placeholder=\"no of options\" onChange={event => {\r\n                                let value = event.target.value;\r\n                                if (value < 2 || value > 6) {\r\n                                    displayError(\"number must be between 2 and 6..\")\r\n                                    event.target.value = value < 2 ? 2 : 6;\r\n                                    setObj(event.target.value)\r\n                                } else {\r\n                                    setObj(event.target.value)\r\n                                }\r\n                            }}></input> : \"\"}\r\n\r\n                            <input className=\"create-form-input\" style={{ width: \"100px\" }} type=\"number\" min=\"0\" placeholder='mark' id=\"mark\"></input>\r\n                        </div>\r\n\r\n                        <form id=\"questions-form\" style={{ height: \"fit-content\" }}>\r\n                            <textarea className='create-form-input' name=\"question\" style={{ height: \"100px\", marginBottom: \"20px\" }} required placeholder={'enter the question here...\\n' + (quest === 'german' ? \"replace every gap to be filed with {dash} \" : '')}></textarea>\r\n                            {optionGenerate(quest)}\r\n\r\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                                <button className='exam-create-but shadow-5 grow'>add question</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                )\r\n            case \"view\":\r\n                return (\r\n                    <div>\r\n                        {questionList(props.questions)}\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n    function handleQuestionCreate(event) {\r\n        props.load();\r\n        event.preventDefault();\r\n        let formData = new FormData(event.target);\r\n        let mark = document.getElementById(\"mark\");\r\n        let data, dest = {};\r\n        if (quest === \"obj\") {\r\n            let options = []\r\n            for (let i = 0; i < objnum; i++) {\r\n                options.push(formData.get(`option${i + 1}`))\r\n            }\r\n            options = [formData.get(`option${formData.get(\"correct\")}`), ...options]\r\n            data = {\r\n                question: formData.get(\"question\"),\r\n                option: options.join(\"--\"),\r\n                mode: quest === \"obj\" ? 'o' : quest === \"theory\" ? 't' : 'g',\r\n                mark: mark.value === '' ? 1 : mark.value\r\n            }\r\n        } else {\r\n            data = {\r\n                question: formData.get(\"question\"),\r\n                option: formData.get(\"option\"),\r\n                mode: quest === \"obj\" ? 'o' : quest === \"theory\" ? 't' : 'g',\r\n                mark: mark.value === '' ? 1 : mark.value\r\n            }\r\n        }\r\n\r\n        console.log(data)\r\n        apiFetch(\"POST\", `question/${props.token}/${props.id}`, data, dest)\r\n            .then(\r\n                () => {\r\n                    props.load();\r\n                    if (dest.status === 200) {\r\n                        displayError(\"Question added successfully\");\r\n                        props.reload();\r\n\r\n                        for (let i of document.getElementsByClassName(\"create-form-input\")) i.value = null;\r\n                    } else if (dest.status === 300) {\r\n                        displayError(\"Questions required are already complete\")\r\n                    } else {\r\n                        displayError(\"could not create exam\")\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    useEffect(() => {\r\n        try {\r\n            let form = document.getElementById(\"questions-form\");\r\n            form.addEventListener(\"submit\", handleQuestionCreate)\r\n        } catch {\r\n\r\n        }\r\n    }, [page])\r\n\r\n    function optionGenerate(quest) {\r\n        switch (quest) {\r\n            case \"obj\":\r\n                let comp = [];\r\n                for (let i = 0; i < objnum; i++) {\r\n                    comp.push(\r\n                        <input type=\"text\" className=\"create-form-input\" placeholder={`option ${i + 1}`} required name={`option${i + 1}`}></input>\r\n                    )\r\n                }\r\n                comp.push(<input type=\"number\" style={{ marginTop: \"20px\" }} className='create-form-input' placeholder='correct option number..' required name=\"correct\"></input>)\r\n                return comp;\r\n            case \"german\":\r\n                return (\r\n                    <textarea type=\"text\" className=\"create-form-input\" placeholder='enter the answer for each gap with a newline.' style={{ height: \"100px\" }} required name=\"option\"></textarea>\r\n                )\r\n            default:\r\n                return (\r\n                    <textarea type=\"text\" className=\"create-form-input\" placeholder='enter the answer of the question' style={{ height: \"100px\" }} required name=\"option\"></textarea>\r\n                )\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className='exam-create-div'>\r\n            <div className='exam-view-actions' style={{ height: 'fit-content' }}>\r\n                <div className={'exam-view-group grow' + (page === \"create\" ? ' bottom-border' : '')} onClick={() => { setPage(\"create\") }}>\r\n                    <h4 style={{ display: \"flex\", margin: \"5px\" }}> create </h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"view\" ? ' bottom-border' : '')} onClick={() => { setPage(\"view\") }}>\r\n                    <h4 style={{ display: \"flex\", margin: \"5px\" }}> view </h4>\r\n                </div>\r\n\r\n            </div>\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"create-header\" style={{ margin: \"5px\" }}>{page === \"create\" ? \"Set\" : \"View\"} the exam questions..</h2>\r\n            </div>\r\n            {generatePage(page)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction ExamDetail(props) {\r\n    let [page, setPage] = useState(\"question\");\r\n\r\n    let [examData, setExam] = useState(\r\n        {\r\n            loading: true,\r\n            data: {\r\n                exam: {\r\n                    exam: {\r\n\r\n                    }\r\n                },\r\n\r\n                questions: {\r\n                    questions: []\r\n                }\r\n            }\r\n        }\r\n    )\r\n\r\n\r\n    function getData() {\r\n        props.load()\r\n        let destination1 = {}, destination2 = {};\r\n        Promise.all([apiFetch(\"GET\", `exam/${props.token}/${props.exam_id}`, {}, destination1),\r\n        apiFetch(\"GET\", `question/${props.token}/${props.exam_id}`, {}, destination2)])\r\n            .then(\r\n                () => {\r\n                    props.load();\r\n                    if (destination1.status === 200 && destination2.status === 200) {\r\n                        console.log('yeah')\r\n                        setExam({ ...examData, loading: true, data: { exam: destination1.data, questions: destination2.data } })\r\n                    }\r\n                }\r\n            )\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    function calcPercentage(number, total) {\r\n        try {\r\n            if (total !== null) {\r\n                let ratio = number / total;\r\n                return [Math.round(ratio * 100), Math.round(ratio * 360)]\r\n            } else {\r\n                if (number === 0) return [0, 0]\r\n                else return [100, 360]\r\n            }\r\n        } catch {\r\n            return [null, null]\r\n        }\r\n    }\r\n\r\n    function selectPage(page) {\r\n\r\n        {\r\n            switch (page) {\r\n                case \"question\":\r\n                    return <QuestionEdit load={props.load} token={props.token} id={props.exam_id} reload={getData}\r\n                        questions={examData.data.questions.questions} />\r\n                case \"delete\":\r\n                    return (\r\n                        <div style={{\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\"\r\n                        }}>\r\n                            <h3 style={{ margin: \"5px\" }}> are you sure you want to delete </h3>\r\n                            <h3 style={{ margin: \"5px\" }}>\"{examData.data.exam.exam.name}\"</h3>\r\n                            <div style={{\r\n                                width: \"100%\",\r\n                                padding: \"0px 10px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\"\r\n                            }}>\r\n                                <button className='exam-create-but shadow-5 grow' onClick={() => {\r\n                                    let dest = {};\r\n                                    props.load();\r\n                                    apiFetch(\"DELETE\", `exam/${props.token}/${props.exam_id}`, {}, dest)\r\n                                        .then(\r\n                                            () => {\r\n                                                if (dest.status === 200) {\r\n                                                    props.load();\r\n                                                    window.location.reload();\r\n                                                }\r\n                                            }\r\n                                        )\r\n                                }}>Yes</button>\r\n                                <button className='exam-create-but shadow-5 grow' onClick={() => {\r\n                                    setPage(\"question\")\r\n                                }}>No</button>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                case \"edit\":\r\n                    return (\r\n                        <ExamEdit exam={examData.data.exam.exam} load={props.load} reload={getData} token={props.token} id={props.exam_id} />\r\n                    )\r\n\r\n                case \"logs\":\r\n                    return (\r\n                        <ExamLogs exam={examData.data.exam.exam} token={props.token} load={props.load} />\r\n                    )\r\n\r\n                case \"result\":\r\n                    return (\r\n                        <ExamResult exam={examData.data.exam.exam} token={props.token} load={props.load} />\r\n                    )\r\n\r\n            }\r\n        }\r\n    }\r\n    return examData.loading === true ? (\r\n        <div className='exam-main'>\r\n\r\n            <div className='exam-action'>\r\n                <div className='section-header'>\r\n                    <h2 style={{ margin: \"0px\" }}></h2>\r\n                </div>\r\n                <div className='exam-details shadow-5'>\r\n                    <h2 style={{ margin: \"0px\" }}><span><img style={{\r\n                        margin: \"0px 10px 0px 10px\"\r\n                    }} onClick={() => {\r\n                        props.view({\r\n                            exam: false,\r\n                            id: null\r\n                        })\r\n                    }} src={back} height=\"30\" width=\"30\"></img></span>{examData.data.exam.exam.name} </h2>\r\n\r\n                    <div style={{ display: \"flex\", alignItems: \"center\", marginTop: \"10px\" }}>\r\n\r\n                        <div style={{\r\n                            margin: \"5px\",\r\n                            width: \"60px\",\r\n                            height: \"60px\",\r\n                            borderRadius: \"30px\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            backgroundImage: `conic-gradient(cornsilk 0deg, cornsilk ${calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[1]}deg, rgba(137, 199, 255 ,0.4) ${calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[1]}deg)`\r\n                        }}>\r\n                            <div style={{\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                                borderRadius: \"30px\",\r\n                                backgroundColor: \"rgb(6, 72, 133)\",\r\n                                textAlign: \"center\",\r\n                                paddingTop: \"15px\"\r\n                            }}>\r\n                                {calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[0]}%\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                        {\r\n                            calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[0] === 100 ?\r\n                                <div>\r\n                                    <h4 style={{ margin: \"0px\" }}>Questions complete..</h4>\r\n                                    <h5 style={{ margin: \"4px 0px\" }}>exam link <a href={`https:www.${home_url}.com/#/hall/${examData.data.exam.exam[\"exam code\"]}`}>{`https:www.${home_url}.com/#/hall/${examData.data.exam.exam[\"exam code\"]}`}</a></h5>\r\n                                </div> :\r\n                                <h4 style={{ margin: \"0px\" }}>complete.... Set questions to get exam ready</h4>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='exam-action-group'>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"question\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"question\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Questions</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> set and edit exam questions </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"edit\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"edit\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Edit</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> edit the exam configurations  </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"logs\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"logs\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}>Logs</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> view exam status as the exam is ongoing </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"result\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"result\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}>Result</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> organise the exam result ... </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"delete\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\", color: \"red\" }}> Delete </h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\", color: \"red\" }}> delete exam.. </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='exam-action-page'>\r\n                {selectPage(page)}\r\n            </div>\r\n\r\n        </div>\r\n    ) : <div>loading....</div>\r\n}\r\n\r\nfunction ViewPage(props) {\r\n    let [sorted, setSort] = useState([[], [], []]);\r\n    let [page, setPage] = useState(\"all\");\r\n\r\n    function buttonFunc(id) {\r\n        props.view({\r\n            exam: true,\r\n            id: id\r\n        })\r\n    }\r\n\r\n    let generateExamList = (page) => {\r\n        let content = [];\r\n        switch (page) {\r\n            case \"all\":\r\n                for (let i of props.data.data.exams) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            case \"start\":\r\n                for (let i of sorted[0]) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            case \"ongo\":\r\n                for (let i of sorted[1]) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            case \"com\":\r\n                for (let i of sorted[2]) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            default:\r\n                content = []\r\n        }\r\n        content.reverse();\r\n\r\n        if (content.length === 0) {\r\n            content = (<div className='exam-none'>\r\n                <h5>{page === \"all\" ? \"you have no created exam\" : \"no exam in this category\"}</h5>\r\n            </div>)\r\n        }\r\n        return (\r\n            <div className='exam-details-list'>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!props.loading) {\r\n            let start = [], ongoing = [], complete = [];\r\n\r\n            for (let i of props.data.data.exams) {\r\n                if ((i.status === \"created\") || (i.status === \"starting\")) start.push(i);\r\n                else if (i.status === \"during\") ongoing.push(i);\r\n                else complete.push(i);\r\n            }\r\n            setSort([start, ongoing, complete]);\r\n        }\r\n\r\n    }, [props])\r\n    return (\r\n        <div className='exam-view'>\r\n            <div className='exam-view-actions'>\r\n                <div className={'exam-view-group grow' + (page === \"all\" ? ' bottom-border' : '')} onClick={() => { setPage(\"all\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>all <div className='exam-num'>{props.num}</div></h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"start\" ? ' bottom-border' : '')} onClick={() => { setPage(\"start\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>yet-to-start <div className='exam-num'>{sorted[0].length}</div></h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"ongo\" ? ' bottom-border' : '')} onClick={() => { setPage(\"ongo\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>ongoing <div className='exam-num'>{sorted[1].length}</div></h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"com\" ? ' bottom-border' : '')} onClick={() => { setPage(\"com\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>completed <div className='exam-num'>{sorted[2].length}</div></h4>\r\n                </div>\r\n\r\n            </div>\r\n            {generateExamList(page)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction CreateExam(props) {\r\n\r\n    function disableValue(e, value) {\r\n        let valued = e.target.checked;\r\n\r\n        if (value === \"veri\") {\r\n            value = \"spec\";\r\n            valued = valued && document.getElementById(\"spec-check\").checked;\r\n        }\r\n\r\n        let header = document.getElementById(`${value}-header`);\r\n        let input = document.getElementById(`${value}`);\r\n\r\n        if (value === \"start\") {\r\n            let input2 = document.getElementById(\"start-time\");\r\n            valued ? input2.removeAttribute(\"disabled\") : input2.setAttribute(\"disabled\", \"disabled\");\r\n            input2.style.border = valued ? \"cornsilk 3px solid\" : \"rgba(255, 248, 220, 0.474) 3px solid\";\r\n\r\n            if (!valued) input2.value = null;\r\n        }\r\n\r\n        header.style.color = valued ? \"cornsilk\" : \"rgba(255, 248, 220, 0.474)\";\r\n        valued ? input.removeAttribute(\"disabled\") : input.setAttribute(\"disabled\", \"disabled\");\r\n        input.style.border = valued ? \"cornsilk 3px solid\" : \"rgba(255, 248, 220, 0.474) 3px solid\";\r\n\r\n        if (!valued) {\r\n            input.value = null\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let handleExamCreate = e => {\r\n            e.preventDefault();\r\n            let formData = new FormData(e.target);\r\n\r\n            function displayError(message) {\r\n                let header = document.getElementById('create-header'), container = document.getElementsByClassName(\"exam-action-page\")[0];\r\n                header.innerHTML = message;\r\n                container.scrollTop = 0;\r\n                setTimeout(() => {\r\n                    header.innerHTML = \"Fill form to create exam..\"\r\n                }, 1500);\r\n            }\r\n\r\n            if (formData.get(\"name\").length < 6 || formData.get(\"name\").length > 20) displayError(\"The exam title must be between 6 to 20 characters..\")\r\n\r\n            else if (new Date() > new Date(formData.get(\"start-date\") + \" \" + formData.get(\"start-time\"))) {\r\n                displayError(\"The start time must be ahead of the current time by at least 30 minutes\")\r\n            }\r\n\r\n            else {\r\n                let data = {\r\n                    name: formData.get(\"name\"),\r\n                    total: formData.get(\"total\"),\r\n                    number: formData.get(\"questions\"),\r\n                    num_of_students: formData.get(\"students\"),\r\n                    start: formData.get(\"start-date\") === null ? null : new Date(formData.get(\"start-date\") + \" \" + formData.get(\"start-time\")).toJSON(),\r\n                    verification: formData.get(\"veri-check\") === true,\r\n                    specific: formData.get(\"specific\") === \"\" ? null : formData.get(\"specific\"),\r\n                    personal: formData.get(\"personal\"),\r\n                    duration: formData.get(\"duration\") === null ? null : formData.get(\"duration\") * 60,\r\n                    exam_code: Number(new Date())\r\n                }\r\n\r\n                var destination = {};\r\n\r\n                props.load();\r\n                apiFetch(\"POST\", `exam/${props.token}/aall`, data, destination).then(\r\n                    () => {\r\n                        props.load();\r\n                        if (destination.status === 200) {\r\n                            displayError(\"the exam has been created...\");\r\n                            window.location.reload();\r\n                            props.change(\"view\")\r\n                        } else {\r\n                            displayError(\"the exam could not be created\")\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        let form = document.getElementById(\"exam-create-form\");\r\n        form.addEventListener(\"submit\", handleExamCreate);\r\n\r\n        return function cleanup() {\r\n            form.removeEventListener(\"submit\", handleExamCreate)\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className='exam-create-div'>\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' style={{ marginTop: \"8px\" }} onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"create-header\">Fill form to create exam..</h2>\r\n            </div>\r\n            <form id=\"exam-create-form\">\r\n                <input className='create-form-input' style={{ border: \"cornsilk 3px solid\", textAlign: \"center\" }} type=\"text\" name=\"name\" placeholder=\"The Exam Title\" required></input>\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"students-check\" onChange={event => { disableValue(event, \"students\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"students-header\">number of students </h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" min=\"0\" max=\"200\" name=\"students\" id=\"students\" disabled></input>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"questions-check\" onChange={event => { disableValue(event, \"questions\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"questions-header\">number of questions</h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" min=\"0\" max=\"200\" name=\"questions\" id=\"questions\" disabled></input>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"total-check\" onChange={event => { disableValue(event, \"total\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"total-header\"> total marks </h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" name=\"total\" id=\"total\" disabled></input>\r\n                    </div>\r\n\r\n                    <div style={{ marginLeft: \"20px\" }}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"start-check\" onChange={event => { disableValue(event, \"start\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"start-header\">start time</h4>\r\n                        </div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input className='create-form-input' type=\"date\" name=\"start-date\" id=\"start\" disabled></input>\r\n                            <input className='create-form-input' type='time' name=\"start-time\" id=\"start-time\" disabled></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"duration-check\" onChange={event => { disableValue(event, \"duration\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"duration-header\"> exam duration(mins)</h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" name=\"duration\" id=\"duration\" min=\"5\" max=\"300\" disabled></input>\r\n                    </div>\r\n\r\n                    <div style={{ marginLeft: \"20px\" }}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"personal-check\" onChange={event => { disableValue(event, \"personal\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"personal-header\">student time(mins)</h4>\r\n                        </div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input className='create-form-input' type=\"number\" name=\"personal\" id=\"personal\" min=\"5\" max=\"300\" disabled></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"veri-check\" onChange={event => { disableValue(event, \"veri\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"cornsilk\" }} id=\"total-header\"> student verification </h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ marginLeft: \"20px\" }}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"spec-check\" id=\"spec-check\" onChange={event => { disableValue(event, \"spec\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"spec-header\">specific students</h4>\r\n                        </div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <textarea className='create-form-input' name=\"spec\" id=\"spec\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                    <button type='submit' className='exam-create-but shadow-5 grow'> Create exam</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction Exam(props) {\r\n    let [exam_data, setExam] = useState({\r\n        loading: true,\r\n        data: null\r\n    })\r\n\r\n    let [exam_page, setExamPage] = useState({\r\n        exam: false,\r\n        id: null\r\n    })\r\n\r\n    let [page, setPage] = useState('view');\r\n\r\n    function fetchExamDetails() {\r\n        var examData = {};\r\n        props.load();\r\n        apiFetch(\"GET\", `exam/${props.token}/all`, {}, examData).then(\r\n            () => {\r\n                props.load();\r\n                if (examData.status === 200) {\r\n                    setExam({\r\n                        loading: false,\r\n                        data: examData.data\r\n                    })\r\n                } else {\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function selectPage(page) {\r\n        if (!exam_data.loading) {\r\n            switch (page) {\r\n                case \"view\":\r\n                    return <ViewPage data={exam_data} num={props.user.exam} view={setExamPage} />\r\n                case \"create\":\r\n                    return <CreateExam load={props.load} change={setPage} token={props.token} />\r\n            }\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchExamDetails();\r\n    }, [])\r\n    return !exam_page.exam ? (\r\n        <div className='exam-main'>\r\n            <div className='exam-action'>\r\n                <div className='section-header'>\r\n                    <h2 style={{ margin: \"0px\" }}>Manage Exams</h2>\r\n                </div>\r\n                <div className='exam-details shadow-5'>\r\n                    <h2 style={{ margin: \"0px\" }}>Total exams: {props.user.exam}</h2>\r\n\r\n                    <div></div>\r\n\r\n                </div>\r\n\r\n                <div className='exam-action-group'>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create..</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"view\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"view\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> View..</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> list of exams with exam actions </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create exam</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create exam</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='exam-action-page'>\r\n                {selectPage(page)}\r\n            </div>\r\n\r\n        </div>\r\n    ) : (\r\n        <ExamDetail token={props.token} exam_id={exam_page.id} load={props.load} view={setExamPage} />\r\n    )\r\n\r\n}\r\n\r\nexport default Exam;","export default __webpack_public_path__ + \"static/media/examio2.197b2829.png\";","export default __webpack_public_path__ + \"static/media/profile.05d0404a.png\";","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiFetch, CountDownTimer } from \"../functions/function\";\r\n\r\nfunction ViewPage(props) {\r\n    const history = useHistory();\r\n    let [sorted, setSort] = useState([[], []]);\r\n    let [page, setPage] = useState(\"all\");\r\n\r\n    let joinHall = exam => {history.push(\"/hall/\" + exam.exam[\"exam code\"])}\r\n\r\n    let deleteExam = exam => {\r\n        props.load();\r\n        let dest = {}\r\n        apiFetch(\"DELETE\", `exam/${props.token}/${exam.id}`,{},dest)\r\n        .then(\r\n            () => {\r\n                props.load()\r\n                if(dest.status === 200) {\r\n                    props.reload()\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function buttonFunc(id) {\r\n        try {\r\n            let div = document.getElementById(\"exam-details-\" + id)\r\n            if (div.style.height === \"0px\") {div.style.height = \"150px\"; div.style.overflowY = \"scroll\";}\r\n            else {div.style.height = \"0px\"; div.style.overflowY = \"hidden\"}\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    let displayExtended = exam => {\r\n        switch (exam.status) {\r\n            case \"registered\":\r\n                if (exam.exam.status === \"created\") {\r\n                    if (exam.exam.start === null) {\r\n                        return (\r\n                            <div className=\"centralize\">\r\n                                <h2>This exam has no time, specified by the examinerr</h2>\r\n                                <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <div className=\"centralize\">\r\n                                <h2>time till exam ..</h2>\r\n                                <CountDownTimer start={exam.exam.start}>\r\n                                    <button className=\"exam-create-but\" onClick={() => joinHall(exam)}>Join Exam</button>\r\n                                </CountDownTimer>\r\n                                <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                } else if (exam.exam.status === \"starting\") {\r\n                    return (\r\n                        <div className=\"centralize\">\r\n                            <h2>The exam will soon be starting..</h2>\r\n                            <button className=\"exam-create-but\" onClick={() => joinHall(exam)}>Join Exam</button>\r\n                            <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                        </div>\r\n                    )\r\n                } else if (exam.exam.status === \"during\") {\r\n                    return (\r\n                        <div className=\"centralize\">\r\n                            <h2>The exam is currently ongoing..</h2>\r\n                            <button className=\"exam-create-but\" onClick={() => joinHall(exam)}>Join Exam</button>\r\n                            <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <div className=\"centralize\"> \r\n                            <h2>The exam has already been concluded..</h2>\r\n                            <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            default:\r\n                return (\r\n                    <div className=\"centralize\">\r\n                        <h3>Exam completed</h3>\r\n                        <button className=\"exam-create-but\">View result</button>\r\n                        <button className=\"exam-create-but danger\" onClick={() => deleteExam(exam)}> delete </button>\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n\r\n    let generateExamList = (page) => {\r\n        try {\r\n            let content = [];\r\n            switch (page) {\r\n                case \"all\":\r\n                    for (let i of props.exams) {\r\n                        content.push(\r\n                            <div>\r\n                                <button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                        <h4 style={{ margin: \"0px\" }}>{i.exam.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                                    </div>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                        <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                                    </div>\r\n                                </button>\r\n                                <div style={{ height: \"0px\", overflowY: \"hidden\", transition: \"0.8s all ease\" }} id={`exam-details-${i.id}`}>\r\n                                    {displayExtended(i)}\r\n                                </div>\r\n                            </div>)\r\n                    }\r\n                    break;\r\n                case \"start\":\r\n                    for (let i of sorted[0]) {\r\n                        content.push(\r\n                            <div>\r\n                                <button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                        <h4 style={{ margin: \"0px\" }}>{i.exam.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                                    </div>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                        <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                                    </div>\r\n                                </button>\r\n                                <div style={{ height: \"0px\", overflowY: \"hidden\", transition: \"0.8s all ease\" }} id={`exam-details-${i.id}`}>\r\n                                    {displayExtended(i)}\r\n                                </div>\r\n                            </div>)\r\n                    }\r\n                    break;\r\n                case \"com\":\r\n                    for (let i of sorted[1]) {\r\n                        content.push(\r\n                            <div>\r\n                                <button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                        <h4 style={{ margin: \"0px\" }}>{i.exam.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                                    </div>\r\n                                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                        <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                                    </div>\r\n                                </button>\r\n                                <div style={{ height: \"0px\", overflowY: \"hidden\", transition: \"0.8s all ease\" }} id={`exam-details-${i.id}`}>\r\n                                    {displayExtended(i)}\r\n                                </div>\r\n                            </div>)\r\n                    }\r\n                    break;\r\n                default:\r\n                    content = []\r\n            }\r\n            content.reverse();\r\n\r\n            if (content.length === 0) {\r\n                content = (<div className='exam-none'>\r\n                    <h5>{page === \"all\" ? \"you have no registered exam\" : \"no exam in this category\"}</h5>\r\n                </div>)\r\n            }\r\n            return (\r\n                <div className='exam-details-list'>\r\n                    {content}\r\n                </div>\r\n            )\r\n        }\r\n        catch (error) {\r\n            return <div>loading</div>\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        try {\r\n\r\n            if (!props.loading) {\r\n                let start = [], complete = [];\r\n\r\n                for (let i of props.exams) {\r\n                    if (i.status === \"registered\") start.push(i);\r\n                    else complete.push(i);\r\n                }\r\n                setSort([start, complete]);\r\n            }\r\n        } catch {\r\n\r\n        }\r\n\r\n    }, [props])\r\n    try {\r\n        return (\r\n            <div className='exam-view'>\r\n                <div style={{ display: \"flex\", position: \"sticky\" }} className=\"pad-10\">\r\n                    <h2 className='back-button grow' style={{ marginTop: \"8px\" }} onClick={\r\n                        () => {\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                        }\r\n                    }>&#8630; </h2>\r\n                    <h2 id=\"create-header\">View Exams...</h2>\r\n                </div>\r\n                <div className='exam-view-actions'>\r\n                    <div className={'exam-view-group grow' + (page === \"all\" ? ' bottom-border' : '')} onClick={() => { setPage(\"all\") }}>\r\n                        <h4 style={{ display: \"flex\" }}>all <div className='exam-num'>{props.exams.length}</div></h4>\r\n                    </div>\r\n                    <div className={'exam-view-group grow' + (page === \"start\" ? ' bottom-border' : '')} onClick={() => { setPage(\"start\") }}>\r\n                        <h4 style={{ display: \"flex\" }}>pending <div className='exam-num'>{sorted[0].length}</div></h4>\r\n                    </div>\r\n                    <div className={'exam-view-group grow' + (page === \"com\" ? ' bottom-border' : '')} onClick={() => { setPage(\"com\") }}>\r\n                        <h4 style={{ display: \"flex\" }}>completed <div className='exam-num'>{sorted[1].length}</div></h4>\r\n                    </div>\r\n\r\n                </div>\r\n                {generateExamList(page)}\r\n            </div>\r\n        )\r\n    }\r\n    catch {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n}\r\n\r\nfunction RegisterExam(props) {\r\n\r\n    function displayError(mes) {\r\n        let header = document.getElementById(\"create-header\")\r\n        header.innerHTML = mes\r\n\r\n        setTimeout(\r\n            () => {\r\n                header.innerHTML = \"Enter exam code to register..\"\r\n            }, 2000\r\n        )\r\n    }\r\n\r\n    function handleRegister(event) {\r\n        props.load()\r\n        event.preventDefault();\r\n        let formData = new FormData(event.target)\r\n        let dest = {}\r\n        apiFetch(\"POST\", `exam/${props.token}/all`, {\r\n            id: formData.get(\"exam-code\")\r\n        }, dest)\r\n            .then(\r\n                () => {\r\n                    props.load()\r\n                    if (dest.status === 200) {\r\n                        displayError(\"Exam registeration successfully..\")\r\n                        props.reload()\r\n                    }\r\n                    else if (dest.status === 403) {\r\n                        let remark = dest.data.status\r\n                        if (remark === \"not allowed for this exam\") {\r\n                            displayError(\"❗ Sorry this exam is for specific people\")\r\n                        } else if (remark === \"exam has already ended\") {\r\n                            displayError(\"Oops the exam has already ended\")\r\n                        } else if (remark === \"already registered\") {\r\n                            displayError(\"You have already registered for this exam\")\r\n                        }\r\n                    } else if (dest.status === 404) {\r\n                        displayError(\"Exam code is not valid ❗❗\")\r\n                    } else {\r\n                        displayError(\"Exam could not be registered..\")\r\n                    }\r\n\r\n                }\r\n            )\r\n\r\n\r\n    }\r\n    useEffect(\r\n        () => {\r\n            let form = document.getElementById(\"exam-register-div\")\r\n\r\n            form.addEventListener(\"submit\", handleRegister)\r\n\r\n            return function cleanup() {\r\n                form.removeEventListener(\"submit\", handleRegister)\r\n            }\r\n        }, []\r\n    )\r\n    return (\r\n        <div className='exam-create-div'>\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' style={{ marginTop: \"8px\" }} onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"create-header\">Enter exam code to register..</h2>\r\n            </div>\r\n            <form id=\"exam-register-div\" style={{ alignItems: \"center\", marginTop: \"50px\", border: \"2px solid rgba(242, 242, 242, 0.529)\", borderRadius: \"10px\", padding: \"10px\" }}>\r\n                <input type=\"text\" name=\"exam-code\" style={{\r\n                    height: \"40px\"\r\n                }} className=\"create-form-input\" placeholder=\"exam code..\"></input>\r\n                <button className=\"exam-create-but\" style={{ height: \"50px\" }} type=\"submit\"> Register</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Examinee(props) {\r\n    let [page, setPage] = useState(\"view\")\r\n\r\n    let [exam, setExam] = useState({ data: null })\r\n    \r\n    let getData = () => {\r\n        let dest = {};\r\n        props.load();\r\n        apiFetch(\"GET\", `exam/${props.token}/all`, {}, dest)\r\n            .then(\r\n                () => {\r\n                    props.load()\r\n                    if (dest.status === 200) {\r\n                        setExam({ ...exam, data: dest.data.exams })\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        getData()\r\n    }, [])\r\n\r\n    function selectPage(page) {\r\n        switch (page) {\r\n            case \"create\":\r\n                return <RegisterExam load={props.load} token={props.token} reload={getData}/>\r\n            case \"view\":\r\n                return <ViewPage exams={exam.data} token={props.token} load={props.load} reload={getData}/>\r\n            default:\r\n                return <div>fuck..</div>\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className='exam-main'>\r\n            <div className='exam-action'>\r\n                <div className='section-header'>\r\n                    <h2 style={{ margin: \"0px\" }}>Manage Exams</h2>\r\n                </div>\r\n                <div className='exam-details shadow-5'>\r\n                    <h2 style={{ margin: \"0px\" }}>Total exams: {props.user.exam}</h2>\r\n\r\n                    <div></div>\r\n\r\n                </div>\r\n\r\n                <div className='exam-action-group'>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Register..</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> register for new exams.. </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"view\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"view\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> View..</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> list of exams registered </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create exam</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create exam</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='exam-action-page'>\r\n                {selectPage(page)}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Examinee;","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { apiFetch } from '../functions/function';\r\nimport Exam from '../components/Exam';\r\nimport examio from '../assets/examio2.png';\r\nimport profile from '../assets/profile.png';\r\nimport Loading from \"../components/Loading\";\r\nimport Examinne from \"../components/Examinee\";\r\nimport '../css/account.css';\r\nimport Examinee from '../components/Examinee';\r\n\r\nfunction Sidebar(props) {\r\n    let [butt, setButt] = useState((\r\n        function (word) {\r\n            let str = [...word];\r\n            str[0] = str[0].toUpperCase();\r\n            return str.join(\"\")\r\n        }\r\n    )(props.page));\r\n    let [buttons, setButtons] = useState([]);\r\n\r\n    let butList = [\r\n        \"Dashboard\",\r\n        \"Exams\",\r\n        \"Settings\",\r\n        \"Profile\"\r\n    ];\r\n\r\n    let butCompList = [];\r\n\r\n    useEffect(() => {\r\n        for (let i of butList) {\r\n            if (i === butt) {\r\n\r\n                butCompList.push(\r\n                    <div className='side-but-cont border-left' onClick={() => {\r\n                        if (window.innerWidth < 620) {\r\n                            document.getElementsByClassName(\"account-side\")[0].style.width = \"0px\";\r\n                            document.getElementsByClassName(\"mobile-div\")[0].style.display = \"none\";\r\n                        }\r\n                    }}>\r\n                        <button className='side-but' style={{ backgroundColor: \"rgb(46, 45, 45)\" }}>{i}</button>\r\n                    </div>\r\n                )\r\n            } else {\r\n                butCompList.push(\r\n                    <div className={`side-but-cont ${(butList.indexOf(i) - butList.indexOf(butt)) === -1 ? '' : 'bottom-border'}`}>\r\n                        <button className='side-but' onClick={() => (\r\n                            function (butt) {\r\n                                setButt(butt);\r\n                                props.url_push('/account/' + butt.toLowerCase())\r\n\r\n                                if (window.innerWidth < 620) {\r\n                                    document.getElementsByClassName(\"account-side\")[0].style.width = \"0px\";\r\n                                    document.getElementsByClassName(\"mobile-div\")[0].style.display = \"none\";\r\n                                }\r\n                            }\r\n                        )(i)}>{i}</button>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        setButtons(butCompList)\r\n\r\n    }, [butt])\r\n    return (\r\n        <div className=\"account-side\">\r\n            <div className='logo-div'>\r\n                <img src={examio} height=\"20\" width=\"80\"></img>\r\n            </div>\r\n            <div className='side-profile'>\r\n                <div className='profile-pic'>\r\n                    <img src={profile}></img>\r\n                </div>\r\n\r\n                <div className='profile-name'>\r\n                    <h3 style={{ margin: \"3px\" }}>{props.user.name}</h3>\r\n                    <h5 style={{ margin: \"3px\" }} className='leylow'>{props.user.email}</h5>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='side-actions'>\r\n                {buttons}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Account(props) {\r\n    const history = useHistory()\r\n    let [userInfo, setInfo] = useState({})\r\n    let [show, setShow] = useState(false)\r\n    var loader = false;\r\n\r\n    let load = () => {\r\n        loader = !loader;\r\n        setShow(loader);\r\n    }\r\n\r\n    var data = {};\r\n\r\n    function getUserInfo() {\r\n        if (props.user.token !== null) {\r\n            load();\r\n            apiFetch(\"GET\", `info/${props.user.token}`, {}, data)\r\n                .then(() => {\r\n                    load()\r\n                    if (data.status === 200) {\r\n                        setInfo(data.data.info);\r\n                    } else {\r\n                        history.push(\"/home\");\r\n                    }\r\n                })\r\n        } else {\r\n            history.push('/home');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserInfo();\r\n    }, [])\r\n\r\n\r\n\r\n    function selectPage(page) {\r\n        try {\r\n\r\n\r\n            switch (page) {\r\n                case \"exams\":\r\n                    if (!userInfo.role) {\r\n                        return (\r\n                            <Examinee user={userInfo} load={load} token={props.user.token} />\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <Exam user={userInfo} load={load} token={props.user.token} />\r\n                        )\r\n                    }\r\n\r\n                default:\r\n                    return <h1>404.. page not found</h1>\r\n            }\r\n        } catch {\r\n            return (\r\n                <div>\r\n                    loading....\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='account-main'>\r\n            <div className=\"mobile-nav\">\r\n                <img src={examio} height=\"20\" width=\"80\"></img>\r\n\r\n                <h2 style={{ cursor: \"pointer\" }} onClick={() => {\r\n                    document.getElementsByClassName(\"account-side\")[0].style.width = \"250px\";\r\n\r\n                    setTimeout(() => {\r\n                        document.getElementsByClassName(\"mobile-div\")[0].style.display = \"block\";\r\n                    }, 650)\r\n                }}>&#9776;</h2>\r\n\r\n            </div>\r\n            <div className='mobile-div' onClick={() => {\r\n                document.getElementsByClassName(\"account-side\")[0].style.width = \"0px\";\r\n                document.getElementsByClassName(\"mobile-div\")[0].style.display = \"none\";\r\n            }}>\r\n\r\n            </div>\r\n            <Loading show={show} />\r\n            <Sidebar url_push={history.push} user={userInfo} page={props.match.params.page} />\r\n            <div className='account-cont'>\r\n                {selectPage(props.match.params.page)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Account;","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiFetch } from \"../functions/function\";\r\nimport \"../css/login.css\";\r\nimport examio from \"../assets/examio2.png\";\r\n\r\nfunction Login(props) {\r\n    const history = useHistory()\r\n    let whether;\r\n    try{\r\n        whether = props.match.params.type\r\n    } catch {\r\n        whether = null\r\n    }\r\n\r\n\r\n    function handleRequestError(err) {\r\n        let head = document.getElementById(\"log-head\");\r\n        head.innerHTML = err\r\n        setTimeout(() => {\r\n            head.innerHTML = \"Sign in..\"\r\n        }, 2500)\r\n\r\n    }\r\n    function handleLoginSubmit(e) {\r\n        console.log(whether)\r\n        var response = {};\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        let data = {\r\n            email: formData.get(\"email\"),\r\n            password: formData.get(\"password\")\r\n        }\r\n        props.load();\r\n        apiFetch(\"POST\", \"login\", data, response).then(() => {\r\n            props.load();\r\n\r\n            if (response.status === 200) {\r\n                let res_data = response.data;\r\n                if (res_data.login) {\r\n                    props.loginFunc(res_data);\r\n                    if(whether === \"oneTime\") window.close();\r\n                    history.push('/account/dashboard/')\r\n                }\r\n            } else {\r\n                handleRequestError(\"Wrong details..\")\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    useEffect(() => {\r\n        let form = document.getElementById(\"login-form\");\r\n\r\n        form.addEventListener('submit', handleLoginSubmit)\r\n\r\n        return function cleanup() {\r\n            form.removeEventListener('submit', handleLoginSubmit)\r\n        }\r\n\r\n    }, [])\r\n    return (\r\n        <div className=\"center-div\">\r\n            <div className=\"logo\"><img src={examio} height=\"20\" width=\"90\"></img></div>\r\n            <button className=\"log-but grow\" onClick={() => {history.push(\"/signup\")}}>sign up</button>\r\n            <form id=\"login-form\" className=\"shadow-5\">\r\n                <div className=\"log-header\">\r\n                    <h2 style={{ margin: \"0px\" }} id=\"log-head\">Sign in..</h2>\r\n                </div>\r\n\r\n                <div className=\"log-form-arrange\">\r\n                    <input type=\"email\" name=\"email\" className=\"log-input\" placeholder=\"email\" required=\"required\"></input>\r\n                    <input type=\"password\" name=\"password\" className=\"log-input\" placeholder=\"password\" required=\"required\"></input>\r\n\r\n                    <button type=\"submit\" className=\"log-butt grow\"> login</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"log-foot\"><h4>examio &copy; {new Date().getFullYear()}</h4></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiFetch } from \"../functions/function\";\r\nimport \"../css/login.css\";\r\nimport examio from \"../assets/examio2.png\";\r\n\r\nfunction Signup(props) {\r\n    const history = useHistory();\r\n\r\n    function displayError(message) {\r\n        let header = document.getElementById(\"log-head\");\r\n        header.innerHTML = message;\r\n        setTimeout(\r\n            () => {\r\n                header.innerHTML = \"Sign up..\"\r\n            }, 2000\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        function handleSubmit(event) {\r\n            event.preventDefault();\r\n            let form = event.target\r\n            let formData = new FormData(form);\r\n\r\n            if(formData.get(\"first\").length < 2 | formData.get(\"last\").length < 2) {\r\n                displayError(\"name is too short..\")\r\n            } else if(formData.get(\"password\").length < 5) {\r\n                displayError(\"password too short..\");\r\n            } else if (formData.get(\"password\").length > 10) {\r\n                displayError(\"password too long ...\");\r\n            } else if(formData.get(\"password\") !== formData.get(\"password2\")) {\r\n                displayError(\"passwords do not match..\");\r\n            } else {\r\n                let dest = {};\r\n                props.load();\r\n                apiFetch(\"POST\", \"signup\", {\r\n                    name : formData.get(\"first\") + \" \" + formData.get(\"last\"),\r\n                    phone : formData.get(\"phone\"),\r\n                    email : formData.get(\"email\"),\r\n                    password : formData.get(\"password\"),\r\n                    role : formData.get(\"role\") === \"examiner\"\r\n                }, dest)\r\n                .then(\r\n                    () => {\r\n                        props.load();\r\n                        if(dest.status === 200) {\r\n                            displayError(\"accout create successfull\");\r\n                            history.push('/login');\r\n                        } else if(dest.status === 401) {\r\n                            displayError(\"email already exists...\");\r\n                        } else {\r\n                            displayError(\"couldn't create account\");\r\n                            history.push(\"/home\");\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n\r\n        }\r\n        let form = document.getElementById(\"signup-form\");\r\n        form.addEventListener(\"submit\", handleSubmit)\r\n\r\n        return function cleanup () {\r\n            form.removeEventListener(\"submit\", handleSubmit)\r\n        }\r\n    },[])\r\n    return (\r\n        <div className=\"center-div\">\r\n            <div className=\"logo\"><img src={examio} height=\"20\" width=\"90\"></img></div>\r\n            <button className=\"log-but grow\" onClick={() => { history.push(\"/login\") }}>login</button>\r\n            <form id=\"signup-form\" className=\"shadow-5\">\r\n                <div className=\"log-header\">\r\n                    <h2 style={{ margin: \"0px\" }} id=\"log-head\">Sign up..</h2>\r\n                </div>\r\n\r\n                <div className=\"log-form-arrange sign-arrange\">\r\n\r\n                    <input type=\"text\" name=\"first\" className=\"log-input sign-input\" placeholder=\"first name\" required=\"required\"></input>\r\n                    <input type=\"text\" name=\"last\" className=\"log-input sign-input\" placeholder=\"last name\" required=\"required\"></input>\r\n                    \r\n                    <input type=\"email\" name=\"email\" className=\"log-input sign-input\" placeholder=\"email\" required=\"required\"></input>\r\n                    <input type=\"number\" name=\"phone\" className=\"log-input sign-input\" placeholder=\"phone_no\" required=\"required\"></input>\r\n                    \r\n                    <input type=\"password\" name=\"password\" className=\"log-input sign-input\" placeholder=\"password\" required=\"required\"></input>\r\n                    <input type=\"password\" name=\"password2\" className=\"log-input sign-input\" placeholder=\"confirm password\" required=\"required\"></input>\r\n\r\n                    <select name=\"role\" className=\"log-input sign-input\" placeholder=\"\">\r\n                        <option style={{color : \"black\"}} value=\"examiner\">As examiner</option>\r\n                        <option style={{color : \"black\"}} value=\"examinee\">As examinee</option>\r\n                    </select>\r\n\r\n                    <button type=\"submit\" className=\"log-butt grow sign-butt\"> login</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"log-foot\"><h4>examio &copy; {new Date().getFullYear()}</h4></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Signup;","import { apiFetch } from '../functions/function';\r\nimport { useEffect, useState } from 'react';\r\nimport examio from '../assets/examio2.png';\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction ExamNav({ submit }) {\r\n    return (\r\n        <div className='exam-nav'>\r\n            <img src={examio} height=\"20\" width=\"90\"></img>\r\n            <button className='hall-but shadow-5 grow' style={{ marginTop: \"0px\" }}\r\n                onClick={() => {\r\n                    prompt(\"Are you sure to tou want to  submit ?\")\r\n                    submit();\r\n                }}>\r\n                Submit\r\n            </button>\r\n            <button onClick={\r\n                () => {\r\n                    let set_div = document.getElementById('settings-div');\r\n                    set_div.style.height = set_div.style.height === \"0px\" ? \"80px\" : \"0px\"\r\n                }\r\n            }>\r\n                settings\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SettingsDiv({ change, settings }) {\r\n    return <div id='settings-div'>\r\n        <div className='sett'>\r\n            <h4>view type : {settings.one_one ? \"one one\" : \"scroll\"} </h4>\r\n            <button className='sett-but' onClick={() => {\r\n                let one_one = settings.one_one;\r\n                change({ ...settings, one_one: !one_one });\r\n            }}>change</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction ExamFoot() {\r\n    return (\r\n        <div className='exam-foot'>\r\n            <h3>Best of Luck  </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ExamTitle(props) {\r\n    return (\r\n        <div className='exam-title shadow-5'>\r\n            <h2>{props.title}</h2>\r\n            <Timer time={props.time} submit={props.submit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Timer(props) {\r\n    var timer;\r\n\r\n    useEffect(\r\n        () => {\r\n            let duration = props.time;\r\n            let timer_tag = document.getElementById(\"exam-timer\");\r\n            let split = time => {\r\n                let hours = Math.floor(time / 3600);\r\n                let minutes = Math.floor((time % 3600) / 60);\r\n                let seconds = Math.floor((time % 3600) % 60)\r\n                return [hours, minutes, seconds]\r\n            }\r\n            function beautify(num) {\r\n                if (num < 10) {\r\n                    return '0' + num;\r\n                } else {\r\n                    return num\r\n                }\r\n            }\r\n\r\n            timer = setInterval(\r\n                () => {\r\n                    if (duration < 0) {\r\n                        clearInterval(timer);\r\n                        timer_tag.innerHTML = '00:00:00';\r\n                        props.submit()\r\n                    }\r\n                    let [hour, min, sec] = split(duration)\r\n                    timer_tag.innerHTML = `${hour === 0 ? \"\" : beautify(hour) + \":\"}${beautify(min)}:${beautify(sec)}`\r\n\r\n                    duration--;\r\n                }, 1000\r\n            )\r\n\r\n            return function cleanup() {\r\n                try {\r\n                    clearInterval(timer)\r\n                } catch {\r\n\r\n                }\r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <h3 id='exam-timer'>00:00</h3>\r\n    )\r\n}\r\n\r\nfunction ExamPaper(props) {\r\n    let questions = props.question;\r\n\r\n    let [curr, setCurr] = useState(1);\r\n    let answers = Cookies.get(\"answers\");\r\n\r\n\r\n    let arrange = num => {\r\n        if (num < 10) {\r\n            return \"00\" + num\r\n        } else if (num < 100) {\r\n            return \"0\" + num\r\n        } else {\r\n            return `${num}`\r\n        }\r\n    }\r\n\r\n    let QuestButton = ({ number }) => {\r\n        let answered = Cookies.get(\"answers\")\r\n            .split('----')\r\n            .filter(\r\n                x => x.slice(0, 3)\r\n            ) === [];\r\n\r\n        let current = number === curr\r\n\r\n        return <button className={'quest-but grow' + current ? \"current\" : answered ? \"answered\" : \"\"} onClick={() => {\r\n            setCurr(number)\r\n        }}>\r\n            {number}\r\n        </button>\r\n    }\r\n\r\n    function updateAnswer(e) {\r\n        console.log(\"change\")\r\n        let ans = e.target;\r\n        let number = arrange(Number(ans.name.split('-')[1]));\r\n        let check = [false, null];\r\n        let answer = Cookies.get(\"answers\").split(\"----\")\r\n        console.log(ans.checked)\r\n\r\n\r\n        for (let i of answer) {\r\n            if (i.slice(0, 3) === number) {\r\n                check = [true, answer.indexOf(i)];\r\n            }\r\n        }\r\n        if (!check[0]) {\r\n            answer.push(number + ans.value)\r\n        } else {\r\n            answer[check[1]] = number + ans.value\r\n        }\r\n\r\n\r\n        Cookies.set(\"answers\", answer.join('----'))\r\n    }\r\n\r\n    function Question(props) {\r\n        let [option, setOption] = useState(\"\")\r\n        let question = props.question\r\n\r\n        useEffect(\r\n            () => {\r\n                let answer = answers.split('----').filter(x => x.slice(0, 3) === arrange(question.number))[0]\r\n                if (answer !== undefined) {\r\n                    setOption(answer.slice(3))\r\n                }\r\n\r\n            }, []\r\n        )\r\n\r\n        try {\r\n\r\n            let display = quest => {\r\n                let what = <h2>\r\n                    {quest.number}. {quest.question}\r\n                </h2>\r\n\r\n                if (quest.mode === 'o') {\r\n                    let comp = [];\r\n\r\n                    function change(num) {\r\n                        return [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"][num]\r\n                    }\r\n                    for (let i of quest.options) {\r\n                        let check = i === option\r\n                        comp.push(\r\n                            check ?\r\n                                <div className='exam-option'>\r\n                                    <input className=\"exam-choice\" type=\"radio\" name={'question-' + quest.number} checked value={i} onChange={event => { updateAnswer(event); setOption(i) }}></input>\r\n                                    <h3> {change(quest.options.indexOf(i))}. {i}</h3>\r\n                                </div> :\r\n                                <div className='exam-option'>\r\n                                    <input className=\"exam-choice\" type=\"radio\" name={'question-' + quest.number} value={i} onChange={event => { updateAnswer(event); setOption(i) }}></input>\r\n                                    <h3> {change(quest.options.indexOf(i))}. {i}</h3>\r\n                                </div>\r\n                        )\r\n                    }\r\n                    return [what, comp]\r\n                } else {\r\n                    return [what,\r\n                        <textarea name={'question-' + quest.number} className='exam-answer' value={option === \"\" ? \"\" : option} onChange={event => { updateAnswer(event) }}></textarea>\r\n                    ]\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div className='exam-div'>\r\n                    {display(question)}\r\n                </div>\r\n            )\r\n        } catch {\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n    function generate(questions) {\r\n        if (!props.one_one) {  // handles the scroll down view..\r\n            let comp = []\r\n            for (let i of questions) comp.push(<Question question={i} />)\r\n            return comp\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Question question={questions[curr - 1]} />\r\n                    <div className='quest-change-div'>\r\n                        <button className='hall-but no-top grow' onClick={\r\n                            () => {\r\n                                let num = curr - 1;\r\n\r\n                                if (!(num < 1)) {\r\n                                    setCurr(num);\r\n                                }\r\n                            }\r\n                        }>Prev</button>\r\n                        <div className='quest-change-butt-div'>\r\n                            {\r\n                                questions.map(x => <QuestButton number={x.number} />)\r\n                            }\r\n                        </div>\r\n                        <button className='hall-but no-top grow' onClick={\r\n                            () => {\r\n                                let num = curr + 1;\r\n                                if (!(num > questions.length)) {\r\n                                    setCurr(num);\r\n                                }\r\n                            }\r\n                        }>Next</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='exam-paper shadow-5'>\r\n            {generate(questions)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction QuestionPaper(props) {\r\n    let [settings, setSettings] = useState({\r\n        one_one: false\r\n    })\r\n    var exam = props.exam;\r\n    console.log(exam)\r\n\r\n    function submitExam() {\r\n        props.load();\r\n        let dest = {};\r\n        apiFetch(\"PUT\", `hall/${props.token}/${props.code}`, {\r\n            answers: Cookies.get(\"answers\")\r\n        }, dest)\r\n            .then(\r\n                () => {\r\n                    props.load()\r\n                    if (dest.status === 200) {\r\n                        let code = window.location.hash.slice(-1)[0];\r\n                        Cookies.set(\"current-exam\",[\"end\",code].join(\"----\"));\r\n                        window.location.reload();\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n    \r\n            if (Cookies.get(\"answers\") === undefined) {\r\n                Cookies.set(\"answers\", \"\")\r\n                window.location.reload();\r\n            }\r\n        }, []\r\n    )\r\n    try {\r\n        return (\r\n            <div className=\"exam-page\">\r\n                <ExamNav submit={submitExam} />\r\n                <SettingsDiv change={setSettings} settings={settings} />\r\n                <div className='exam-body'>\r\n                    <ExamTitle title={exam.details.name} time={exam.details.duration} submit={submitExam} />\r\n                    <ExamPaper question={exam.questions} one_one={settings.one_one} />\r\n                </div>\r\n                <ExamFoot />\r\n            </div>\r\n        )\r\n    } catch {\r\n        return <div></div>\r\n    }\r\n\r\n}\r\n\r\nexport default QuestionPaper;","import { CountDownTimer, apiFetch } from \"../functions/function\";\r\nimport Cookies from \"js-cookie\";\r\nimport \"../css/hall.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Loading from \"../components/Loading\";\r\nimport QuestionPaper from \"../components/QuestionPaper\";\r\nimport examio from \"../assets/examio2.png\";\r\n\r\nfunction HallNav() {\r\n    return (\r\n        <div className=\"hall-nav\">\r\n            <img src={examio} height=\"20\" width=\"90\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction HallFoot() {\r\n    return (\r\n        <div className=\"hall-foot\">\r\n            <h3 className=\"small-marg\"> examio &copy; {new Date().getFullYear()} </h3>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Invigilator(props) {\r\n    const history = useHistory();\r\n    let [examState, setExamState] = useState(null)\r\n\r\n    useEffect(\r\n        () => {\r\n            let exams = Cookies.get(\"current-exam\");\r\n\r\n            if (exams !== undefined) {\r\n                let info = exams.split('----');\r\n                if (info[1] === props.code) {\r\n                    setExamState(info[0])\r\n                }\r\n            } else {\r\n                setExamState(\"start\")\r\n            }\r\n\r\n        }, []\r\n    )\r\n\r\n    function organizeHall(state) {\r\n        function ChangeUser() {\r\n            return (\r\n                <div>\r\n                    <h3 className=\"small-marg\" style={{ textAlign: \"center\" }}> switch account from \"{props.user.info.name}\" ? </h3>\r\n                    <h3 className=\"small-marg\" style={{ marginBottom: \"30px\" }}><span className=\"hall-link grow shadow-5\"\r\n                        onClick={\r\n                            () => {\r\n                                let path = process.env.PUBLIC_URL + \"/#/login/oneTime\";\r\n                                let top = (window.outerHeight / 2) - 250\r\n                                let left = (window.outerWidth / 2) - 250\r\n                                let loginWin = window.open(path, \"Login to account\", `height=500,width=500,top=${top},left=${left},location=no`);\r\n                                console.log(loginWin)\r\n                                loginWin.onunload = event => {\r\n                                    console.log(\"close\")\r\n                                    window.location.reload()\r\n                                }\r\n                            }\r\n                        }\r\n                    >Click here</span></h3>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        let changeMode = () => {\r\n            let dest = {}\r\n            apiFetch(\"PUT\", `exam/${props.token}/${props.code}`, {\r\n                id: props.code\r\n            }, dest)\r\n                .then(\r\n                    () => {\r\n                        console.log(\"yippee\", dest, dest.status === 200)\r\n                        if (dest.status === 200) {\r\n                            console.log(\"update\")\r\n                            Cookies.set(\"current-exam\", `during----${props.code}`);\r\n                            setExamState(\"during\");\r\n                            props.reload()\r\n                        }\r\n                    }\r\n                )\r\n        }\r\n        if (state === \"start\") {\r\n\r\n            if (props.exam.status === \"exam has not begun\") {\r\n                if (props.exam.start_time !== null)\r\n                    return (\r\n                        <div>\r\n                            <ChangeUser />\r\n                            <h2 className=\"small-marg\" style={{ textAlign: \"center\" }}>Time till exam</h2>\r\n                            <CountDownTimer start={props.exam.start_time} big={true}>\r\n                                <button className=\"hall-but shadow-5 grow\" onClick={() => {\r\n                                    changeMode()\r\n                                }}>\r\n                                    START\r\n                                </button>\r\n                            </CountDownTimer>\r\n                        </div>\r\n                    )\r\n                else {\r\n                    return (\r\n                        <h2>The exam has not been started by the examiner.</h2>\r\n                    )\r\n                }\r\n            } else if (props.exam.status === \"exam waiting room\") {\r\n                let detail = props.exam.details\r\n                return (\r\n                    <div>\r\n                        <ChangeUser />\r\n                        <h2 className=\"small-marg\" style={{ textAlign: \"center\" }}>Exam will soon begin</h2>\r\n                        <CountDownTimer start={detail.start_time} big={true}>\r\n                            <button className=\"hall-but shadow-5 grow\" onClick={() => { changeMode() }}>\r\n                                START\r\n                            </button>\r\n                        </CountDownTimer>\r\n                    </div>\r\n                )\r\n            } else if (props.exam.status === \"the exam is ongoing\") {\r\n                return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        <ChangeUser />\r\n                        <h2 className=\"small-marg\" style={{ textAlign: \"center\" }}>The exam has begun..</h2>\r\n                        <button className=\"hall-but shadow-5 grow\" onClick={() => { changeMode() }}> START </button>\r\n                    </div>)\r\n            } else if (props.exam.status === \"the exam has ended\") {\r\n                return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        <h2 className=\"small-marg\" style={{ textAlign: \"center\" }}>Sorry the exam has already ended</h2>\r\n                        <button className=\"hall-but shadow-5 grow\" onClick={\r\n                            () => {\r\n                                history.push(\"/account/dashboard\")\r\n                            }\r\n                        }>Go back</button>\r\n                    </div>\r\n                )\r\n            }\r\n        } else if (state === \"during\") {\r\n            let exam = props.exam;\r\n            console.log(exam)\r\n            if (exam.status === \"the exam is ongoing\") {\r\n                return <QuestionPaper exam={exam} token={props.token} code={props.code} load={props.load} />\r\n            } else {\r\n                return (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        <h2 className=\"small-marg\" style={{ textAlign: \"center\" }}>Sorry the exam has already ended</h2>\r\n                        <button className=\"hall-but shadow-5 grow\" onClick={\r\n                            () => {\r\n                                history.push(\"/account/dashboard\")\r\n                            }\r\n                        }>Go back</button>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        } else {\r\n            return (\r\n                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                    <h2 className=\"small-marg\" style={{ textAlign: \"center\" }}>You have completed this exam..</h2>\r\n                    <button className=\"hall-but shadow-5 grow\" onClick={\r\n                        () => {\r\n                            history.push(\"/account/dashboard\")\r\n                        }\r\n                    }>Go back</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"center-div-2\">\r\n            {organizeHall(examState)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Hall(props) {\r\n    let [hallData, setData] = useState({\r\n        user: null,\r\n        hall: null\r\n    })\r\n\r\n    let loader = false\r\n\r\n    let [load, setLoad] = useState(false)\r\n\r\n    function loadFunc() {\r\n        loader = !loader\r\n        setLoad(loader)\r\n    }\r\n\r\n    let exam_token = props.match.params.token\r\n\r\n    let getData = () => {\r\n        loadFunc();\r\n        let dest1 = {}, dest2 = {};\r\n        Promise.all([apiFetch(\"GET\", `info/${props.user.token}`, {}, dest1), apiFetch(\r\n            \"GET\", `hall/${props.user.token}/${exam_token}`, {}, dest2\r\n        )])\r\n            .then(\r\n                () => {\r\n                    loadFunc();\r\n                    let user = null, hall = null;\r\n                    if (dest1.status === 200) user = dest1.data;\r\n                    if (dest2.status !== 404) hall = dest2.data;\r\n\r\n                    setData({ ...hallData, user: user, hall: hall })\r\n                }\r\n            )\r\n    }\r\n    useEffect(\r\n        () => {\r\n            getData()\r\n        }, []\r\n    )\r\n\r\n    function registerExam(event) {\r\n        function displayMessage(mes) {\r\n            let where = document.getElementById(\"message\");\r\n            where.innerHTML = mes\r\n        }\r\n\r\n        console.log(event)\r\n        let dest = {};\r\n        loadFunc();\r\n        apiFetch(\"POST\", `exam/${props.user.token}/create`, {\r\n            id: exam_token\r\n        }, dest)\r\n            .then(\r\n                () => {\r\n                    loadFunc()\r\n                    if (dest.status === 403) {\r\n                        let status = dest.data.status\r\n                        if (status === \"exam has already ended\") {\r\n                            displayMessage(\"the exam has already been concluded..\")\r\n                        } else if (status === \"not allowed for this exam\") {\r\n                            displayMessage(\"you are not allowed to write this exam\")\r\n                        }\r\n                        event.target.style.display = \"none\";\r\n                    } else if (dest.status === 404) {\r\n                        displayMessage(\"this exam no longer exists..\");\r\n                        event.target.style.display = \"none\";\r\n                    } else if (dest.status === 200) {\r\n                        event.target.style.display = \"none\";\r\n                        displayMessage(\"Exam registration successfull\");\r\n                        setTimeout(\r\n                            () => {\r\n                                getData()\r\n                            }, 1000\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    function generateHall(hallData) {\r\n        if (hallData.hall === null) {\r\n            return (\r\n                <div className=\"center-div-2\">\r\n                    <h1 className=\"small-marg not-clear\">Oops  !!!</h1>\r\n                    <h4 className=\"small-marg not-clear\">Exam not found...</h4>\r\n                    <h5 className=\"small-marg not-clear\">Recheck link and try again</h5>\r\n                </div>\r\n            )\r\n        } else {\r\n            let exam_data = hallData.hall;\r\n            let user = hallData.user\r\n            if (user === null) {\r\n                if (exam_data.status === \"not authorized to write this exam\") {\r\n                    return (\r\n                        <div className=\"center-div-2\">\r\n                            <h2 className=\"small-marg\"> This exam requires some verificaion</h2>\r\n                            <h3 className=\"small-marg\"> You will need to login on this device.</h3>\r\n\r\n                            <button className=\"hall-but shadow-5 grow\" onClick={\r\n                                () => {\r\n                                    let path = process.env.PUBLIC_URL + \"/#/login/oneTime\";\r\n                                    let top = (window.outerHeight / 2) - 250\r\n                                    let left = (window.outerWidth / 2) - 250\r\n                                    let loginWin = window.open(path, \"Login to account\", `height=500,width=500,top=${top},left=${left},location=no`);\r\n\r\n                                    loginWin.onunload = event => {\r\n                                        console.log(\"close\")\r\n                                        window.location.reload()\r\n                                    }\r\n                                }\r\n                            }>\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Invigilator exam={exam_data} reload={getData} />\r\n                    )\r\n                }\r\n            } else {\r\n                if (exam_data.status === \"not registered for this examination\") {\r\n                    return (\r\n                        <div className=\"center-div-2\">\r\n                            <h3 className=\"small-marg\" id=\"message\">\"{user.info.name}\" is not registered for this exam</h3>\r\n\r\n                            <button className=\"hall-but shadow-5 grow\" onClick={event => { registerExam(event) }}>\r\n                                Register\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Invigilator exam={exam_data} user={user} load={loadFunc} reload={getData} code={exam_token} token={props.user.token} />\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Loading show={load} />\r\n            <HallNav />\r\n            {generateHall(hallData)}\r\n            <HallFoot />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Hall;","import {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport {useState, useEffect} from 'react'\nimport Cookie from 'js-cookie';\nimport 'tachyons';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport Loading from './components/Loading';\nimport Home from './pages/Home'\nimport Account  from './pages/Account';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Hall from './pages/Hall'\n\nfunction App() {\n  AOS.init()\n\n  let [user, setUser] = useState({         // the user state\n    name: Cookie.get(\"name\"),\n    token: Cookie.get(\"token\")\n  })\n\n  let loader = false\n\n  let [load, setLoad] = useState(false)\n\n  function loadFunc () {\n    loader = !loader\n    setLoad(loader)\n  }\n\n  let login = data => {                    // logs the user and save the data as a cookie\n    if(data.name !== undefined && data.token !== undefined) {\n      Cookie.set(\"name\", data.name, {expires : 7});\n      Cookie.set(\"token\", data.token, {expires : 7})\n\n      setUser({\n        name: data.name,\n        token : data.token\n      })\n      return \"the data is correct\"\n    } else {\n      return \"the data is not correct\"\n    }\n  }\n\n  let logout = () => {\n    setUser({\n      name : null,\n      token : null\n    })\n    Cookie.remove(\"name\");\n    Cookie.remove(\"token\");\n  }\n\n  return(\n    <Router basename={process.env.PUBLIC_URL}>\n      <Loading show={load}/>\n      <Switch>\n        <Route path='/' exact component={(props) => <Home {...props} user={user} />}/>\n        <Route path='/home' exact component={(props) => <Home {...props} user={user} />}/>\n        <Route path='/account/:page' exact component={ (props) => <Account user={user} \n                                  loginFunc={login} logoutFunc={logout} {...props} load={loadFunc}/>}/>\n        <Route path='/login' exact component={() => <Login loginFunc={login} load={loadFunc}/>}/>\n        <Route path='/login/:type' exact component={(props) => <Login loginFunc={login} load={loadFunc} {...props} />}/>\n        <Route path='/signup' exact component={() => <Signup load={loadFunc}/>}/>\n        <Route path='/hall/:token' exact component={(props) => <Hall {...props} user={user} load={loadFunc} />}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}