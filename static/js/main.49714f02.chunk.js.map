{"version":3,"sources":["assets/examio.png","components/Loading.js","pages/Home.js","functions/function.js","assets/backarr.png","components/Exam.js","assets/examio2.png","assets/profile.png","pages/Account.js","pages/Login.js","pages/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","props","timer","useEffect","show","count","setInterval","i","which","document","getElementById","style","width","height","clearInterval","className","src","examio","display","justifyContent","alignItems","marginTop","id","Home","user","name","API_URL","apiFetch","a","method","endPoint","body","destination","fetch","JSON","stringify","headers","response","status","json","res","data","console","log","home_url","ExamLogs","useState","hall","setHall","load","dest","token","exam","then","registered_student","ExamEdit","setData","position","onClick","getElementsByClassName","margin","color","arrangeData","key","regularInput","place","type","placeholder","onChange","event","ref","target","value","dateChange","check","self","other","date","Date","String","toJSON","toLocaleDateString","toLocaleTimeString","cap_key","toUpperCase","join","comp","push","padding","borderBottom","includes","div","overflow","transition","generatePage","changes","reload","mes","header","scrollTop","innerHTML","setTimeout","displayError","QuestionEdit","quest","setQuest","page","setPage","objnum","setObj","message","container","handleQuestionCreate","preventDefault","formData","FormData","mark","options","get","question","option","mode","optionGenerate","required","addEventListener","UpdateQuestion","field","setField","setMode","num","form","number","length","append","list","error","answer","setOptions","getField","min","marginBottom","arrange","str","replace","overflowY","questionList","questions","ExamDetail","loading","examData","setExam","getData","destination1","destination2","Promise","all","exam_id","calcPercentage","total","ratio","Math","round","view","back","borderRadius","backgroundImage","backgroundColor","textAlign","paddingTop","href","flexDirection","window","location","selectPage","ViewPage","sorted","setSort","buttonFunc","start","ongoing","complete","exams","content","date_stamp","reverse","generateExamList","CreateExam","disableValue","e","valued","checked","input","input2","removeAttribute","setAttribute","border","handleExamCreate","num_of_students","verification","specific","personal","duration","exam_code","Number","change","removeEventListener","max","disabled","marginLeft","Exam","exam_data","exam_page","setExamPage","fetchExamDetails","Sidebar","word","butt","setButt","buttons","setButtons","butList","butCompList","indexOf","url_push","toLowerCase","profile","email","Account","history","useHistory","userInfo","setInfo","setShow","loader","info","cursor","match","params","Login","handleLoginSubmit","password","res_data","login","loginFunc","err","head","handleRequestError","getFullYear","Signup","App","AOS","init","Cookie","setUser","setLoad","loadFunc","undefined","set","logout","remove","basename","process","path","exact","component","logoutFunc","exacy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.49714f02.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/examio.1004fcba.png\";","import { useEffect } from \"react\";\r\nimport examio from \"../assets/examio.png\";\r\nimport \"../css/loading.css\";\r\n\r\nfunction Loading(props) {\r\n    var timer;\r\n\r\n    useEffect(() => {\r\n        if (props.show) {\r\n            var count = 1;\r\n            timer = setInterval(() => {\r\n                for (let i = 1; i < 4; i++) {\r\n                    let which = document.getElementById(`load${i}`)\r\n\r\n                    if (i === count) {\r\n                        which.style.width = \"13px\";\r\n                        which.style.height = \"13px\";\r\n                    } else {\r\n                        which.style.width = \"10px\";\r\n                        which.style.height = \"10px\";\r\n                    }\r\n                }\r\n\r\n                if (count === 3) {\r\n                    count = 1;\r\n                } else {\r\n                    count++;\r\n                }\r\n            }, 500)\r\n        } else {\r\n            clearInterval(timer)\r\n        }\r\n\r\n        return function cleanup() {\r\n            clearInterval(timer)\r\n        }\r\n\r\n    }, [props])\r\n\r\n    return props.show ? (\r\n        <div className=\"load-center\">\r\n            <img src={examio} height=\"30\" width=\"120\"></img>\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                alignItems: \"center\",\r\n                width: \"50px\",\r\n                height: \"30px\",\r\n                marginTop: \"10px\"\r\n            }}>\r\n                <div id=\"load1\">\r\n\r\n                </div>\r\n                <div id=\"load2\">\r\n\r\n                </div>\r\n                <div id=\"load3\">\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    ) : ''\r\n}\r\n\r\nexport default Loading;","function Home(props){\r\n    return (\r\n        <h1>Hello world == {props.user.name}</h1>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","const API_URL = \"http://127.0.0.1:8000/\" //\"http://examio.herokuapp.com/\" \r\n\r\nexport const apiFetch = async function (method = 'GET', endPoint = null, body = {}, destination) {\r\n\r\n    try {\r\n        let response = method !== \"GET\" ? await fetch(API_URL + endPoint, {\r\n            method: method,\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"content-type\": \"application/json\"                      // to be returned\r\n            }\r\n        }) : await fetch(API_URL +  endPoint)\r\n        destination.status = response.status\r\n\r\n        let res = await response.json()\r\n        destination.data = res;\r\n        console.log(destination)\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/backarr.2c7faef3.png\";","import { useState, useEffect } from 'react';\r\nimport { apiFetch } from '../functions/function';\r\nimport back from '../assets/backarr.png';\r\n\r\nconst home_url = \"examio\"\r\n\r\nfunction ExamLogs(props) {\r\n    let [hall, setHall] = useState({})\r\n    useEffect(()=> {\r\n        props.load()\r\n        let dest = {}\r\n        apiFetch(\"GET\", `hall/${props.token}/${props.exam.id}`,{},dest)\r\n        .then(\r\n            () => {\r\n                if (dest.status === 200) {\r\n                    setHall({...hall, hall : dest})\r\n                    props.load()\r\n                }\r\n                else {\r\n\r\n                }\r\n            }\r\n        )\r\n    }, [])\r\n    try{\r\n    return (\r\n        <div>\r\n            {hall.hall.registered_student},..as\r\n        </div>\r\n    )\r\n    } catch {\r\n        return <h1>loading...</h1>\r\n    }\r\n}\r\n\r\nfunction ExamEdit(props) {\r\n    let [data, setData] = useState({});\r\n\r\n    function displayError(mes) {\r\n        try{\r\n            let header = document.getElementById(\"edit-header\");\r\n            document.getElementById(\"edit-div\").scrollTop = \"0px\";\r\n            header.innerHTML = mes;\r\n            setTimeout(\r\n                () => {\r\n                    header.innerHTML = \"Edit questions..\"\r\n                },2000\r\n            )\r\n\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    function generatePage() {\r\n        function arrangeData(key) {\r\n            function regularInput(which, place, type) {\r\n                if (which === \"num_of_students\") which = \"students\"\r\n                return <input className='create-form-input' style={{ width: \"150px\", height: \"30px\" }} placeholder={place} type={type} onChange={event => {\r\n                    let ref = { ...data };\r\n                    ref[which] = event.target.value;\r\n                    setData(ref);\r\n                }}></input>\r\n\r\n            }\r\n\r\n            switch (key) {\r\n                case \"num_of_students\":\r\n                    return [\"Number of students\", regularInput(key,\"Number of students\", \"number\")];\r\n                case \"total\":\r\n                    return [\"Total marks\", regularInput(key, \"Total marks\", \"number\")];\r\n                case \"end-time\":\r\n                    return [\"End time\", <h3 style={{margin : \"10px 0px\", color : \"rgba(255, 248, 220, 0.474)\"}}>this field cannot be changed</h3>]\r\n                case \"start\":\r\n                    let dateChange = event => {\r\n                        let check = self.type === \"date\"\r\n                        let self = event.target;\r\n                        let other = document.getElementById(`${check ? \"time-update\" : \"date-update\"}`);\r\n                        let ref = { ...data };\r\n                        let date = new Date(check ? self.value + other.value : other.value + self.value);\r\n                        if (String(date) === \"Invalid Date\") {\r\n                            ref[key] = null;\r\n                        } else {\r\n                            ref[key] = date.toJSON();\r\n                        }\r\n                    }\r\n                    let input = <div style={{ display: \"flex\" }}>\r\n                        <input className='create-form-input' style={{ width: \"150px\", height: \"30px\" }}  type=\"date\" id=\"date-update\" onChange={event => { dateChange(event) }} value={new Date().toLocaleDateString()}></input>\r\n                        <input className='create-form-input' style={{ width: \"150px\", height: \"30px\" }}  type=\"time\" id=\"time-update\" onChange={event => { dateChange(event) }} value={new Date().toLocaleTimeString()}></input>\r\n                    </div>\r\n                     return [\"Start time\", input]\r\n                case \"duration\":\r\n                    return [\"Exam duration\", regularInput(key,\"Number of students\", \"number\")];\r\n\r\n                default:\r\n                    let cap_key = [...key]\r\n                    cap_key[0] = cap_key[0].toUpperCase();\r\n                    \r\n                    return [cap_key.join(\"\"), regularInput(key , cap_key.join(\"\"), \"text\")]\r\n            }\r\n\r\n           \r\n\r\n\r\n\r\n        }\r\n        let comp = []\r\n        for (let i in props.exam) {\r\n            if (i === \"id\" | i === \"date_stamp\" | i === \"exam_code\") {\r\n\r\n            } else {\r\n                comp.push(\r\n                    <div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"10px 0px\", borderBottom: \"rgba(255, 248, 220, 0.474) 2px solid\" }}>\r\n                            <div>\r\n                                <h3 style={{ margin: \"4px 0px\" }}>{arrangeData(i)[0]}</h3>\r\n                                <h5 style={{ margin: \"0px\" }}>{props.exam[i] === null ? \"not specified\" : [\"start\", \"end-time\"].includes(i) ? `${new Date(props.exam[i]).toLocaleDateString() + \" \" + new Date(props.exam[i]).toLocaleTimeString()}` :\r\n                                [\"duration\", \"personal_time\"].includes(i) ? `${props.exam[i][0]} hours ${props.exam[i][1]}minutes ${props.exam[i][2]} seconds` :props.exam[i]}</h5>\r\n                            </div>\r\n\r\n                            <button className='exam-create-but' onClick={() => {\r\n                                let div = document.getElementById(\"field-\" + i)\r\n                                if (div.style.height === \"0px\") {\r\n                                    div.style.height = \"70px\"\r\n                                } else {\r\n                                    div.style.height = \"0px\"\r\n                                }\r\n\r\n                            }}>change</button>\r\n                        </div>\r\n                        <div style={{\r\n                            height: \"0px\",\r\n                            overflow: \"hidden\",\r\n                            transition: \"0.8s ease all\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\"\r\n                        }} id={\"field-\" + i}>\r\n\r\n                            {arrangeData(i)[1]}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n\r\n        return comp\r\n    }\r\n    return (\r\n        <div className='exam-create-div' id=\"edit-div\">\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"edit-header\" style={{ margin: \"5px\" }}> Edit exam fields...</h2>\r\n               \r\n            </div>\r\n            <h3 style={{color : \"rgba(255, 248, 220, 0.474)\"}}>Exam code: {props.exam[\"exam code\"]}</h3>\r\n            {generatePage()}\r\n            <div style={{display :\"flex\", justifyContent :\"center\", margin :\"20px\"}}>\r\n                <button className=\"exam-create-but grow shadow-5\" onClick={() => {\r\n\r\n                    {\r\n                        props.load();\r\n                        console.log(data)\r\n                        let dest = {}\r\n                        apiFetch(\"PUT\", `exam/${props.token}/${props.id}`,{ changes : data},dest)\r\n                        .then(\r\n                            () => {\r\n                                if(dest.status === 200) {\r\n                                    props.load();\r\n                                    props.reload();\r\n                                } else {\r\n                                    displayError(\"update not sucessfull...\")\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                }}>save changes</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nfunction QuestionEdit(props) {\r\n    let [quest, setQuest] = useState(\"obj\");\r\n\r\n    let [page, setPage] = useState(\"create\");\r\n    let [objnum, setObj] = useState(4);\r\n\r\n\r\n    function displayError(message) {\r\n        let header = document.getElementById('create-header'), container = document.getElementsByClassName(\"exam-action-page\")[0];\r\n        header.innerHTML = message;\r\n        container.scrollTop = 0;\r\n        setTimeout(() => {\r\n            header.innerHTML = \"Set the exam questions...\"\r\n        }, 1500);\r\n    }\r\n\r\n    function generatePage(page) {\r\n        function UpdateQuestion(props) {\r\n            let [field, setField] = useState(\"mark\");\r\n            let [mode, setMode] = useState(props.mode)\r\n\r\n            function getField() {\r\n                switch (field) {\r\n                    case \"others\":\r\n                        console.log(mode)\r\n                        let comp = []\r\n                        if (mode === 'o') {\r\n                            for (let i = 0; i < props.option.length; i++) {\r\n                                comp.push(\r\n                                    <input type=\"text\" className=\"create-form-input\" name={`option${i + 1}`} placeholder={`option ${i + 1}`}></input>\r\n                                )\r\n                            }\r\n                            comp.push(<input type=\"number\" className=\"create-form-input\" name=\"correct\" placeholder='the number of the correct option'></input>)\r\n                        } else {\r\n                            comp = <textarea className='create-form-input' placeholder={'enter the answer here\\n' + (mode === 'g' ? 'enter the answer for each gap on a new line' : '')} name=\"options\"></textarea>\r\n                        }\r\n                        return (\r\n                            <div>\r\n                                <select className='create-form-input' onChange={\r\n                                    event => {\r\n                                        setMode(event.target.value)\r\n                                    }\r\n                                } name=\"mode\" value={mode}>\r\n                                    <option style={{ color: \"black\" }} value='o'> Obj</option>\r\n                                    <option style={{ color: \"black\" }} value='g'>German</option>\r\n                                    <option style={{ color: \"black\" }} value='t'>Theory</option>\r\n                                </select>\r\n                                <textarea className='create-form-input' placeholder={'enter the new question' + (mode === 'g' ? '\\n replace empty gaps with {dash}' : \"\")} name=\"question\"></textarea>\r\n                                {comp}\r\n                            </div>\r\n                        )\r\n                    case \"mark\":\r\n                        return (\r\n                            <input type=\"number\" name=\"mark\" className=\"create-form-input\" placeholder=\"exam mark\"></input>\r\n                        )\r\n                }\r\n            }\r\n\r\n            let setOptions = quest => {\r\n                try {\r\n                    let options = props.option\r\n                    let answer = props.answer\r\n\r\n                    function change(num) {\r\n                        return ['a', 'b', 'c', 'd', 'e', 'f'][num - 1]\r\n                    }\r\n                    if (quest === 'o') {\r\n                        let comp = [], count = 1;\r\n                        for (let i of options) {\r\n                            comp.push(\r\n                                <div> <h4 style={{ margin: \"10px\" }}>{change(count)}. {i} {i === answer ? '(correct)' : \"\"}</h4></div>\r\n                            )\r\n                            count++;\r\n                        }\r\n                        return comp;\r\n                    } else if (quest === 'g') {\r\n                        return <div> <h4 style={{ margin: \"10px\" }}>{options}</h4></div>\r\n\r\n                    } else {\r\n                        return <div> <h4 style={{ margin: \"10px\" }}>{options}</h4></div>\r\n\r\n                    }\r\n                } catch {\r\n                    return <div></div>\r\n                }\r\n            }\r\n\r\n\r\n            useEffect(() => {\r\n                let handleQuestionUpdate = function (event) {\r\n                    event.preventDefault();\r\n                    try {\r\n\r\n\r\n                        let displayError = message => {\r\n                            let header = document.getElementById('edit-header' + props.num);\r\n                            let div = document.getElementById(`question${props.num}`)\r\n                            div.scrollTop = \"0px\"\r\n                            header.innerHTML = message;\r\n                            setTimeout(\r\n                                () => {\r\n                                    header.innerHTML = 'Edit Questions...'\r\n                                }, 3000\r\n                            )\r\n                        }\r\n                        let form = event.target;\r\n                        let formData = new FormData(form);\r\n\r\n                        if (formData.get(\"field\") === \"mark\") {\r\n                            if (formData.get(\"mark\") === null) {\r\n\r\n                            } else {\r\n                                props.load();\r\n                                let dest = {};\r\n                                apiFetch(\"PUT\", `question/${props.token}/${props.id}`, {\r\n                                    number: props.num,\r\n                                    changes: {\r\n                                        mark: formData.get(\"mark\")\r\n                                    }\r\n                                }, dest).then(\r\n                                    () => {\r\n                                        if (dest.status === 200) {\r\n                                            props.load()\r\n                                            props.reload()\r\n                                        } else {\r\n\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n                        } else {\r\n                            if (mode === 'o') {\r\n                                if ((\r\n                                    function () {\r\n                                        let check = false\r\n                                        for (let i = 0; i < props.option.length; i++) {\r\n                                            if (formData.get(`option${i + 1}`) === null) {\r\n                                                check = true\r\n                                            }\r\n                                        }\r\n                                        return formData.get(\"correct\") === null ? true : check;\r\n                                    }\r\n                                )()) formData.append(\"options\", '')\r\n\r\n                                else formData.append(\"options\", [formData.get(\"correct\"),\r\n                                ...(\r\n                                    function () {\r\n                                        let list = [];\r\n                                        for (let i = 0; i < props.option.length; i++) {\r\n                                            list.push(formData.get(`option${i + 1}`))\r\n                                        }\r\n                                        return list\r\n                                    }\r\n                                )()\r\n                                ])\r\n                            }\r\n\r\n                            if (formData.get(\"mode\") !== props.mode) {\r\n                                console.log(typeof formData.get(\"question\"))\r\n                                if (formData.get(\"question\") === '' || formData.get(\"options\") === null) {\r\n                                    displayError(\"Once the mode is changed, no field can be left empty\");\r\n                                    return\r\n                                }\r\n                            }\r\n                            let dest = {};\r\n                            props.load();\r\n                            apiFetch(\"PUT\", `question/${props.token}/${props.id}`, {\r\n                                number: props.num,\r\n                                changes: {\r\n                                    question: formData.get(\"question\"),\r\n                                    options: formData.get(\"options\")\r\n                                }\r\n                            }, dest).then(\r\n                                () => {\r\n                                    if (dest.status === 200) {\r\n                                        props.load();\r\n                                        props.reload();\r\n                                    } else {\r\n\r\n                                    }\r\n                                }\r\n                            )\r\n\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }\r\n                let form = document.getElementById(\"question-update\" + props.num)\r\n                form.addEventListener(\"submit\", handleQuestionUpdate);\r\n\r\n            }, [])\r\n\r\n\r\n            return (\r\n                <div style={{ height: \"0px\", transition: \"1.0s ease all\", overflow: \"hidden\" }} id={`question${props.num}`}>\r\n                    <h3>answers</h3>\r\n                    {setOptions(props.mode)}\r\n\r\n                    <h3 id={\"edit-header\" + props.num}>Edit Questions..</h3>\r\n                    <form id={\"question-update\" + props.num} style={{ padding: \"10px\" }} >\r\n                        <select className='create-form-input' name=\"field\" onChange={event => {\r\n                            setField(event.target.value)\r\n                        }}>\r\n                            <option style={{ color: \"black\" }} value=\"mark\">Mark</option>\r\n                            <option style={{ color: \"black\" }} value=\"others\">Others</option>\r\n                        </select>\r\n                        {getField()}\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}> <button className='exam-create-but shadow-5 grow'>make changes</button></div>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n        function questionList(list) {\r\n\r\n            function arrange(str, mode) {\r\n                if (mode === 'g') {\r\n                    while (str.includes(\"{dash}\")) {\r\n                        str = str.replace(\"{dash}\", \"______\")\r\n                    }\r\n                    return str;\r\n                } else {\r\n                    return str;\r\n                }\r\n            }\r\n            let comp = []\r\n            for (let i of list) {\r\n                comp.push(\r\n                    <div>\r\n                        <button className='exam-list-button grow shadow-5' onClick={() => {\r\n                            let div = document.getElementById(`question${i.number}`);\r\n                            if (div.style.height === \"300px\") {\r\n                                div.style.height = \"0px\";\r\n                                div.style.overflowY = \"hidden\";\r\n                            } else {\r\n                                div.style.height = \"300px\";\r\n                                div.style.overflowY = \"scroll\";\r\n                            }\r\n                        }}>\r\n                            <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <h4 style={{ margin: \"0px\" }}>{i.number} {arrange(i.question, i.mode)}</h4> <h4 style={{ margin: \"0px\" }}>mode :{i.mode}</h4>\r\n                            </div>\r\n                            <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>{i.mark} mark</h4>\r\n                            </div>\r\n                        </button>\r\n                        <UpdateQuestion answer={i.answer} option={i.options} mode={i.mode} num={i.number} load={props.load} reload={props.reload} token={props.token} id={props.id} />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return comp;\r\n        }\r\n        switch (page) {\r\n            case \"create\":\r\n                return (\r\n                    <div>\r\n                        <div className='question-div'>\r\n                            <select className='create-form-input' style={{ width: \"fit-content\" }} onChange={event => {\r\n                                setQuest(event.target.value)\r\n                            }}>\r\n                                <option value=\"obj\" style={{ color: \"black\" }}>Obj</option>\r\n                                <option value=\"theory\" style={{ color: \"black\" }}>Theory</option>\r\n                                <option value=\"german\" style={{ color: \"black\" }}> German</option>\r\n                            </select>\r\n\r\n                            {quest === \"obj\" ? <input className='create-form-input' style={{ width: \"150px\" }} type=\"number\" placeholder=\"no of options\" onChange={event => {\r\n                                let value = event.target.value;\r\n                                if (value < 2 || value > 6) {\r\n                                    displayError(\"number must be between 2 and 6..\")\r\n                                    event.target.value = value < 2 ? 2 : 6;\r\n                                    setObj(event.target.value)\r\n                                } else {\r\n                                    setObj(event.target.value)\r\n                                }\r\n                            }}></input> : \"\"}\r\n\r\n                            <input className=\"create-form-input\" style={{ width: \"100px\" }} type=\"number\" min=\"0\" placeholder='mark' id=\"mark\"></input>\r\n                        </div>\r\n\r\n                        <form id=\"questions-form\" style={{ height: \"fit-content\" }}>\r\n                            <textarea className='create-form-input' name=\"question\" style={{ height: \"100px\", marginBottom: \"20px\" }} required placeholder={'enter the question here...\\n' + (quest === 'german' ? \"replace every gap to be filed with {dash} \" : '')}></textarea>\r\n                            {optionGenerate(quest)}\r\n\r\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                                <button className='exam-create-but shadow-5 grow'>add question</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                )\r\n            case \"view\":\r\n                return (\r\n                    <div>\r\n                        {questionList(props.questions)}\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n    function handleQuestionCreate(event) {\r\n        props.load();\r\n        event.preventDefault();\r\n        let formData = new FormData(event.target);\r\n        let mark = document.getElementById(\"mark\");\r\n        let data, dest = {};\r\n        if (quest === \"obj\") {\r\n            let options = []\r\n            for (let i = 0; i < objnum; i++) {\r\n                options.push(formData.get(`option${i + 1}`))\r\n            }\r\n            options = [formData.get(`option${formData.get(\"correct\")}`), ...options]\r\n            data = {\r\n                question: formData.get(\"question\"),\r\n                option: options.join(\"--\"),\r\n                mode: quest === \"obj\" ? 'o' : quest === \"theory\" ? 't' : 'g',\r\n                mark: mark.value === '' ? 1 : mark.value\r\n            }\r\n        } else {\r\n            data = {\r\n                question: formData.get(\"question\"),\r\n                option: formData.get(\"option\"),\r\n                mode: quest === \"obj\" ? 'o' : quest === \"theory\" ? 't' : 'g',\r\n                mark: mark.value === '' ? 1 : mark.value\r\n            }\r\n        }\r\n\r\n        console.log(data)\r\n        apiFetch(\"POST\", `question/${props.token}/${props.id}`, data, dest)\r\n            .then(\r\n                () => {\r\n                    props.load();\r\n                    if (dest.status === 200) {\r\n                        displayError(\"Question added successfully\");\r\n                        props.reload();\r\n\r\n                        for (let i of document.getElementsByClassName(\"create-form-input\")) i.value = null;\r\n                    } else if (dest.status === 300) {\r\n                        displayError(\"Questions required are already complete\")\r\n                    } else {\r\n                        displayError(\"could not create exam\")\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    useEffect(() => {\r\n        try {\r\n            let form = document.getElementById(\"questions-form\");\r\n            form.addEventListener(\"submit\", handleQuestionCreate)\r\n        } catch {\r\n\r\n        }\r\n    }, [page])\r\n\r\n    function optionGenerate(quest) {\r\n        switch (quest) {\r\n            case \"obj\":\r\n                let comp = [];\r\n                for (let i = 0; i < objnum; i++) {\r\n                    comp.push(\r\n                        <input type=\"text\" className=\"create-form-input\" placeholder={`option ${i + 1}`} required name={`option${i + 1}`}></input>\r\n                    )\r\n                }\r\n                comp.push(<input type=\"number\" style={{ marginTop: \"20px\" }} className='create-form-input' placeholder='correct option number..' required name=\"correct\"></input>)\r\n                return comp;\r\n            case \"german\":\r\n                return (\r\n                    <textarea type=\"text\" className=\"create-form-input\" placeholder='enter the answer for each gap with a newline.' style={{ height: \"100px\" }} required name=\"option\"></textarea>\r\n                )\r\n            default:\r\n                return (\r\n                    <textarea type=\"text\" className=\"create-form-input\" placeholder='enter the answer of the question' style={{ height: \"100px\" }} required name=\"option\"></textarea>\r\n                )\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className='exam-create-div'>\r\n            <div className='exam-view-actions' style={{ height: 'fit-content' }}>\r\n                <div className={'exam-view-group grow' + (page === \"create\" ? ' bottom-border' : '')} onClick={() => { setPage(\"create\") }}>\r\n                    <h4 style={{ display: \"flex\", margin: \"5px\" }}> create </h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"view\" ? ' bottom-border' : '')} onClick={() => { setPage(\"view\") }}>\r\n                    <h4 style={{ display: \"flex\", margin: \"5px\" }}> view </h4>\r\n                </div>\r\n\r\n            </div>\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"create-header\" style={{ margin: \"5px\" }}>{page === \"create\" ? \"Set\" : \"View\"} the exam questions..</h2>\r\n            </div>\r\n            {generatePage(page)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction ExamDetail(props) {\r\n    let [page, setPage] = useState(\"question\");\r\n\r\n    let [examData, setExam] = useState(\r\n        {\r\n            loading: true,\r\n            data: {\r\n                exam: {\r\n                    exam: {\r\n\r\n                    }\r\n                },\r\n\r\n                questions: {\r\n                    questions: []\r\n                }\r\n            }\r\n        }\r\n    )\r\n\r\n\r\n    function getData() {\r\n        props.load()\r\n        let destination1 = {}, destination2 = {};\r\n        Promise.all([apiFetch(\"GET\", `exam/${props.token}/${props.exam_id}`, {}, destination1),\r\n        apiFetch(\"GET\", `question/${props.token}/${props.exam_id}`, {}, destination2)])\r\n            .then(\r\n                () => {\r\n                    props.load();\r\n                    if (destination1.status === 200 && destination2.status === 200) {\r\n                        console.log('yeah')\r\n                        setExam({ ...examData, loading: true, data: { exam: destination1.data, questions: destination2.data } })\r\n                    }\r\n                }\r\n            )\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    function calcPercentage(number, total) {\r\n        try {\r\n            if (total !== null) {\r\n                let ratio = number / total;\r\n                return [Math.round(ratio * 100), Math.round(ratio * 360)]\r\n            } else {\r\n                if (number === 0) return [0, 0]\r\n                else return [100, 360]\r\n            }\r\n        } catch {\r\n            return [null, null]\r\n        }\r\n    }\r\n\r\n    function selectPage(page) {\r\n\r\n        {\r\n            switch (page) {\r\n                case \"question\":\r\n                    return <QuestionEdit load={props.load} token={props.token} id={props.exam_id} reload={getData}\r\n                        questions={examData.data.questions.questions} />\r\n                case \"delete\":\r\n                    return (\r\n                        <div style={{\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\"\r\n                        }}>\r\n                            <h3 style={{ margin: \"5px\" }}> are you sure you want to delete </h3>\r\n                            <h3 style={{ margin: \"5px\" }}>\"{examData.data.exam.exam.name}\"</h3>\r\n                            <div style={{\r\n                                width: \"100%\",\r\n                                padding: \"0px 10px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\"\r\n                            }}>\r\n                                <button className='exam-create-but shadow-5 grow' onClick={() => {\r\n                                    let dest = {};\r\n                                    props.load();\r\n                                    apiFetch(\"DELETE\", `exam/${props.token}/${props.exam_id}`, {}, dest)\r\n                                        .then(\r\n                                            () => {\r\n                                                if (dest.status === 200) {\r\n                                                    props.load();\r\n                                                    window.location.reload();\r\n                                                }\r\n                                            }\r\n                                        )\r\n                                }}>Yes</button>\r\n                                <button className='exam-create-but shadow-5 grow' onClick={() => {\r\n                                    setPage(\"question\")\r\n                                }}>No</button>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                case \"edit\":\r\n                    return (\r\n                        <ExamEdit exam={examData.data.exam.exam} load={props.load} reload={getData} token={props.token} id={props.exam_id}/>\r\n                    )\r\n                \r\n                case \"logs\":\r\n                    return (\r\n                        <ExamLogs exam={examData.data.exam.exam} token={props.token} load={props.load}/>\r\n                    )\r\n\r\n            }\r\n        }\r\n    }\r\n    return examData.loading === true ? (\r\n        <div className='exam-main'>\r\n\r\n            <div className='exam-action'>\r\n                <div className='section-header'>\r\n                    <h2 style={{ margin: \"0px\" }}></h2>\r\n                </div>\r\n                <div className='exam-details shadow-5'>\r\n                    <h2 style={{ margin: \"0px\" }}><span><img style={{\r\n                        margin: \"0px 10px 0px 10px\"\r\n                    }} onClick={() => {\r\n                        props.view({\r\n                            exam: false,\r\n                            id: null\r\n                        })\r\n                    }} src={back} height=\"30\" width=\"30\"></img></span>{examData.data.exam.exam.name} </h2>\r\n\r\n                    <div style={{ display: \"flex\", alignItems: \"center\", marginTop: \"10px\" }}>\r\n\r\n                        <div style={{\r\n                            margin: \"5px\",\r\n                            width: \"60px\",\r\n                            height: \"60px\",\r\n                            borderRadius: \"30px\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            backgroundImage: `conic-gradient(cornsilk 0deg, cornsilk ${calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[1]}deg, rgba(137, 199, 255 ,0.4) ${calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[1]}deg)`\r\n                        }}>\r\n                            <div style={{\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                                borderRadius: \"30px\",\r\n                                backgroundColor: \"rgb(6, 72, 133)\",\r\n                                textAlign: \"center\",\r\n                                paddingTop: \"15px\"\r\n                            }}>\r\n                                {calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[0]}%\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                        {\r\n                            calcPercentage(examData.data.questions.questions.length, examData.data.exam.exam.number)[0] === 100 ?\r\n                                <div>\r\n                                    <h4 style={{ margin: \"0px\" }}>Questions complete..</h4>\r\n                                    <h5 style={{ margin: \"4px 0px\" }}>exam link <a href={`https:www.${home_url}.com/#/hall/${examData.data.exam.exam[\"exam code\"]}`}>{`https:www.${home_url}.com/#/hall/${examData.data.exam.exam[\"exam code\"]}`}</a></h5>\r\n                                </div> :\r\n                                <h4 style={{ margin: \"0px\" }}>complete.... Set questions to get exam ready</h4>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='exam-action-group'>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"question\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"question\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Questions</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> set and edit exam questions </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"edit\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"edit\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Edit</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> edit the exam configurations  </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"logs\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"logs\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}>Logs</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> view exam status as the exam is ongoing </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"delete\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\", color: \"red\" }}> Delete </h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\", color: \"red\" }}> delete exam.. </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='exam-action-page'>\r\n                {selectPage(page)}\r\n            </div>\r\n\r\n        </div>\r\n    ) : <div>loading....</div>\r\n}\r\n\r\nfunction ViewPage(props) {\r\n    let [sorted, setSort] = useState([[], [], []]);\r\n    let [page, setPage] = useState(\"all\");\r\n\r\n    function buttonFunc(id) {\r\n        props.view({\r\n            exam: true,\r\n            id: id\r\n        })\r\n    }\r\n\r\n    let generateExamList = (page) => {\r\n        let content = [];\r\n        switch (page) {\r\n            case \"all\":\r\n                for (let i of props.data.data.exams) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            case \"start\":\r\n                for (let i of sorted[0]) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            case \"ongo\":\r\n                for (let i of sorted[1]) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            case \"com\":\r\n                for (let i of sorted[2]) {\r\n                    content.push(<button className='exam-list-button grow shadow-5' onClick={() => { buttonFunc(i.id) }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <h4 style={{ margin: \"0px\" }}>{i.name}</h4> <h4 style={{ margin: \"0px\" }}>{new Date(i.date_stamp).toLocaleDateString()}</h4>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <h4 style={{ margin: \"10px\", color: \"rgba(255, 248, 220, 0.474)\" }}>Status : {i.status}</h4>\r\n                        </div>\r\n                    </button>)\r\n                }\r\n                break;\r\n            default:\r\n                content = []\r\n        }\r\n        content.reverse();\r\n\r\n        if (content.length === 0) {\r\n            content = (<div className='exam-none'>\r\n                <h5>{page === \"all\" ? \"you have no created exam\" : \"no exam in this category\"}</h5>\r\n            </div>)\r\n        }\r\n        return (\r\n            <div className='exam-details-list'>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!props.loading) {\r\n            let start = [], ongoing = [], complete = [];\r\n\r\n            for (let i of props.data.data.exams) {\r\n                if ((i.status === \"created\") || (i.status === \"starting\")) start.push(i);\r\n                else if (i.status === \"during\") ongoing.push(i);\r\n                else complete.push(i);\r\n            }\r\n            setSort([start, ongoing, complete]);\r\n        }\r\n\r\n    }, [props])\r\n    return (\r\n        <div className='exam-view'>\r\n            <div className='exam-view-actions'>\r\n                <div className={'exam-view-group grow' + (page === \"all\" ? ' bottom-border' : '')} onClick={() => { setPage(\"all\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>all <div className='exam-num'>{props.num}</div></h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"start\" ? ' bottom-border' : '')} onClick={() => { setPage(\"start\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>yet-to-start <div className='exam-num'>{sorted[0].length}</div></h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"ongo\" ? ' bottom-border' : '')} onClick={() => { setPage(\"ongo\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>ongoing <div className='exam-num'>{sorted[1].length}</div></h4>\r\n                </div>\r\n                <div className={'exam-view-group grow' + (page === \"com\" ? ' bottom-border' : '')} onClick={() => { setPage(\"com\") }}>\r\n                    <h4 style={{ display: \"flex\" }}>completed <div className='exam-num'>{sorted[2].length}</div></h4>\r\n                </div>\r\n\r\n            </div>\r\n            {generateExamList(page)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction CreateExam(props) {\r\n\r\n    function disableValue(e, value) {\r\n        let valued = e.target.checked;\r\n\r\n        if (value === \"veri\") {\r\n            value = \"spec\";\r\n            valued = valued && document.getElementById(\"spec-check\").checked;\r\n        }\r\n\r\n        let header = document.getElementById(`${value}-header`);\r\n        let input = document.getElementById(`${value}`);\r\n\r\n        if (value === \"start\") {\r\n            let input2 = document.getElementById(\"start-time\");\r\n            valued ? input2.removeAttribute(\"disabled\") : input2.setAttribute(\"disabled\", \"disabled\");\r\n            input2.style.border = valued ? \"cornsilk 3px solid\" : \"rgba(255, 248, 220, 0.474) 3px solid\";\r\n\r\n            if (!valued) input2.value = null;\r\n        }\r\n\r\n        header.style.color = valued ? \"cornsilk\" : \"rgba(255, 248, 220, 0.474)\";\r\n        valued ? input.removeAttribute(\"disabled\") : input.setAttribute(\"disabled\", \"disabled\");\r\n        input.style.border = valued ? \"cornsilk 3px solid\" : \"rgba(255, 248, 220, 0.474) 3px solid\";\r\n\r\n        if (!valued) {\r\n            input.value = null\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let handleExamCreate = e => {\r\n            e.preventDefault();\r\n            let formData = new FormData(e.target);\r\n\r\n            function displayError(message) {\r\n                let header = document.getElementById('create-header'), container = document.getElementsByClassName(\"exam-action-page\")[0];\r\n                header.innerHTML = message;\r\n                container.scrollTop = 0;\r\n                setTimeout(() => {\r\n                    header.innerHTML = \"Fill form to create exam..\"\r\n                }, 1500);\r\n            }\r\n\r\n            if (formData.get(\"name\").length < 6 || formData.get(\"name\").length > 20) displayError(\"The exam title must be between 6 to 20 characters..\")\r\n\r\n            else if (new Date() > new Date(formData.get(\"start-date\") + \" \" + formData.get(\"start-time\"))) {\r\n                displayError(\"The start time must be ahead of the current time by at least 30 minutes\")\r\n            }\r\n\r\n            else {\r\n                let data = {\r\n                    name: formData.get(\"name\"),\r\n                    total: formData.get(\"total\"),\r\n                    number: formData.get(\"questions\"),\r\n                    num_of_students: formData.get(\"students\"),\r\n                    start: formData.get(\"start-date\") === null ? null : new Date(formData.get(\"start-date\") + \" \" + formData.get(\"start-time\")).toJSON(),\r\n                    verification: formData.get(\"veri-check\") === \"on\",\r\n                    specific: formData.get(\"specific\") === \"\" ? null : formData.get(\"specific\"),\r\n                    personal: formData.get(\"personal\"),\r\n                    duration: formData.get(\"duration\") === null ? null : formData.get(\"duration\") * 60,\r\n                    exam_code: Number(new Date())\r\n                }\r\n\r\n                var destination = {};\r\n\r\n                props.load();\r\n                apiFetch(\"POST\", `exam/${props.token}/aall`, data, destination).then(\r\n                    () => {\r\n                        props.load();\r\n                        if (destination.status === 200) {\r\n                            displayError(\"the exam has been created...\");\r\n                            window.location.reload();\r\n                            props.change(\"view\")\r\n                        } else {\r\n                            displayError(\"the exam could not be created\")\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        let form = document.getElementById(\"exam-create-form\");\r\n        form.addEventListener(\"submit\", handleExamCreate);\r\n\r\n        return function cleanup() {\r\n            form.removeEventListener(\"submit\", handleExamCreate)\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className='exam-create-div'>\r\n            <div style={{ display: \"flex\", position: \"sticky\" }}>\r\n                <h2 className='back-button grow' onClick={\r\n                    () => {\r\n                        document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"none\";\r\n                    }\r\n                }>&#8630; </h2>\r\n                <h2 id=\"create-header\">Fill form to create exam..</h2>\r\n            </div>\r\n            <form id=\"exam-create-form\">\r\n                <input className='create-form-input' style={{ border: \"cornsilk 3px solid\", textAlign: \"center\" }} type=\"text\" name=\"name\" placeholder=\"The Exam Title\" required></input>\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"students-check\" onChange={event => { disableValue(event, \"students\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"students-header\">number of students </h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" min=\"0\" max=\"200\" name=\"students\" id=\"students\" disabled></input>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"questions-check\" onChange={event => { disableValue(event, \"questions\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"questions-header\">number of questions</h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" min=\"0\" max=\"200\" name=\"questions\" id=\"questions\" disabled></input>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"total-check\" onChange={event => { disableValue(event, \"total\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"total-header\"> total marks </h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" name=\"total\" id=\"total\" disabled></input>\r\n                    </div>\r\n\r\n                    <div style={{ marginLeft: \"20px\" }}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"start-check\" onChange={event => { disableValue(event, \"start\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"start-header\">start time</h4>\r\n                        </div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input className='create-form-input' type=\"date\" name=\"start-date\" id=\"start\" disabled></input>\r\n                            <input className='create-form-input' type='time' name=\"start-time\" id=\"start-time\" disabled></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"duration-check\" onChange={event => { disableValue(event, \"duration\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"duration-header\"> exam duration(mins)</h4>\r\n                        </div>\r\n                        <input className='create-form-input' type=\"number\" name=\"duration\" id=\"duration\" min=\"5\" max=\"300\" disabled></input>\r\n                    </div>\r\n\r\n                    <div style={{ marginLeft: \"20px\" }}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"personal-check\" onChange={event => { disableValue(event, \"personal\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"personal-header\">student time(mins)</h4>\r\n                        </div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input className='create-form-input' type=\"number\" name=\"personal\" id=\"personal\" min=\"5\" max=\"300\" disabled></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-between\", marginTop: \"40px\" }} >\r\n                    <div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"veri-check\" onChange={event => { disableValue(event, \"veri\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"cornsilk\" }} id=\"total-header\"> student verification </h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ marginLeft: \"20px\" }}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <input type=\"checkbox\" name=\"spec-check\" id=\"spec-check\" onChange={event => { disableValue(event, \"spec\") }}></input>\r\n                            <h4 style={{ margin: \"0px\", color: \"rgba(255, 248, 220, 0.474)\" }} id=\"spec-header\">specific students</h4>\r\n                        </div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <textarea className='create-form-input' name=\"spec\" id=\"spec\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                    <button type='submit' className='exam-create-but shadow-5 grow'> Create exam</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction Exam(props) {\r\n    let [exam_data, setExam] = useState({\r\n        loading: true,\r\n        data: null\r\n    })\r\n\r\n    let [exam_page, setExamPage] = useState({\r\n        exam: false,\r\n        id: null\r\n    })\r\n\r\n    let [page, setPage] = useState('view');\r\n\r\n    function fetchExamDetails() {\r\n        var examData = {};\r\n        props.load();\r\n        apiFetch(\"GET\", `exam/${props.token}/all`, {}, examData).then(\r\n            () => {\r\n                props.load();\r\n                if (examData.status === 200) {\r\n                    setExam({\r\n                        loading: false,\r\n                        data: examData.data\r\n                    })\r\n                } else {\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function selectPage(page) {\r\n        if (!exam_data.loading) {\r\n            switch (page) {\r\n                case \"view\":\r\n                    return <ViewPage data={exam_data} num={props.user.exam} view={setExamPage} />\r\n                case \"create\":\r\n                    return <CreateExam load={props.load} change={setPage} token={props.token} />\r\n            }\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchExamDetails();\r\n    }, [])\r\n    return !exam_page.exam ? (\r\n        <div className='exam-main'>\r\n            <div className='exam-action'>\r\n                <div className='section-header'>\r\n                    <h2 style={{ margin: \"0px\" }}>Manage Exams</h2>\r\n                </div>\r\n                <div className='exam-details shadow-5'>\r\n                    <h2 style={{ margin: \"0px\" }}>Total exams: {props.user.exam}</h2>\r\n\r\n                    <div></div>\r\n\r\n                </div>\r\n\r\n                <div className='exam-action-group'>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create..</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"view\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"view\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> View..</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> list of exams with exam actions </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create exam</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button className={`exam-action-butt grow`}\r\n                        onClick={() => {\r\n                            setPage(\"create\")\r\n                            document.getElementsByClassName(\"exam-action-page\")[0].style.display = \"flex\";\r\n                        }}>\r\n                        <div>\r\n                            <h3 className={`${page === \"create\" ? \"active\" : \"\"}`} style={{ margin: \"0px\", textAlign: \"start\" }}> Create exam</h3>\r\n                            <h5 style={{ margin: \"0px\", marginTop: \"10px\" }}> make new exams </h5>\r\n                        </div>\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='exam-action-page'>\r\n                {selectPage(page)}\r\n            </div>\r\n\r\n        </div>\r\n    ) : (\r\n        <ExamDetail token={props.token} exam_id={exam_page.id} load={props.load} view={setExamPage} />\r\n    )\r\n\r\n}\r\n\r\nexport default Exam;","export default __webpack_public_path__ + \"static/media/examio2.197b2829.png\";","export default __webpack_public_path__ + \"static/media/profile.05d0404a.png\";","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { apiFetch } from '../functions/function';\r\nimport Exam from '../components/Exam';\r\nimport examio from '../assets/examio2.png';\r\nimport profile from '../assets/profile.png';\r\nimport Loading from \"../components/Loading\";\r\nimport '../css/account.css';\r\n\r\nfunction Sidebar(props) {\r\n    let [butt, setButt] = useState((\r\n        function(word) {\r\n            let str = [...word];\r\n            str[0] = str[0].toUpperCase();\r\n            return str.join(\"\")\r\n        }\r\n    )(props.page));\r\n    let [buttons, setButtons] = useState([]);\r\n\r\n    let butList = [\r\n        \"Dashboard\",\r\n        \"Exams\",\r\n        \"Settings\",\r\n        \"Profile\"\r\n    ];\r\n\r\n    let butCompList = [];\r\n\r\n    useEffect(() => {\r\n        for (let i of butList) {\r\n            if (i === butt) {\r\n\r\n                butCompList.push(\r\n                    <div className='side-but-cont border-left'>\r\n                        <button className='side-but' style={{ backgroundColor: \"rgb(46, 45, 45)\" }}>{i}</button>\r\n                    </div>\r\n                )\r\n            } else {\r\n                butCompList.push(\r\n                    <div className={`side-but-cont ${(butList.indexOf(i) - butList.indexOf(butt)) === -1 ? '' : 'bottom-border'}`}>\r\n                        <button className='side-but' onClick={() => (\r\n                            function (butt) {\r\n                                setButt(butt);\r\n                                props.url_push('/account/' + butt.toLowerCase())\r\n                            }\r\n                        )(i)}>{i}</button>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        setButtons(butCompList)\r\n\r\n    }, [butt])\r\n    return (\r\n        <div className=\"account-side\">\r\n            <div className='logo-div'>\r\n                <img src={examio} height=\"20\" width=\"80\"></img>\r\n            </div>\r\n            <div className='side-profile'>\r\n                <div className='profile-pic'>\r\n                    <img src={profile}></img>\r\n                </div>\r\n\r\n                <div className='profile-name'>\r\n                    <h3 style={{ margin: \"3px\" }}>{props.user.name}</h3>\r\n                    <h5 style={{ margin: \"3px\" }} className='leylow'>{props.user.email}</h5>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='side-actions'>\r\n                {buttons}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Account(props) {\r\n    const history = useHistory()\r\n    let [userInfo, setInfo] = useState({})\r\n    let [show, setShow] = useState(false)\r\n    var loader = false;\r\n\r\n    let load = () => {\r\n        loader = !loader;\r\n        setShow(loader);\r\n    }\r\n\r\n    var data = {};\r\n\r\n    function getUserInfo() {\r\n        if (props.user.token !== null) {\r\n            load();\r\n            apiFetch(\"GET\", `info/${props.user.token}`, {}, data)\r\n                .then(() => {\r\n                    load()\r\n                    if (data.status === 200) {\r\n                        setInfo(data.data.info);\r\n                    } else {\r\n                        history.push(\"/home\");\r\n                    }\r\n                })\r\n        } else {\r\n            history.push('/home');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserInfo();\r\n    }, [])\r\n\r\n\r\n\r\n    function selectPage(page) {\r\n        switch (page) {\r\n            case \"exams\":\r\n                return (\r\n                    <Exam user={userInfo} load={load} token={props.user.token}/>\r\n                )\r\n        \r\n            default:\r\n                return <h1>404.. page not found</h1>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='account-main'>\r\n            <div className=\"mobile-nav\">\r\n            <img src={examio} height=\"20\" width=\"80\"></img>\r\n\r\n            <h2 style={{cursor: \"pointer\"}} onClick={() => {\r\n                document.getElementsByClassName(\"account-side\")[0].style.width = \"250px\";\r\n\r\n                setTimeout(() => {\r\n                document.getElementsByClassName(\"mobile-div\")[0].style.display = \"block\";\r\n                }, 650)\r\n            }}>&#9776;</h2>\r\n\r\n            </div>\r\n            <div className='mobile-div' onClick={() => {\r\n                document.getElementsByClassName(\"account-side\")[0].style.width = \"0px\"\r\n                document.getElementsByClassName(\"mobile-div\")[0].style.display = \"none\"\r\n            }}>\r\n\r\n            </div>\r\n            <Loading show={show} />\r\n            <Sidebar url_push={history.push} user={userInfo} page={props.match.params.page}/>\r\n            <div className='account-cont'>\r\n                {selectPage(props.match.params.page)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Account;","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiFetch } from \"../functions/function\";\r\nimport \"../css/login.css\";\r\nimport examio from \"../assets/examio2.png\";\r\n\r\nfunction Login(props) {\r\n    const history = useHistory()\r\n\r\n    function handleRequestError(err) {\r\n        let head = document.getElementById(\"log-head\");\r\n        head.innerHTML = err\r\n        setTimeout(() => {\r\n            head.innerHTML = \"Sign in..\"\r\n        }, 2500)\r\n\r\n    }\r\n    function handleLoginSubmit(e) {\r\n        var response = {};\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        let data = {\r\n            email: formData.get(\"email\"),\r\n            password: formData.get(\"password\")\r\n        }\r\n        props.load();\r\n        apiFetch(\"POST\", \"login\", data, response).then(() => {\r\n            props.load();\r\n\r\n            if (response.status === 200) {\r\n                let res_data = response.data;\r\n                if (res_data.login) {\r\n                    props.loginFunc(res_data);\r\n                    history.push('/account/dashboard/')\r\n                }\r\n            } else {\r\n                handleRequestError(\"Wrong details..\")\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    useEffect(() => {\r\n        let form = document.getElementById(\"login-form\");\r\n\r\n        form.addEventListener('submit', handleLoginSubmit)\r\n\r\n        return function cleanup() {\r\n            form.removeEventListener('submit', handleLoginSubmit)\r\n        }\r\n\r\n    }, [])\r\n    return (\r\n        <div className=\"center-div\">\r\n            <div className=\"logo\"><img src={examio} height=\"20\" width=\"90\"></img></div>\r\n            <button className=\"log-but grow\" onClick={() => {history.push(\"/signup\")}}>sign up</button>\r\n            <form id=\"login-form\" className=\"shadow-5\">\r\n                <div className=\"log-header\">\r\n                    <h2 style={{ margin: \"0px\" }} id=\"log-head\">Sign in..</h2>\r\n                </div>\r\n\r\n                <div className=\"log-form-arrange\">\r\n                    <input type=\"email\" name=\"email\" className=\"log-input\" placeholder=\"email\" required=\"required\"></input>\r\n                    <input type=\"password\" name=\"password\" className=\"log-input\" placeholder=\"password\" required=\"required\"></input>\r\n\r\n                    <button type=\"submit\" className=\"log-butt grow\"> login</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"log-foot\"><h4>examio &copy; {new Date().getFullYear()}</h4></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../css/login.css\";\r\nimport examio from \"../assets/examio2.png\";\r\n\r\nfunction Signup(props) {\r\n    const history = useHistory();\r\n    return (\r\n        <div className=\"center-div\">\r\n            <div className=\"logo\"><img src={examio} height=\"20\" width=\"90\"></img></div>\r\n            <button className=\"log-but grow\" onClick={() => { history.push(\"/login\") }}>login</button>\r\n            <form id=\"signup-form\" className=\"shadow-5\">\r\n                <div className=\"log-header\">\r\n                    <h2 style={{ margin: \"0px\" }} id=\"log-head\">Sign up..</h2>\r\n                </div>\r\n\r\n                <div className=\"log-form-arrange\" style={{height : \"100%\", overflow : \"scroll\", margin : \"0px\"}}>\r\n\r\n                    <input type=\"email\" name=\"email\" className=\"log-input\" placeholder=\"email\" required=\"required\"></input>\r\n                    <input type=\"password\" name=\"password\" className=\"log-input\" placeholder=\"password\" required=\"required\"></input>\r\n\r\n                    <button type=\"submit\" className=\"log-butt grow\"> login</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"log-foot\"><h4>examio &copy; {new Date().getFullYear()}</h4></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Signup;","import {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport {useState, useEffect} from 'react'\nimport Cookie from 'js-cookie';\nimport 'tachyons';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport Loading from './components/Loading';\nimport Home from './pages/Home'\nimport Account  from './pages/Account';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\n\nfunction App() {\n  AOS.init()\n\n  let [user, setUser] = useState({         // the user state\n    name: Cookie.get(\"name\"),\n    token: Cookie.get(\"token\")\n  })\n\n  let loader = false\n\n  let [load, setLoad] = useState(false)\n\n  function loadFunc () {\n    console.log(\"yeah\")\n    loader = !loader\n    setLoad(loader)\n  }\n\n  let login = data => {                    // logs the user and save the data as a cookie\n    if(data.name !== undefined && data.token !== undefined) {\n      Cookie.set(\"name\", data.name);\n      Cookie.set(\"token\", data.token)\n\n      setUser({\n        name: data.name,\n        token : data.token\n      })\n      return \"the data is correct\"\n    } else {\n      return \"the data is not correct\"\n    }\n  }\n\n  let logout = () => {\n    setUser({\n      name : null,\n      token : null\n    })\n    Cookie.remove(\"name\");\n    Cookie.remove(\"token\");\n  }\n\n  return(\n    <Router basename={process.env.PUBLIC_URL}>\n      <Loading show={load}/>\n      <Switch>\n        <Route path='/' exact component={(props) => <Home {...props} user={user} />}/>\n        <Route path='/home' exact component={(props) => <Home {...props} user={user} />}/>\n        <Route path='/account/:page' exact component={ (props) => <Account user={user} \n                                  loginFunc={login} logoutFunc={logout} {...props} load={loadFunc}/>}/>\n        <Route path='/login' exact component={() => <Login loginFunc={login} load={loadFunc}/>}/>\n        <Route path='/signup' exacy component={() => <Signup load={loadFunc}/>}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}